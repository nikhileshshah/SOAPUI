<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="CLFY15 WebServices" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" id="1897a67f-c09e-4be6-a716-c8894b4e889f" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="TestSuite 1"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Sumit\SOAPUI\FAST\TmpReports"/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CreerDemandePort" type="wsdl" bindingName="{http://sigc.sfr.com/CreerDemande}CreerDemandePort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerDemandeV2.wsdl" id="96cc2cdd-87fe-4330-a7bc-fec95654c75b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerDemandeV2.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerDemandeV2.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="CreerDemande" targetNamespace="http://sigc.sfr.com/CreerDemande" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/CreerDemande" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/CreerDemande" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/CreerDemande" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="02.00"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdDemande">
        <xsd:annotation>
          <xsd:documentation>Id de la demande creer</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdTechDemande">
        <xsd:annotation>
          <xsd:documentation>Technical identifier of the case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
          <xsd:enumeration value="0010"/>
          <xsd:enumeration value="0011"/>
          <xsd:enumeration value="0012"/>
          <xsd:enumeration value="0014"/>
          <xsd:enumeration value="0015"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="idDemande" type="tns:IdDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="tns:IdTechDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="CreerDemandeResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="Contact">
        <xsd:annotation>
          <xsd:documentation>Identifiant technique du contact</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MotifDemande">
        <xsd:annotation>
          <xsd:documentation>Code du motif</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeActe">
        <xsd:annotation>
          <xsd:documentation>Code de l'Acte de Gestion</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CompteClient">
        <xsd:annotation>
          <xsd:documentation>Identifiant fonctionnel du Compte Client</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Personne">
        <xsd:annotation>
          <xsd:documentation>Identifiant fonctionnel de la personne physique ou morale.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string"></xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypePersonne">
        <xsd:annotation>
          <xsd:documentation>Physique ou Morale</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="9"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Utilisateur">
        <xsd:annotation>
          <xsd:documentation>Login identifiant l'utilisateur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Commentaire">
        <xsd:annotation>
          <xsd:documentation>Comment of the case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="400"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Nature">
        <xsd:annotation>
          <xsd:documentation>Nature of the case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ActiviteDemande">
        <xsd:annotation>
          <xsd:documentation>Code of the reason of the Case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeSIOffre">
        <xsd:annotation>
          <xsd:documentation>Identify the connecting SI Offer</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{2}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroSIOffre">
        <xsd:annotation>
          <xsd:documentation>Number of installed service package in the connecting SI Offer</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
          <xsd:pattern value="[0-9A-Z]{6}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Nom">
        <xsd:annotation>
          <xsd:documentation>Name of the additional information</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Description">
        <xsd:annotation>
          <xsd:documentation>Description of the additional information</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Donnees">
        <xsd:sequence>
          <xsd:element name="nom" type="Nom" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="description" type="Description" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="contact" type="Contact" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="motifDemande" type="MotifDemande" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeActe" type="TypeActe" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="compteClient" type="CompteClient" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="personne" type="Personne" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="typePersonne" type="TypePersonne" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="utilisateur" type="Utilisateur" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="dateCreation" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="commentaire" type="Commentaire" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="nature" type="Nature" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="activite" type="ActiviteDemande" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="codeSIOffre" type="CodeSIOffre" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="numeroSIOffre" type="NumeroSIOffre" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="donnees" type="Donnees" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="CreerDemande">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="CreerDemandeResponse">
    <wsdl:part element="parts:CreerDemandeResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/CreerDemande"/>
  </wsdl:message>
  <wsdl:message name="CreerDemande">
    <wsdl:part element="parts:CreerDemande" name="donnees" xmlns:parts="http://sigc.sfr.com/CreerDemande"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="CreerDemandePort">
    <wsdl:operation name="CreerDemande">
      <wsdl:input message="tns:CreerDemande"/>
      <wsdl:output message="tns:CreerDemandeResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CreerDemandePort" type="tns:CreerDemandePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="CreerDemande">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CreerDemandeService">
    <wsdl:port binding="tns:CreerDemandePort" name="CreerDemandeService">
      <soap:address location="http://localhost:7001/webservices/CreerDemande/V2.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/webservices/CreerDemande/V2.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="creerDemande" bindingOperationName="CreerDemande" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3937a2f6-f5a6-49aa-8b20-ca37db0ce927"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CreerContactPort" type="wsdl" bindingName="{http://sigc.sfr.com/creerContact}CreerContactPort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerContactV3.wsdl" id="e2731d75-841e-4e85-bfca-8329d1688f61" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/creerContactV3.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/creerContactV3.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://sigc.sfr.com/creerContact" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/creerContact" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/creerContact" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/creerContact" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="0" maxOccurs="1" fixed="03.00" nillable="true"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="0" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdContact">
        <xsd:annotation>
          <xsd:documentation>id du contact</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Sens">
        <xsd:annotation>
          <xsd:documentation>Sens de communication</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idContact" type="tns:IdContact"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="sens" type="tns:Sens"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="creerContactResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="ClfyIdPersonnePhysique">
        <xsd:annotation>
          <xsd:documentation>Id externe de la Personne Physique</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonnePhysique">
        <xsd:annotation>
          <xsd:documentation>Id fonctionnel de la Personne Physique</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LoginUtilisateur">
        <xsd:annotation>
          <xsd:documentation>Login utilisateur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CanalContact">
        <xsd:annotation>
          <xsd:documentation>Canal du contact</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:annotation>
          <xsd:documentation>Media du contact</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDossier">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SujetContactSortant">
        <xsd:annotation>
          <xsd:documentation>Sujet du contact sortant</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="clfyIdPersonnePhysique" type="ClfyIdPersonnePhysique" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncPersonnePhysique" type="IdFoncPersonnePhysique" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncDemande" type="IdFoncDemande" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncDossier" type="IdFoncDossier" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="utilisateur" type="LoginUtilisateur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="canalContact" type="CanalContact" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="mediaContact" type="MediaContact" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="sujetContactSortant" type="SujetContactSortant" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="creerContact">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="creerContactResponse">
    <wsdl:part element="parts:creerContactResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/creerContact"/>
  </wsdl:message>
  <wsdl:message name="creerContact">
    <wsdl:part element="parts:creerContact" name="donnees" xmlns:parts="http://sigc.sfr.com/creerContact"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="CreerContactPort">
    <wsdl:operation name="creerContact">
      <wsdl:input message="tns:creerContact"/>
      <wsdl:output message="tns:creerContactResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CreerContactPort" type="tns:CreerContactPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="creerContact">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CreerContactService">
    <wsdl:port binding="tns:CreerContactPort" name="CreerContactService">
      <soap:address location="http://localhost:7001/webservices/CreerContactService/V3.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crct3/CreerContactService/V3.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="creerContact" bindingOperationName="creerContact" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="50223f13-ce95-4ed5-8a3d-d6a6d995a54e"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CloreContactPort" type="wsdl" bindingName="{http://sigc.sfr.com/cloreContact}CloreContactPort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreContactV2.wsdl" id="2eb848c8-a75e-4e86-87ac-71aefed46e61" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreContactV2.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreContactV2.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://sigc.sfr.com/cloreContact" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/cloreContact" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/cloreContact" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/cloreContact" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="02.00" nillable="true"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cloreContactResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="IdContact">
        <xsd:annotation>
          <xsd:documentation>Id technique du contact</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="idContact" type="IdContact" minOccurs="0" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cloreContact">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="cloreContactResponse">
    <wsdl:part element="parts:cloreContactResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/cloreContact"/>
  </wsdl:message>
  <wsdl:message name="cloreContact">
    <wsdl:part element="parts:cloreContact" name="donnees" xmlns:parts="http://sigc.sfr.com/cloreContact"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="CloreContactPort">
    <wsdl:operation name="cloreContact">
      <wsdl:input message="tns:cloreContact"/>
      <wsdl:output message="tns:cloreContactResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CloreContactPort" type="tns:CloreContactPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="cloreContact">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CloreContactService">
    <wsdl:port binding="tns:CloreContactPort" name="CloreContactService">
      <soap:address location="http://localhost:7001/webservices/CloreContactService/V2.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clct/CloreContactService/V2.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="cloreContact" bindingOperationName="cloreContact" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="42d7d46a-ea6d-4667-afd0-f9304d27ecd8"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ModifierAdressePort" type="wsdl" bindingName="{http://sigc.sfr.com/modifierAdresse}ModifierAdressePort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierAdresseV5.wsdl" id="8c695812-c63c-4f12-9a8d-57f6f3a6b094" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierAdresseV5.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierAdresseV5.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ModifierAdresse" targetNamespace="http://sigc.sfr.com/modifierAdresse" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/modifierAdresse" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/modifierAdresse" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/modifierAdresse" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:simpleType name="TypePersonne">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="ajoutAdresse" type="tns:AjoutAdresse"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="annulationADGE" type="xsd:boolean"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdADGE" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdActionProActive" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdCompteClient" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdContact" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdPersonneDemandeur" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdPersonnePorteSur" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="dateEcheance" type="xsd:dateTime"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="modificationAdresse" type="tns:ModificationAdresse"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="typePersonneDemandeur" type="tns:TypePersonne"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="typePersonnePorteSur" type="tns:TypePersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncCompteClient" type="tns:IdFoncCompteClient"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="tns:IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncPersonneDemandeur" type="xsd:int"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncPersonnePorteSur" type="xsd:int"/>
          <xsd:element name="vraiFauxNotification" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="modifierAdresse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sessionId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="canalContact" type="tns:CanalContact"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="entete" type="tns:Entete"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mediaContact" type="tns:MediaContact"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="question" type="tns:Question"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="distributeur" type="tns:Distributeur"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="CLFY"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="05.00"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="EtatDeNormalisation">
        <xsd:annotation>
          <xsd:documentation>Precise si l'adresse a ete normalisee</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="O"/>
          <xsd:enumeration value="N"/>
          <xsd:enumeration value="F"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ComplementIdentite">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ComplementGeographique">
        <xsd:annotation>
          <xsd:documentation>Complement d'Adresse : immeuble, batiment, residence, zone industrielle</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroEtVoie">
        <xsd:annotation>
          <xsd:documentation>Numero dans la voie, type et nom de la voie</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LieuDitBoitePostale">
        <xsd:annotation>
          <xsd:documentation>Lieu-dit ou Boite postale ou localite</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePostal">
        <xsd:annotation>
          <xsd:documentation>Code postal</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Ville">
        <xsd:annotation>
          <xsd:documentation>Correspond au bureau Distributeur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePays">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="AdressePostale">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="etatNormalisation" type="tns:EtatDeNormalisation"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="complementIdentite" type="tns:ComplementIdentite"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="complementGeographique" type="tns:ComplementGeographique"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="numeroEtVoie" type="tns:NumeroEtVoie"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="lieuDitBoitePostale" type="tns:LieuDitBoitePostale"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codePostal" type="tns:CodePostal"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="ville" type="tns:Ville"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="pays" type="tns:CodePays"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ClfyIdCompteLie">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeUtilisationAdresse">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Titulaire"/>
          <xsd:enumeration value="Facturation"/>
          <xsd:enumeration value="Utilisateur"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroLigne">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{10}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeSCS">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
          <xsd:pattern value="[0-9]{2}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCSU">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
          <xsd:pattern value="[0-9A-Z]{6}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="CompteDeServiceUtilisateur">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyId" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="numeroLignePrincipale" type="tns:NumeroLigne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeSCS" type="tns:CodeSCS"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="numeroCSU" type="tns:NumeroCSU"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UtilisationAdresse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdCompteLie" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncCompteLie" type="tns:IdFoncCompteLie"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="type" type="tns:TypeUtilisationAdresse"/>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="csu" type="tns:CompteDeServiceUtilisateur"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CrNormalisation">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteLie">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="AjoutAdresse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="nouvelleAdresseData" type="tns:AdressePostale"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="ancienneAdresseData" type="tns:AdressePostale"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="crNormalisation" type="tns:CrNormalisation"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="utilisationCible" type="tns:UtilisationAdresse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ModificationAdresse">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="clfyIdAdresseEquivalente" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="crNormalisation" type="tns:CrNormalisation"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="clfyIdAdressePrincipale" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="nouvelleAdresseData" type="tns:AdressePostale"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="ancienneAdresseData" type="tns:AdressePostale"/>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="utilisationCible" type="tns:UtilisationAdresse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Adresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="EMAIL"/>
          <xsd:enumeration value="COURRIER"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Notification">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="adresse" type="tns:Adresse"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdPersonne" type="tns:ClfyIdPersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncPersonne" type="tns:IdFoncPersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="media" type="tns:Media"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typePersonne" type="tns:TypePersonne"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="MotifADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="EligibiliteOffre">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="motifADG" type="tns:MotifADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="codeADG" type="tns:CodeADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="libelleADG" type="tns:LibelleADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ADG">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncADG" type="tns:IdFoncADG"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="tns:IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechADG" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="tns:ClfyId"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ClfyIdDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ResultatEligibiliteOffre">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Distributeur">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="codePDV" type="tns:CodePDV"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="calculette" type="tns:Calculette"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="login" type="tns:Login"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typelogin" type="tns:Typelogin"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="canal" type="tns:Canal"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodePDV">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Calculette">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Login">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Typelogin">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Canal">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CanalContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SFC"/>
          <xsd:enumeration value="RC"/>
          <xsd:enumeration value="DIS"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FAX"/>
          <xsd:enumeration value="Dossier"/>
          <xsd:enumeration value="Chat"/>
          <xsd:enumeration value="Email"/>
          <xsd:enumeration value="Voix"/>
          <xsd:enumeration value="Courrier"/>
          <xsd:enumeration value="Boite Vocale"/>
          <xsd:enumeration value="Telephone"/>
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="WEB"/>
          <xsd:enumeration value="WAP"/>
          <xsd:enumeration value="SVI"/>
          <xsd:enumeration value="Distribution"/>
          <xsd:enumeration value="TV"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="resultat" type="tns:Resultat"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="notification" type="tns:Notification"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="eligibiliteOffre" type="tns:EligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdDemande" type="tns:ClfyIdDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdContact" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="resultatEligibiliteOffre" type="tns:ResultatEligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="adg" type="tns:ADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="modifierAdresseResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="modifierAdresseResponse">
    <wsdl:part element="parts:modifierAdresseResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/modifierAdresse"/>
  </wsdl:message>
  <wsdl:message name="modifierAdresse">
    <wsdl:part element="parts:modifierAdresse" name="donnees" xmlns:parts="http://sigc.sfr.com/modifierAdresse"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="ModifierAdressePort">
    <wsdl:operation name="modifierAdresse">
      <wsdl:input message="tns:modifierAdresse"/>
      <wsdl:output message="tns:modifierAdresseResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModifierAdressePort" type="tns:ModifierAdressePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="modifierAdresse">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModifierAdresse">
    <wsdl:port binding="tns:ModifierAdressePort" name="ModifierAdresse">
      <soap:address location="http://localhost:7001/clfy_maV5/ModifierAdresse/V5.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="modifierAdresse" bindingOperationName="modifierAdresse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="43939850-d7bd-4cf9-be07-8cfcfd1c55d6"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ModifierPersonnePhysiquePort" type="wsdl" bindingName="{http://sigc.sfr.com/modifierPersonnePhysique}ModifierPersonnePhysiquePort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierPersonnePhysiqueV5.wsdl" id="cad66637-3b30-4259-8c22-34d9d26cd7c4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierPersonnePhysiqueV5.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierPersonnePhysiqueV5.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ModifierPersonnePhysique" targetNamespace="http://sigc.sfr.com/modifierPersonnePhysique" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/modifierPersonnePhysique" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/modifierPersonnePhysique" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns="http://sigc.sfr.com/modifierPersonnePhysique" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="modifierPersonnePhysique">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="canalContact" type="CanalContact" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="clfyIdActionProActive" type="ClfyIdActionProActive" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdCompteClient" type="ClfyIdCompteClient" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdContact" type="ClfyIdContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdPersonneDemandeur" type="ClfyIdPersonneDemandeur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdPersonneUtilisateur" type="ClfyIdPersonneUtilisateur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="distributeur" type="Distributeur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="idFoncCompteClient" type="IdFoncCompteClient" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncDemande" type="IdFoncDemande" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncPersonneDemandeur" type="IdFoncPersonneDemandeur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncPersonneUtilisateur" type="IdFoncPersonneUtilisateur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="mediaContact" type="MediaContact" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="numCSU" type="NumCSU" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="numSCS" type="NumSCS" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="role" type="Role" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="structureUtilisateur" type="Utilisateur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="typePersonneDemandeur" type="TypePersonneDemandeur" minOccurs="0" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="Role">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Utilisateur"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdContact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdActionProActive">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonneDemandeur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonneDemandeur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypePersonneDemandeur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumSCS">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumCSU">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonneUtilisateur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonneUtilisateur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CanalContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SFC"/>
          <xsd:enumeration value="RC"/>
          <xsd:enumeration value="DIS"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FAX"/>
          <xsd:enumeration value="Dossier"/>
          <xsd:enumeration value="Chat"/>
          <xsd:enumeration value="Email"/>
          <xsd:enumeration value="Voix"/>
          <xsd:enumeration value="Courrier"/>
          <xsd:enumeration value="Boite Vocale"/>
          <xsd:enumeration value="Telephone"/>
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="WEB"/>
          <xsd:enumeration value="WAP"/>
          <xsd:enumeration value="SVI"/>
          <xsd:enumeration value="Distribution"/>
          <xsd:enumeration value="TV"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="05.00"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <!--added distributeur input paramter for v4-->
      <xsd:complexType name="Distributeur">
        <xsd:sequence>
          <xsd:element name="codePDV" type="CodePDV" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="calculette" type="Calculette" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="login" type="Login" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typelogin" type="Typelogin" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="canal" type="Canal" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodePDV">
        <xsd:annotation>
          <xsd:documentation>Code point de vente</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Calculette">
        <xsd:annotation>
          <xsd:documentation>Calculette securid</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Login">
        <xsd:annotation>
          <xsd:documentation>Login of the applicant of ADG</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Typelogin">
        <xsd:annotation>
          <xsd:documentation>Type of Login of the applicant of ADG</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Canal">
        <xsd:annotation>
          <xsd:documentation>Canal of the applicant of ADG</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Utilisateur">
        <xsd:sequence>
          <xsd:element name="utilisateur" type="PersonnePhysique" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="adresse" type="Adresse" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="estDelegue" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="creationExplicite" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="niveauHabilitation" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncPersonneCible" type="IdFoncPersonneCible" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdFoncPersonneCible">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PersonnePhysique">
        <xsd:sequence>
          <xsd:element name="civilite" type="Civilite" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="nom" type="Nom" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="prenom" type="Prenom" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="dateNaissance" type="xsd:date" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="departementNaissance" type="Departement" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codeProfession" type="CodeProfession" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="denominationAdditionnelle" type="DenominationAdditionnelle" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="contactPrivilegie" type="PersonneContact" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="email1" type="AdresseMail" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="stopMail1" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="email2" type="AdresseMail" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="stopMail2" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="telephoneFixe" type="Telephone" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="telephoneMobile" type="Telephone" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="telephoneFax" type="Telephone" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Civilite">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MR"/>
          <xsd:enumeration value="MME"/>
          <xsd:enumeration value="MLLE"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Nom">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Prenom">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Departement">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{2,3}|2A|2B"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeProfession">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DenominationAdditionnelle">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AdresseMail">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[a-zA-Z0-9\-\._]+@[a-zA-Z0-9\-\._]+\.[a-zA-Z]+"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LangueUsage">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaPrefere">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PersonneContact">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="heureContactPrivilegiee1" type="HeureContactPrivilegiee1"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="heureContactPrivilegiee2" type="HeureContactPrivilegiee2"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="heureContactPrivilegiee3" type="HeureContactPrivilegiee3"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="jourContactPrivilegie1" type="JourContactPrivilegie1"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="jourContactPrivilegie2" type="JourContactPrivilegie2"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="jourContactPrivilegie3" type="JourContactPrivilegie3"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="langueUsage" type="LangueUsage"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="mediaPrefere" type="MediaPrefere"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Indicatif">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Numero">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Telephone">
        <xsd:sequence>
          <xsd:element name="indicatif" type="Indicatif" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="numero" type="Numero" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="EtatNormalisation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="O"/>
          <xsd:enumeration value="F"/>
          <xsd:enumeration value="N"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LigneAdresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePostal">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="STCodePays">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePays">
        <xsd:restriction base="STCodePays"/>
      </xsd:simpleType>
      <xsd:simpleType name="CodePaysISO">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Adresse">
        <xsd:sequence>
          <xsd:element name="etatNormalisation" type="EtatNormalisation" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="complementIdentite" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="complementGeographique" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="numeroTypeVoieNomVoie" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="lieuDitBoitePostale" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codePostal" type="CodePostal" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="ville" type="LigneAdresse" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="codePays" type="CodePays" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codePaysISO" type="CodePaysISO" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="modifierPersonnePhysiqueResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="IdFoncPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" maxOccurs="1" minOccurs="1" type="Entete"/>
          <xsd:element name="reponse" maxOccurs="1" minOccurs="1" type="Reponse"/>
          <xsd:element name="idFoncPersonne" maxOccurs="1" minOccurs="1" type="IdFoncPersonne"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
          <xsd:enumeration value="0010"/>
          <xsd:enumeration value="0011"/>
          <xsd:enumeration value="0012"/>
          <xsd:enumeration value="0013"/>
          <xsd:enumeration value="0014"/>
          <xsd:enumeration value="0015"/>
          <xsd:enumeration value="0016"/>
          <xsd:enumeration value="0017"/>
          <xsd:enumeration value="0018"/>
          <xsd:enumeration value="0019"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MotifADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="EligibiliteOffre">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="motifADG" type="tns:MotifADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="codeADG" type="tns:CodeADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="libelleADG" type="tns:LibelleADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ADG">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncADG" type="tns:IdFoncADG"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="tns:IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechADG" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="tns:ClfyId"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Notification">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="adresse" type="tns:NotifAdresse"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdPersonne" type="tns:ClfyIdPersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncPersonne" type="tns:IdFoncPersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="media" type="tns:Media"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typePersonne" type="tns:TypePersonne"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="NotifAdresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="EMAIL"/>
          <xsd:enumeration value="COURRIER"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypePersonne">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="resultat" type="Resultat"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="LibelleErreur"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="eligibiliteOffre" type="tns:EligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdContact" type="ClfyIdContact"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="notification" type="tns:Notification"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="adg" type="tns:ADG"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="modifierPersonnePhysiqueResponse">
    <wsdl:part element="parts:modifierPersonnePhysiqueResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/modifierPersonnePhysique"/>
  </wsdl:message>
  <wsdl:message name="modifierPersonnePhysique">
    <wsdl:part element="parts:modifierPersonnePhysique" name="donnees" xmlns:parts="http://sigc.sfr.com/modifierPersonnePhysique"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="ModifierPersonnePhysiquePort">
    <wsdl:operation name="modifierPersonnePhysique">
      <wsdl:input message="tns:modifierPersonnePhysique"/>
      <wsdl:output message="tns:modifierPersonnePhysiqueResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModifierPersonnePhysiquePort" type="tns:ModifierPersonnePhysiquePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="modifierPersonnePhysique">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModifierPersonnePhysique">
    <wsdl:port binding="tns:ModifierPersonnePhysiquePort" name="ModifierPersonnePhysique">
      <soap:address location="http://localhost:7001/clfy_mppV5/ModifierPersonnePhysique/V5.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mppV5/ModifierPersonnePhysique/V5.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="modifierPersonnePhysique" bindingOperationName="modifierPersonnePhysique" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5f37343c-948b-4071-9d7c-1855cadca92b"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ModifierDonneesPersonnellesPort" type="wsdl" bindingName="{http://sigc.sfr.com/modifierDonneesPersonnelles}ModifierDonneesPersonnellesPort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierDonneesPersoV5.wsdl" id="ba9e73a9-2b64-4eb6-a359-2414620ec0da" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierDonneesPersoV5.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierDonneesPersoV5.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ModifierDonneesPersonnelles" targetNamespace="http://sigc.sfr.com/modifierDonneesPersonnelles" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/modifierDonneesPersonnelles" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/modifierDonneesPersonnelles" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns="http://sigc.sfr.com/modifierDonneesPersonnelles" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ModifDonneesPersoAnciennesValeurs">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="email1" type="Email"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="contactPrivilegieData" type="PersonneContact"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="personneMoraleData" type="DonneesPersonneMorale"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="personnePhysiqueData" type="DonneesPersonnePhysique"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="telephoneFax" type="Telephone"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="telephoneFixe" type="Telephone"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="telephoneMobile" type="Telephone"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="optIn" type="OptIn"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ClfyIdActionProActive">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdContact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonnePorteSur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonneDemandeur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LangueUsage">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PersonneContact">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="heureContactPrivilegiee1" type="HeureContactPrivilegiee1"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="heureContactPrivilegiee2" type="HeureContactPrivilegiee2"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="heureContactPrivilegiee3" type="HeureContactPrivilegiee3"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="jourContactPrivilegie1" type="JourContactPrivilegie1"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="jourContactPrivilegie2" type="JourContactPrivilegie2"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="jourContactPrivilegie3" type="JourContactPrivilegie3"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="langueUsage" type="LangueUsage"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Email">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[a-zA-Z0-9\-\._]+@[a-zA-Z0-9\-\._]+\.[a-zA-Z]+"/>
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="05.00"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodeAPE">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Contact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroTvaUE">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RaisonSociale">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Siren">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Siret">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="DonneesPersonneMorale">
        <xsd:sequence>
          <xsd:element name="codeAPE" type="CodeAPE" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="contact" type="Contact" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="numeroTvaUE" type="NumeroTvaUE" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="raisonSociale" type="RaisonSociale" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="siren" type="Siren" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="siret" type="Siret" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Civilite">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MR"/>
          <xsd:enumeration value="MME"/>
          <xsd:enumeration value="MLLE"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Nom">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Prenom">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Departement">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeSirenSiret">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{14}|[0-9]{9}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="DonneesPersonnePhysique">
        <xsd:sequence>
          <xsd:element name="civilite" type="Civilite" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="nom" type="Nom" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="prenom" type="Prenom" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="dateNaissance" type="xsd:date" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="departementNaissance" type="Departement" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="sirenSiret" type="CodeSirenSiret" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="niveauQualificationPro" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Indicatif">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Numero">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Telephone">
        <xsd:sequence>
          <xsd:element name="indicatif" type="Indicatif" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="numero" type="Numero" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="OptInType">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ValueOptInType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="START"/>
          <xsd:enumeration value="STOP"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="OptIn">
        <xsd:sequence>
          <xsd:element name="optInType" type="OptInType" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="optIn" type="ValueOptInType" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TypePersonne">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="ancienneValeur" type="ModifDonneesPersoAnciennesValeurs" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="clfyIdActionProActive" type="ClfyIdActionProActive" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncDemande" type="tns:IdFoncDemande" minOccurs="0" maxOccurs="1"></xsd:element>
          <xsd:element name="clfyIdCompteClient" type="ClfyIdCompteClient" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdContact" type="ClfyIdContact" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdPersonneDemandeur" type="ClfyIdPersonneDemandeur" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdPersonnePorteSur" type="ClfyIdPersonnePorteSur" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="contactPrivilegieData" type="PersonneContact" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="email1" type="Email" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncCompteClient" type="IdFoncCompteClient" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncPersonneDemandeur" type="xsd:int" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncPersonnePorteSur" type="xsd:int" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="personneMoraleData" type="DonneesPersonneMorale" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="personnePhysiqueData" type="DonneesPersonnePhysique" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="telephoneFax" type="Telephone" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="telephoneFixe" type="Telephone" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="telephoneMobile" type="Telephone" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="optIn" type="OptIn" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="typePersonneDemandeur" type="TypePersonne" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="typePersonnePorteSur" type="TypePersonne" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="vraiFauxNotification" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Distributeur">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="codePDV" type="CodePDV"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="calculette" type="Calculette"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="login" type="tns:Login"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typelogin" type="tns:Typelogin"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="canal" type="tns:Canal"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodePDV">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Calculette">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Login">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Typelogin">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Canal">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CanalContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SFC"/>
          <xsd:enumeration value="RC"/>
          <xsd:enumeration value="DIS"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FAX"/>
          <xsd:enumeration value="Dossier"/>
          <xsd:enumeration value="Chat"/>
          <xsd:enumeration value="Email"/>
          <xsd:enumeration value="Dossier"/>
          <xsd:enumeration value="Chat"/>
          <xsd:enumeration value="Voix"/>
          <xsd:enumeration value="Courrier"/>
          <xsd:enumeration value="Boite Vocale"/>
          <xsd:enumeration value="Telephone"/>
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="WEB"/>
          <xsd:enumeration value="WAP"/>
          <xsd:enumeration value="SVI"/>
          <xsd:enumeration value="Distribution"/>
          <xsd:enumeration value="TV"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="modifierDonneesPersonnelles">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="canalContact" type="CanalContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="mediaContact" minOccurs="0" maxOccurs="1" type="MediaContact"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="distributeur" type="Distributeur" minOccurs="0" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Adresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="EMAIL"/>
          <xsd:enumeration value="COURRIER"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Notification">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="adresse" type="tns:Adresse"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdPersonne" type="tns:ClfyIdPersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="media" type="tns:Media"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typePersonne" type="tns:TypePersonne"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="MotifADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="EligibiliteOffre">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="motifADG" type="tns:MotifADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="codeADG" type="tns:CodeADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="libelleADG" type="tns:LibelleADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ADG">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncADG" type="tns:IdFoncADG"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="tns:IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechADG" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="tns:ClfyId"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="resultat" type="Resultat"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="LibelleErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdContact" type="ClfyIdContact"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="notification" type="tns:Notification"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="eligibiliteOffre" type="tns:EligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="adg" type="tns:ADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" maxOccurs="1" minOccurs="1" type="Entete"/>
          <xsd:element name="reponse" maxOccurs="1" minOccurs="1" type="Reponse"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="modifierDonneesPersonnellesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="modifierDonneesPersonnellesResponse">
    <wsdl:part element="parts:modifierDonneesPersonnellesResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/modifierDonneesPersonnelles"/>
  </wsdl:message>
  <wsdl:message name="modifierDonneesPersonnelles">
    <wsdl:part element="parts:modifierDonneesPersonnelles" name="donnees" xmlns:parts="http://sigc.sfr.com/modifierDonneesPersonnelles"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="ModifierDonneesPersonnellesPort">
    <wsdl:operation name="modifierDonneesPersonnelles">
      <wsdl:input message="tns:modifierDonneesPersonnelles"/>
      <wsdl:output message="tns:modifierDonneesPersonnellesResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModifierDonneesPersonnellesPort" type="tns:ModifierDonneesPersonnellesPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="modifierDonneesPersonnelles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModifierDonneesPersonnelles">
    <wsdl:port binding="tns:ModifierDonneesPersonnellesPort" name="ModifierDonneesPersonnelles">
      <soap:address location="http://localhost:7001/clfy_mdpV5/ModifierDonneesPersonnelles/V5.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mdpV5/ModifierDonneesPersonnelles/V5.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="modifierDonneesPersonnelles" bindingOperationName="modifierDonneesPersonnelles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="07475166-7eb5-4ba9-b7a6-246f00afecb6"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ModifierMoyenPaiementPort" type="wsdl" bindingName="{http://sigc.sfr.com/modifierMoyenPaiement}ModifierMoyenPaiementPort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierMoyenPaiementV6.wsdl" id="c4a5a1de-79b8-43ec-85c2-b309e941921a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierMoyenPaiementV6.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierMoyenPaiementV6.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ModifierMoyenPaiement" targetNamespace="http://sigc.sfr.com/modifierMoyenPaiement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/modifierMoyenPaiement" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/modifierMoyenPaiement" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/modifierMoyenPaiement" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="modifierMoyenPaiement">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="annulationADGE" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="canalContact" type="CanalContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdActionProActive" type="ClfyId" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdCompteClient" type="ClfyId" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdContact" type="ClfyId" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdMynPmt" type="ClfyId" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdPersonneDemandeur" type="ClfyId" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="compteFacturation" type="CompteFacturation" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="dateEcheance" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="distributeur" type="Distributeur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="idFoncCompteClient" type="IdFoncCompteClient" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncDemande" type="IdFoncDemande" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncPersonneDemandeur" type="xsd:int" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="mediaContact" type="MediaContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="moyenDePaiementDataOld" type="MoyenDePaiement" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="moyenDePaiementData" type="MoyenDePaiement" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="typePersonneDemandeur" type="TypePersonne" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="vraiFauxNotification" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CanalContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SFC"/>
          <xsd:enumeration value="RC"/>
          <xsd:enumeration value="DIS"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FAX"/>
          <xsd:enumeration value="Email"/>
          <xsd:enumeration value="Dossier"/>
          <xsd:enumeration value="Chat"/>
          <xsd:enumeration value="Voix"/>
          <xsd:enumeration value="Courrier"/>
          <xsd:enumeration value="Boite Vocale"/>
          <xsd:enumeration value="Telephone"/>
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="WEB"/>
          <xsd:enumeration value="WAP"/>
          <xsd:enumeration value="SVI"/>
          <xsd:enumeration value="Distribution"/>
          <xsd:enumeration value="TV"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ApplicationSurcout">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-2]{1}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="CompteFacturation">
        <xsd:sequence>
          <xsd:element name="clfyIdADGE" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdCptFacturation" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncCompteFactu" type="IdFoncCompteFactu" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="applicationSurcout" type="ApplicationSurcout" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Distributeur">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="codePDV" type="CodePDV"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="calculette" type="Calculette"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="login" type="Login"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typelogin" type="TypeLogin"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="canal" type="Canal"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ClfyId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteFactu">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="19"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePDV">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Calculette">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Login">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeLogin">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Canal">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="06.00"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MoyenDePaiement">
        <xsd:sequence>
          <xsd:element name="type" type="tns:Type" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="compteBancaire" type="CompteBancaire" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="carteBancaire" type="CarteBancaire" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Type">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0"/>
          <xsd:enumeration value="2"/>
          <xsd:enumeration value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeCartePaiement">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Carte Bleue"/>
          <xsd:enumeration value="Amex"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="CarteBancaire">
        <xsd:sequence>
          <xsd:element name="carteDateExpiration" type="CarteDateExpiration" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="carteDetenteur" type="DetenteurCarte" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="carteNumero" type="NumeroCarte" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="carteType" type="TypeCartePaiement" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CarteDateExpiration">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DetenteurCarte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="32"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCarte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="CompteBancaire">
        <xsd:sequence>
          <xsd:element name="cle" type="Cle" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="numeroCompte" type="NumeroCompte" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="titulaireCompte" type="TitulaireCompte" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codeEtablissement" type="CodeEtablissement" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codeGuichet" type="CodeGuichet" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="iban" type="Iban" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="bic" type="Bic" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="idRum" type="IdRum" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="notificationInd" type="NotificationInd" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdRum">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="35"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NotificationInd">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="E"/>
          <xsd:enumeration value="P"/>
          <xsd:enumeration value="N"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TitulaireCompte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeEtablissement">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeGuichet">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCompte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Cle">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Iban">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="34"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Bic">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="8"/>
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="resultat" type="tns:Resultat"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdContact" type="tns:ClfyId"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="notification" type="tns:Notification"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="eligibiliteOffre" type="tns:EligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="adg" type="tns:ADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Notification">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="adresse" type="tns:Adresse"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdPersonne" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="IdFoncPersonne" type="tns:IdFoncPersonne"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="media" type="tns:Media"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="typePersonne" type="tns:TypePersonne"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Adresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Media">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="EMAIL"/>
          <xsd:enumeration value="COURRIER"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypePersonne">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="EligibiliteOffre">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="motifADG" type="tns:MotifADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="codeADG" type="tns:CodeADG"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="libelleADG" type="tns:LibelleADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ADG">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncADG" type="tns:IdFoncADG"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="tns:IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechADG" type="tns:ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="tns:ClfyId"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="MotifADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="modifierMoyenPaiementResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="modifierMoyenPaiementResponse">
    <wsdl:part element="parts:modifierMoyenPaiementResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/modifierMoyenPaiement"/>
  </wsdl:message>
  <wsdl:message name="modifierMoyenPaiement">
    <wsdl:part element="parts:modifierMoyenPaiement" name="moyenPaiement" xmlns:parts="http://sigc.sfr.com/modifierMoyenPaiement"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="ModifierMoyenPaiementPort">
    <wsdl:operation name="modifierMoyenPaiement">
      <wsdl:input message="tns:modifierMoyenPaiement"/>
      <wsdl:output message="tns:modifierMoyenPaiementResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModifierMoyenPaiementPort" type="tns:ModifierMoyenPaiementPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="modifierMoyenPaiement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModifierMoyenPaiement">
    <wsdl:port binding="tns:ModifierMoyenPaiementPort" name="ModifierMoyenPaiement">
      <soap:address location="http://localhost:7001/clfy_mmpV6/ModifierMoyenPaiement/V6.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mmpV6/ModifierMoyenPaiement/V6.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="modifierMoyenPaiement" bindingOperationName="modifierMoyenPaiement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8de9f6be-ab99-4d7c-81a0-cf5c059abde5"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="RepliquerMoyenDePaiementPort" type="wsdl" bindingName="{http://sigc.sfr.com/repliquerMoyenDePaiement}RepliquerMoyenDePaiementPort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/RepliquerMoyenDePaiementV4.wsdl" id="8dafab32-a45e-4b07-9898-82b6ffcd1f85" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/RepliquerMoyenDePaiementV4.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/RepliquerMoyenDePaiementV4.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="RepliquerMoyenDePaiement" targetNamespace="http://sigc.sfr.com/repliquerMoyenDePaiement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/repliquerMoyenDePaiement" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/repliquerMoyenDePaiement" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns="http://sigc.sfr.com/repliquerMoyenDePaiement" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="repliquerMoyenDePaiement">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="canalContact" type="CanalContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="distributeur" type="Distributeur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="mediaContact" type="MediaContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="CanalContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SFC"/>
          <xsd:enumeration value="RC"/>
          <xsd:enumeration value="DIS"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="FAX"/>
          <xsd:enumeration value="Dossier"/>
          <xsd:enumeration value="Chat"/>
          <xsd:enumeration value="Email"/>
          <xsd:enumeration value="Voix"/>
          <xsd:enumeration value="Courrier"/>
          <xsd:enumeration value="Boite Vocale"/>
          <xsd:enumeration value="Telephone"/>
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="WEB"/>
          <xsd:enumeration value="WAP"/>
          <xsd:enumeration value="SVI"/>
          <xsd:enumeration value="Distribution"/>
          <xsd:enumeration value="TV"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Distributeur">
        <xsd:sequence>
          <xsd:element name="codePdv" type="CodePdv" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="calculette" type="Calculette" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodePdv">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Calculette">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="04.00"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="clfyIdActionProActive" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdCompteClient" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdContact" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdMynPmt" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="clfyIdPersonneDemandeur" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdDemande" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateEcheance" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncCompteClient" type="IdFoncCompteClient" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncPersonneDemandeur" type="IdFoncPersonne" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="moyenPaiementData" type="MoyenPaiement" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="moyenPaiementDataOld" type="MoyenPaiement" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="compteDeFacturation" type="CompteDeFacturation" minOccurs="1" maxOccurs="unbounded"/>
          <xsd:element name="typePersonneDemandeur" type="TypePersonne" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="vraiFauxNotification" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ClfyId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypePersonne">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="MoyenPaiement">
        <xsd:sequence>
          <xsd:element name="type" type="TypeMoyenPaiement" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="compteBancaire" type="CompteBancaire" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="carteBancaire" type="CarteBancaire" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CompteDeFacturation">
        <xsd:sequence>
          <xsd:element name="clfyIdCptFacturation" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncCompteFactu" type="xsd:string" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TypeMoyenPaiement">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0"/>
          <xsd:enumeration value="2"/>
          <xsd:enumeration value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="CompteBancaire">
        <xsd:sequence>
          <xsd:element name="titulaireCompte" type="TitulaireCompte" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="codeEtablissement" type="CodeEtablissement" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="codeGuichet" type="CodeGuichet" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="numeroCompte" type="NumeroCompte" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="cle" type="Cle" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="iban" type="Iban" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="bic" type="Bic" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TitulaireCompte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="32"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeEtablissement">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeGuichet">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCompte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Cle">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Iban">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="34"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Bic">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="8"/>
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="CarteBancaire">
        <xsd:sequence>
          <xsd:element name="detenteurCartePaiement" type="DetenteurCartePaiement" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroCarte" type="NumeroCarte" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateExpiration" type="xsd:date" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="typeCarte" type="TypeCarte" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="carteValidee" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TypeCarte">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Amex"/>
          <xsd:enumeration value="Carte Bleue"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DetenteurCartePaiement">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="32"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCarte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="repliquerMoyenDePaiementResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="retour" type="Retour" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Retour">
        <xsd:sequence>
          <xsd:element name="resultat" type="Resultat" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="codeErreur" type="CodeErreur" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="libelleErreur" type="LibelleErreur" minOccurs="0" maxOccurs="1"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="clfyIdContact" type="ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncADG" type="IdFoncADG"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechADG" type="ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="ClfyId"/>
          <xsd:element name="notification" type="Notification" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Notification">
        <xsd:sequence>
          <xsd:element name="adresse" type="Adresse" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdPersonne" type="ClfyId" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncPersonne" type="IdFoncPersonne" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="media" type="MediaNotification" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typePersonne" type="TypePersonne" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Adresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaNotification">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SMS"/>
          <xsd:enumeration value="EMAIL"/>
          <xsd:enumeration value="COURRIER"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="repliquerMoyenDePaiementResponse">
    <wsdl:part element="parts:repliquerMoyenDePaiementResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/repliquerMoyenDePaiement"/>
  </wsdl:message>
  <wsdl:message name="repliquerMoyenDePaiement">
    <wsdl:part element="parts:repliquerMoyenDePaiement" name="donnees" xmlns:parts="http://sigc.sfr.com/repliquerMoyenDePaiement"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="RepliquerMoyenDePaiementPort">
    <wsdl:operation name="repliquerMoyenDePaiement">
      <wsdl:input message="tns:repliquerMoyenDePaiement"/>
      <wsdl:output message="tns:repliquerMoyenDePaiementResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RepliquerMoyenDePaiementPort" type="tns:RepliquerMoyenDePaiementPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="repliquerMoyenDePaiement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RepliquerMoyenDePaiement">
    <wsdl:port binding="tns:RepliquerMoyenDePaiementPort" name="RepliquerMoyenDePaiement">
      <soap:address location="http://localhost:7001/clfy_rmpV4/RepliquerMoyenDePaiement/V4.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_rmpV4/RepliquerMoyenDePaiement/V4.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="repliquerMoyenDePaiement" bindingOperationName="repliquerMoyenDePaiement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0087693a-bec7-4bb5-80c1-610528b625b2"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CreerDossierPort" type="wsdl" bindingName="{http://sigc.sfr.com/creerDossier}CreerDossierPort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerDossierV3.wsdl" id="dd345387-f5cf-4587-804e-33f5aa98e373" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerDossierV3.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/CreerDossierV3.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="CreerDossier" targetNamespace="http://sigc.sfr.com/creerDossier" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/creerDossier" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/creerDossier" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns="http://sigc.sfr.com/creerDossier" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="creerDossierResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="creerDossier">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="utilisateur" type="Utilisateur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="canal" type="Canal" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="identifiantPDV" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdContact" type="ClfyIdContact" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="idFoncCompteClient" type="IdFoncCompteClient" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="activiteDossier" type="ActiviteDossier" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="motifDossier" type="MotifDossier" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="themeDossier" type="ThemeDossier" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="nomUtilisateur" type="NomUtilisateur" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="prenomUtilisateur" type="PrenomUtilisateur" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="validation" type="Validation" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="note" type="Note" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="comment" type="Comment" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="codeSIOffre" type="CodeSIOffre" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="numeroSIOffre" type="NumeroSIOffre" minOccurs="0" maxOccurs="1"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="parametreAdditionnel" type="ParametreAdditionnel"/>
          <xsd:element name="idTechDemande" type="ClfyIdDemande" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="internalDate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clientDate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="soonestDate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="utilisateurInCharge" type="Utilisateur" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Utilisateur">
        <xsd:annotation>
          <xsd:documentation>Login of the user originator of the Followed Case creation</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Canal">
        <xsd:annotation>
          <xsd:documentation>Channel identifier</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DIS"/>
          <xsd:enumeration value="SFC"/>
          <xsd:enumeration value="RC"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:annotation>
          <xsd:documentation>Functionnal identifier of the Customer Account</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ActiviteDossier">
        <xsd:annotation>
          <xsd:documentation>Code of the reason of the Followed Case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MotifDossier">
        <xsd:annotation>
          <xsd:documentation>Code of the reason of the Followed Case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ThemeDossier">
        <xsd:annotation>
          <xsd:documentation>Code of the leaf topic of the Followed Case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NomUtilisateur">
        <xsd:annotation>
          <xsd:documentation>Name of the user originator of the note</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="PrenomUtilisateur">
        <xsd:annotation>
          <xsd:documentation>First name of the user originator of the note</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="30"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Validation">
        <xsd:annotation>
          <xsd:documentation>Text of the note to be added to the Followed Case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:boolean"></xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Note">
        <xsd:annotation>
          <xsd:documentation>Text of the note to be added to the Followed Case</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="418"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Comment">
        <xsd:annotation>
          <xsd:documentation>Text of the comment</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="400"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeSIOffre">
        <xsd:annotation>
          <xsd:documentation>Identify the connecting SI Offer</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{2}"/>
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroSIOffre">
        <xsd:annotation>
          <xsd:documentation>Number of installed service package in the connecting SI Offer</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
          <xsd:pattern value="[0-9A-Z]{6}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Transaction identifier</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:annotation>
          <xsd:documentation>Identifier of the transmitter  PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Use case of the PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>Code of the transmitter  SSA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code of the receiver  SSA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type and direction of the flow</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ParametreAdditionnel">
        <xsd:sequence>
          <xsd:element name="code" type="Code" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="valeur" type="Valeur" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Code">
        <xsd:annotation>
          <xsd:documentation>Code of the additional parameter</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Valeur">
        <xsd:annotation>
          <xsd:documentation>Value of the additional parameter</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="03.00"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodeRetour">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
          <xsd:enumeration value="0010"/>
          <xsd:enumeration value="0011"/>
          <xsd:enumeration value="0012"/>
          <xsd:enumeration value="0013"/>
          <xsd:enumeration value="0014"/>
          <xsd:enumeration value="0015"/>
          <xsd:enumeration value="0016"/>
          <xsd:enumeration value="0017"/>
          <xsd:enumeration value="0018"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Error label</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdContact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDossier">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="codeRetour" type="CodeRetour"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="LibelleErreur"/>
          <xsd:element name="idFoncDossier" type="IdFoncDossier" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="clfyIdContact" type="ClfyIdContact" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" maxOccurs="1" minOccurs="1" type="Entete"/>
          <xsd:element name="reponse" maxOccurs="1" minOccurs="1" type="Reponse"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="creerDossierResponse">
    <wsdl:part element="parts:creerDossierResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/creerDossier"/>
  </wsdl:message>
  <wsdl:message name="creerDossier">
    <wsdl:part element="parts:creerDossier" name="donnees" xmlns:parts="http://sigc.sfr.com/creerDossier"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="CreerDossierPort">
    <wsdl:operation name="creerDossier">
      <wsdl:input message="tns:creerDossier"/>
      <wsdl:output message="tns:creerDossierResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CreerDossierPort" type="tns:CreerDossierPort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="creerDossier">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CreerDossier">
    <wsdl:port binding="tns:CreerDossierPort" name="CreerDossier">
      <soap:address location="http://localhost:7001/clfy_crdsrV3/CreerDossier/V3.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="creerDossier" bindingOperationName="creerDossier" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="365a8859-825d-4f66-9a6b-205efc870f2e"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ModifierPersonnePort" type="wsdl" bindingName="{http://sigc.sfr.com/modifierPersonne}ModifierPersonnePort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierPersonneV3.wsdl" id="06ccd320-e867-4373-a210-b6b69d204205" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierPersonneV3.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/ModifierPersonneV3.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ModifierPersonne" targetNamespace="http://sigc.sfr.com/modifierPersonne" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/modifierPersonne" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/modifierPersonne" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns="http://sigc.sfr.com/modifierPersonne" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="modifierPersonne">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="adresse" type="Adresse" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="adresseFacturation" type="Adresse" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="vraiFauxModifAdresseFacturation" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="canalContact" type="CanalContact" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="clfyIdActionProActive" type="ClfyIdActionProActive" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdCompteClient" type="ClfyIdCompteClient" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdContact" type="ClfyIdContact" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdPersonneDemandeur" type="ClfyIdPersonneDemandeur" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdPersonnePhysique" type="ClfyIdPersonnePhysique" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="idFoncCompteClient" type="IdFoncCompteClient" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncDemande" type="IdFoncDemande" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncPersonneDemandeur" type="IdFoncPersonne" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncPersonnePhysique" type="IdFoncPersonne" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idFoncPersonneMorale" type="IdFoncPersonne" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="idOffreAramis" type="IdOffreAramis" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="mediaContact" type="MediaContact" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="moyenDePaiement" type="MoyenDePaiement" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="numCSU" type="NumCSU" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="numSCS" type="NumSCS" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="personne" type="Personne" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="role" type="Role" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="typePersonneDemandeur" type="TypePersonne" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="dateEcheance" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="clfyIdADGE" type="ClfyIdADGE" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="vraiFauxTitulaire" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="vraiFauxPayeur" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="vraiFauxUtilisateur" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="demergeSourceFlag" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="DemergeDestinationFlag" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="DemergeReason" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="mode" type="Mode" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="annulationADGE" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="comptefacturation" type="CompteFacturation" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="vraiFauxNotification" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="CompteFacturation">
        <xsd:sequence>
          <xsd:element name="idFoncCompteFactu" type="IdFoncCompteFactu" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="applicationSurcout" type="ApplicationSurcout" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdFoncCompteFactu">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="19"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ApplicationSurcout">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-2]{1}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Role">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Titulaire"/>
          <xsd:enumeration value="Utilisateur"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Mode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="C"/>
          <xsd:enumeration value="M"/>
          <xsd:enumeration value="R"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdContact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdADGE">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncDemande">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdActionProActive">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonneDemandeur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncPersonne">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypePersonne">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Physique"/>
          <xsd:enumeration value="Morale"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncCompteClient">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="12"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumSCS">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumCSU">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="6"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClfyIdPersonnePhysique">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CanalContact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaContact">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdOffreAramis">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="03.00"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Personne" abstract="true"/>
      <xsd:complexType name="PersonnePhysique">
        <xsd:complexContent>
          <xsd:extension base="Personne">
            <xsd:sequence>
              <xsd:element name="civilite" type="Civilite" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="nom" type="Nom" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="prenom" type="Prenom" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="dateNaissance" type="xsd:date" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="departementNaissance" type="Departement" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="codeProfession" type="CodeProfession" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="denominationAdditionnelle" type="DenominationAdditionnelle" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="contactPrivilegie" type="PersonneContact" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="email1" type="AdresseMail" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="stopMail1" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="email2" type="AdresseMail" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="stopMail2" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneFixe" type="Telephone" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneMobile" type="Telephone" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneFax" type="Telephone" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneAutre" type="Telephone" maxOccurs="1" minOccurs="0"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="PersonneMorale">
        <xsd:complexContent>
          <xsd:extension base="Personne">
            <xsd:sequence>
              <xsd:element name="raisonSociale" type="RaisonSociale" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="siret" type="Siret" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="codeAPE" type="CodeAPE" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="numeroTvaUE" type="NumeroTvaUE" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="codeCategorieJuridique" type="CodeCategorieJuridique" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="idFoncResponsableLegal" type="IdFoncResponsableLegal" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="responsableLegal" type="PersonnePhysique" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="adressePostaleResponsableLegal" type="Adresse" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="codeProfession" type="CodeProfession" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="denominationAdditionnelle" type="DenominationAdditionnelle" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="contactPrivilegie" type="PersonneContact" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="email1" type="AdresseMail" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="stopMail1" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="email2" type="AdresseMail" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="stopMail2" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneFixe" type="Telephone" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneMobile" type="Telephone" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneFax" type="Telephone" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="telephoneAutre" type="Telephone" maxOccurs="1" minOccurs="0"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="Civilite">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MR"/>
          <xsd:enumeration value="MME"/>
          <xsd:enumeration value="MLLE"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Nom">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Prenom">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Departement">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{2,3}|2A|2B"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeProfession">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DenominationAdditionnelle">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="40"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AdresseMail">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[a-zA-Z0-9\-\._]+@[a-zA-Z0-9\-\._]+\.[a-zA-Z]+"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="HeureContactPrivilegiee3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="15"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie1">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie2">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="JourContactPrivilegie3">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LangueUsage">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MediaPrefere">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RaisonSociale">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Siret">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="14"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeAPE">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroTvaUE">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="13"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeCategorieJuridique">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncResponsableLegal">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="PersonneContact">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="heureContactPrivilegiee1" type="HeureContactPrivilegiee1"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="heureContactPrivilegiee2" type="HeureContactPrivilegiee2"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="heureContactPrivilegiee3" type="HeureContactPrivilegiee3"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="jourContactPrivilegie1" type="JourContactPrivilegie1"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="jourContactPrivilegie2" type="JourContactPrivilegie2"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="jourContactPrivilegie3" type="JourContactPrivilegie3"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="langueUsage" type="LangueUsage"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="mediaPrefere" type="MediaPrefere"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Indicatif">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Numero">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Telephone">
        <xsd:sequence>
          <xsd:element name="indicatif" type="Indicatif" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="numero" type="Numero" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="EtatNormalisation">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="O"/>
          <xsd:enumeration value="F"/>
          <xsd:enumeration value="N"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LigneAdresse">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="25"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePostal">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePays">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodePaysISO">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="3"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Adresse">
        <xsd:sequence>
          <xsd:element name="etatNormalisation" type="EtatNormalisation" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="complementIdentite" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="complementGeographique" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="numeroTypeVoieNomVoie" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="lieuDitBoitePostale" type="LigneAdresse" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codePostal" type="CodePostal" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="ville" type="LigneAdresse" maxOccurs="1" minOccurs="1"/>
          <xsd:element name="codePays" type="CodePays" maxOccurs="1" minOccurs="0"/>
          <xsd:element name="codePaysISO" type="CodePaysISO" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MoyenDePaiement" abstract="true"/>
      <xsd:complexType name="MoyenDePaiementCarte">
        <xsd:complexContent>
          <xsd:extension base="MoyenDePaiement">
            <xsd:sequence>
              <xsd:element name="detenteurCartePaiement" type="DetenteurCarte" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="numeroCarte" type="NumeroCarte" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="dateExpiration" type="xsd:date" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="typeCarte" type="TypeCartePaiement" maxOccurs="1" minOccurs="1"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MoyenDePaiementCompte">
        <xsd:complexContent>
          <xsd:extension base="MoyenDePaiement">
            <xsd:sequence>
              <xsd:element name="titulaireCompte" type="TitulaireCompte" maxOccurs="1" minOccurs="1"/>
              <xsd:element name="codeEtablissement" type="CodeEtablissement" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="codeGuichet" type="CodeGuichet" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="numeroCompte" type="NumeroCompte" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="cle" type="Cle" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="iban" type="Iban" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="bic" type="Bic" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="nomBanque" type="NomBanque" maxOccurs="1" minOccurs="0"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="MoyenDePaiementAutre">
        <xsd:complexContent>
          <xsd:extension base="MoyenDePaiement">
            <xsd:sequence>
              <xsd:element name="titulaireCompte" type="TitulaireCompte" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="codeEtablissement" type="CodeEtablissement" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="codeGuichet" type="CodeGuichet" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="numeroCompte" type="NumeroCompte" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="cle" type="Cle" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="iban" type="Iban" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="bic" type="Bic" maxOccurs="1" minOccurs="0"/>
              <xsd:element name="nomBanque" type="NomBanque" maxOccurs="1" minOccurs="0"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="TitulaireCompte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeEtablissement">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeGuichet">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="5"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCompte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Cle">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="2"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Iban">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="34"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Bic">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="8"/>
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NomBanque">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="80"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DetenteurCarte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="32"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroCarte">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="16"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeCartePaiement">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AMEX"/>
          <xsd:enumeration value="Carte Bleue"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="modifierPersonneResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" maxOccurs="1" minOccurs="1" type="Entete"/>
          <xsd:element name="reponse" maxOccurs="1" minOccurs="1" type="Reponse"/>
          <xsd:element name="idFoncPersonne" maxOccurs="1" minOccurs="0" type="IdFoncPersonne"/>
          <xsd:element name="typePersonne" maxOccurs="1" minOccurs="0" type="TypePersonne"/>
          <xsd:element name="idFoncRespLegal" maxOccurs="1" minOccurs="0" type="IdFoncPersonne"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
          <xsd:enumeration value="0006"/>
          <xsd:enumeration value="0007"/>
          <xsd:enumeration value="0008"/>
          <xsd:enumeration value="0009"/>
          <xsd:enumeration value="0010"/>
          <xsd:enumeration value="0011"/>
          <xsd:enumeration value="0012"/>
          <xsd:enumeration value="0013"/>
          <xsd:enumeration value="0014"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ResultatEligibiliteOffre">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="resultat" type="Resultat"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="LibelleErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="eligibiliteOffre" type="EligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="resultatEligibiliteOffre" type="ResultatEligibiliteOffre"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="adg" type="ADG"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ADG">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncADG" type="IdFoncADG"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idFoncDemande" type="IdFoncDemande"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechADG" type="ClfyId"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="idTechDemande" type="ClfyId"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="ClfyId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="IdFoncADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="11"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="MotifADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="8"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleADG">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="50"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="EligibiliteOffre">
        <xsd:sequence>
          <xsd:element name="motifADG" maxOccurs="1" minOccurs="0" type="MotifADG"/>
          <xsd:element name="codeADG" maxOccurs="1" minOccurs="1" type="CodeADG"/>
          <xsd:element name="libelleADG" maxOccurs="1" minOccurs="1" type="LibelleADG"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="modifierPersonneResponse">
    <wsdl:part element="parts:modifierPersonneResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/modifierPersonne"/>
  </wsdl:message>
  <wsdl:message name="modifierPersonne">
    <wsdl:part element="parts:modifierPersonne" name="donnees" xmlns:parts="http://sigc.sfr.com/modifierPersonne"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="ModifierPersonnePort">
    <wsdl:operation name="modifierPersonne">
      <wsdl:input message="tns:modifierPersonne"/>
      <wsdl:output message="tns:modifierPersonneResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModifierPersonnePort" type="tns:ModifierPersonnePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="modifierPersonne">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModifierPersonne">
    <wsdl:port binding="tns:ModifierPersonnePort" name="ModifierPersonne">
      <soap:address location="http://localhost:7001/clfy_mpnV3/ModifierPersonne/V3.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mpnV3/ModifierPersonne/V3.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="modifierPersonne" bindingOperationName="modifierPersonne" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="910048a3-05f6-4e81-b395-332ae6503320"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CloreDemandePort" type="wsdl" bindingName="{http://sigc.sfr.com/cloreDemande}CloreDemandePort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreDemandeV1.wsdl" id="a5e12981-62fa-40c3-9ce6-21bea0bbd086" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreDemandeV1.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreDemandeV1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="cloreDemande" targetNamespace="http://sigc.sfr.com/cloreDemande" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/cloreDemande" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/cloreDemande" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/cloreDemande" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="01.00"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cloreDemandeResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="IdDemande">
        <xsd:annotation>
          <xsd:documentation>Id de la demande</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Resultat">
        <xsd:annotation>
          <xsd:documentation>Resultat de la demande</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="idDemande" type="IdDemande" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="resultatDemande" type="Resultat" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cloreDemande">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="cloreDemandeResponse">
    <wsdl:part element="parts:cloreDemandeResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/cloreDemande"/>
  </wsdl:message>
  <wsdl:message name="cloreDemande">
    <wsdl:part element="parts:cloreDemande" name="donnees" xmlns:parts="http://sigc.sfr.com/cloreDemande"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="CloreDemandePort">
    <wsdl:operation name="cloreDemande">
      <wsdl:input message="tns:cloreDemande"/>
      <wsdl:output message="tns:cloreDemandeResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CloreDemandePort" type="tns:CloreDemandePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="cloreDemande">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CloreDemandeService">
    <wsdl:port binding="tns:CloreDemandePort" name="CloreDemandeService">
      <soap:address location="http://localhost:7001/webservices/CloreDemandeService/V2.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clde/CloreDemandeService/V2.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="cloreDemande" bindingOperationName="cloreDemande" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="16fa3ae8-969c-4ec2-bf6f-bd3062eaedb0"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ClfySessionSvcSoapBinding" type="wsdl" bindingName="{http://ws.ejb.common.igb.clarify.com}ClfySessionSvcSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/AuthentificationV1.wsdl" id="3441c77f-a8a1-4ff8-a1d4-9da83a4d65ed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/AuthentificationV1.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/AuthentificationV1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.ejb.common.igb.clarify.com" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://ws.ejb.common.igb.clarify.com" xmlns:intf="http://ws.ejb.common.igb.clarify.com" xmlns:tns2="http://xvobase.clarify.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" targetNamespace="http://ws.ejb.common.igb.clarify.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://xvobase.clarify.com"/>
      <element name="login">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="userName" nillable="true" type="xsd:string"/>
            <element maxOccurs="1" minOccurs="0" name="passWord" nillable="true" type="xsd:string"/>
            <element name="loginType" type="xsd:int"/>
            <element maxOccurs="1" minOccurs="0" name="strAssocDefName" nillable="true" type="xsd:string"/>
            <element maxOccurs="1" minOccurs="0" name="strLocale" nillable="true" type="xsd:string"/>
            <element name="bExternAuth" type="xsd:boolean"/>
          </sequence>
        </complexType>
      </element>
      <element name="loginResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="loginReturn" nillable="true" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="fault" type="tns2:ClfyException"/>
      <element name="refreshSessionID">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="sessionID" nillable="true" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="refreshSessionIDResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="refreshSessionIDReturn" nillable="true" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
    </schema>
    <schema elementFormDefault="qualified" targetNamespace="http://xvobase.clarify.com" xmlns="http://www.w3.org/2001/XMLSchema">
      <complexType name="ClfyException">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="errorNumber" type="xsd:int"/>
          <element maxOccurs="1" minOccurs="0" name="source" nillable="true" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="additionalMessage" nillable="true" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="message" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
    </schema>
  </wsdl:types>
  <wsdl:message name="refreshSessionIDRequest">
    <wsdl:part element="impl:refreshSessionID" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part element="impl:loginResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="refreshSessionIDResponse">
    <wsdl:part element="impl:refreshSessionIDResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="loginRequest">
    <wsdl:part element="impl:login" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part element="impl:fault" name="fault"/>
  </wsdl:message>
  <wsdl:portType name="ClfySession">
    <wsdl:operation name="login">
      <wsdl:input message="impl:loginRequest" name="loginRequest"/>
      <wsdl:output message="impl:loginResponse" name="loginResponse"/>
      <wsdl:fault message="impl:ClfyException" name="ClfyException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshSessionID">
      <wsdl:input message="impl:refreshSessionIDRequest" name="refreshSessionIDRequest"/>
      <wsdl:output message="impl:refreshSessionIDResponse" name="refreshSessionIDResponse"/>
      <wsdl:fault message="impl:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ClfySessionSvcSoapBinding" type="impl:ClfySession">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="login">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loginRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <wsdlsoap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshSessionID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="refreshSessionIDRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="refreshSessionIDResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <wsdlsoap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ClfySessionService">
    <wsdl:port binding="impl:ClfySessionSvcSoapBinding" name="ClfySessionSvc">
      <wsdlsoap:address location="http://localhost:7001/CRMServices/ClfySessionSvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:7001/CRMServices/ClfySessionSvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="login" bindingOperationName="login" type="Request-Response" outputName="loginResponse" inputName="loginRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ccbcedd4-7018-4e66-a57e-66cc1ace4ca0"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="refreshSessionID" bindingOperationName="refreshSessionID" type="Request-Response" outputName="refreshSessionIDResponse" inputName="refreshSessionIDRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d2e1bc91-5dcb-4444-9518-1c0ce2146774"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CloreActionProactivePort" type="wsdl" bindingName="{http://sigc.sfr.com/cloreActionProactive}CloreActionProactivePort" soapVersion="1_1" anonymous="optional" definition="file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreActionProactiveV2.wsdl" id="b7304231-75ea-47ca-be48-7165492f3aa5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreActionProactiveV2.wsdl"><con:part><con:url>file:/C:/Sumit/SOAPUI/FAST/wsdl/CloreActionProactiveV2.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="cloreActionProactive" targetNamespace="http://sigc.sfr.com/cloreActionProactive" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://sigc.sfr.com/cloreActionProactive" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://sigc.sfr.com/cloreActionProactive" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://sigc.sfr.com/cloreActionProactive" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:simpleType name="IdTransaction">
        <xsd:annotation>
          <xsd:documentation>Identifiant de la transaction</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="28"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroFlux">
        <xsd:annotation>
          <xsd:documentation>Numero de flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FFLINT[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NumeroPA">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="FPA[A-Z]{3}[0-9]{4}"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="EvenementType">
        <xsd:annotation>
          <xsd:documentation>Cas d'usage du PA</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="10"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaEmetteur">
        <xsd:annotation>
          <xsd:documentation>SA ou SSA a l'origine du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SsaRecepteur">
        <xsd:annotation>
          <xsd:documentation>Code du SSA recepteur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="4"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="TypeFlux">
        <xsd:annotation>
          <xsd:documentation>Type et sens du flux</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QU"/>
          <xsd:enumeration value="RU"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Entete">
        <xsd:sequence>
          <xsd:element name="idTransaction" type="IdTransaction" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroFlux" type="NumeroFlux" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="numeroPA" type="NumeroPA" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="evenementType" type="EvenementType" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="ssaEmetteur" type="SsaEmetteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="versionFlux" type="xsd:string" minOccurs="1" maxOccurs="1" fixed="02.00"/>
          <xsd:element name="dateOrigineFlux" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="ssaRecepteur" type="SsaRecepteur" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="dateTraitementFlux" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="typeFlux" type="TypeFlux" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Resultat">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="KO"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CodeErreur">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="0000"/>
          <xsd:enumeration value="0001"/>
          <xsd:enumeration value="0002"/>
          <xsd:enumeration value="0003"/>
          <xsd:enumeration value="0004"/>
          <xsd:enumeration value="0005"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="LibelleErreur">
        <xsd:annotation>
          <xsd:documentation>Libelle de l'erreur</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="200"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Reponse">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="resultat" type="tns:Resultat"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="codeErreur" type="tns:CodeErreur"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="libelleErreur" type="tns:LibelleErreur"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Response">
        <xsd:sequence>
          <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="reponse" type="Reponse" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cloreActionProactiveResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="result" type="Response" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:simpleType name="IdActionProactive">
        <xsd:annotation>
          <xsd:documentation>Id de l'action proactive</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="StatutComplementaire">
        <xsd:annotation>
          <xsd:documentation>Statut complementaire de cloture</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="20"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Raison">
        <xsd:annotation>
          <xsd:documentation>Raison de cloture</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="300"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="Question">
        <xsd:sequence>
          <xsd:element name="idActionProactive" type="IdActionProactive" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="statutComplementaire" type="StatutComplementaire" minOccurs="0" maxOccurs="1"/>
          <xsd:element name="raison" type="Raison" minOccurs="0" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="cloreActionProactive">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="sessionId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="entete" type="Entete" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="question" type="Question" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema targetNamespace="http://xvobase.clarify.com" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:clfy="http://xvobase.clarify.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:complexType name="ClfyException">
        <xsd:sequence>
          <xsd:element name="additionalMessage" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="errorNumber" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element name="message" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
          <xsd:element name="source" type="xsd:string" minOccurs="1" maxOccurs="1" nillable="true"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element type="clfy:ClfyException" name="ClfyException"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="cloreActionProactiveResponse">
    <wsdl:part element="parts:cloreActionProactiveResponse" name="resultat" xmlns:parts="http://sigc.sfr.com/cloreActionProactive"/>
  </wsdl:message>
  <wsdl:message name="cloreActionProactive">
    <wsdl:part element="parts:cloreActionProactive" name="donnees" xmlns:parts="http://sigc.sfr.com/cloreActionProactive"/>
  </wsdl:message>
  <wsdl:message name="ClfyException">
    <wsdl:part name="ClfyException" element="parts:ClfyException" xmlns:parts="http://xvobase.clarify.com"/>
  </wsdl:message>
  <wsdl:portType name="CloreActionProactivePort">
    <wsdl:operation name="cloreActionProactive">
      <wsdl:input message="tns:cloreActionProactive"/>
      <wsdl:output message="tns:cloreActionProactiveResponse"/>
      <wsdl:fault message="tns:ClfyException" name="ClfyException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CloreActionProactivePort" type="tns:CloreActionProactivePort">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="cloreActionProactive">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClfyException">
        <soap:fault name="ClfyException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CloreActionProactiveService">
    <wsdl:port binding="tns:CloreActionProactivePort" name="CloreActionProactiveService">
      <soap:address location="http://localhost:7001/webservices/CloreActionProactiveService/V2.0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clap/CloreActionProactiveService/V2.0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="cloreActionProactive" bindingOperationName="cloreActionProactive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f2f978f8-53ef-4d51-9496-ab21ef14df9d"><con:settings/></con:operation></con:interface><con:testSuite name="TestSuite 1" id="fa0e2458-b963-446c-8f41-935972eba8be"><con:description>Unitary tests of SaFiR WebServices on the CLFY15 environment</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true" id="baa6f658-04fb-4770-8608-32ba6deda2c3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Unitary tests of SaFiR WebServices on the CLFY15 environment</con:description><con:settings/><con:testStep type="request" name="001 SM000 AuthentificationV1" id="b807248e-519b-43aa-930e-5e1cb2e5f484"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ClfySessionSvcSoapBinding</con:interface><con:operation>login</con:operation><con:request name="001 SM000 AuthentificationV1" id="27cf1316-b22c-452a-830d-fcf0e7113b37"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/CRMServices/ClfySessionSvc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.ejb.common.igb.clarify.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <ws:userName>${#TestSuite#wsUsername}</ws:userName>
         <ws:passWord>${#TestSuite#wsUsername}</ws:passWord>
         <ws:loginType>0</ws:loginType>
         <ws:strAssocDefName></ws:strAssocDefName>
         <ws:strLocale></ws:strLocale>
         <ws:bExternAuth>false</ws:bExternAuth>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6d034353-6725-4595-99a7-92228f55652c"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1234cc1a-04e0-4cbb-92ac-abc3fa26d51f"/><con:assertion type="XPath Match" name="XPath Match - VerifierSessionId" id="1331825f-ad96-42bd-8ae4-e2c566613973"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://ws.ejb.common.igb.clarify.com';
exists(//ns1:loginResponse[1]/ns1:loginReturn[1])</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="030 SM026 CreerContactV3 avec dossier" id="9878954c-d6b6-4da2-9f9f-1278ef30fcc2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerContactPort</con:interface><con:operation>creerContact</con:operation><con:request name="030 SM026 CreerContactV3 avec dossier" id="8e9fd7cd-8e76-4add-956c-3d8d53f1af8c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crct3/CreerContactService/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerContact">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerContact>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</cre:clfyIdPersonnePhysique>
            <!--cre:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:idFoncPersonnePhysique-->
            <!--cre:idFoncDemande></cre:idFoncDemande-->
            <cre:idFoncDossier>${#TestCase#dossierObjid1}</cre:idFoncDossier>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canalContact>RC</cre:canalContact>
            <cre:mediaContact>WEB</cre:mediaContact>
         </cre:question>
      </cre:creerContact>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3d25ed6c-fc4d-4a85-8fa5-c39c6b54974c"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="74bfbfd4-ec7f-4bb6-bde7-93958794f07d"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="515eb22c-104e-4379-a467-9bec4389b097"><con:configuration><path>declare namespace n1='http://sigc.sfr.com/creerContact';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/creerContact';
//m:creerContactResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="002 Transfert sessionId" id="8d682ff8-9a8f-4cad-89e5-68b4d1a59f5d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>001 SM000 AuthentificationV1</con:sourceStep><con:sourcePath>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://ws.ejb.common.igb.clarify.com';
//ns1:loginResponse[1]/ns1:loginReturn[1]</con:sourcePath><con:targetType>sessionId</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="010 SQL RechercherClient" id="15ce02a8-11ff-4dec-9514-49007e523adb"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testRunner.testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

// SQL query filter
String ccTituIdFonc = testRunner.testCase.getPropertyValue( "ccTituIdFonc" );
//log.info( "ccTituIdFonc = '${ccTituIdFonc}'" );

// Clear temporary TestCase properties
for( prop in testRunner.testCase.properties )
{
    if( prop.value.name.startsWith( "tmp" ) )
    {
        testRunner.testCase.removeProperty( prop.value.name );
    }
}

// Retrieve the complete client structure from the database
def rows = sql.rows( """
SELECT * FROM (
SELECT /*+ LEADING(ccT) */
    csu.objid AS X_CSU_OBJID
  , csu.x_scs AS X_CODE_SCS
  , ccT.org_id AS X_CC_T_IDFONC
  , ccT.name AS X_CC_T_NOM
  , ctr.x_numero_contrat AS X_DC_IDFONC
  , cf.name AS X_CF_IDFONC
  , csu.x_isdn AS X_CSU_NUM_LIGNE_PRINC
  , DECODE( ccT.x_morale, 0, 'PP', DECODE( ppRL.objid, NULL, 'PM', 'RL' ) ) AS X_TYPE_PERSONNE
  , DECODE( 10 * DECODE( ppT.objid, ppP.objid, 1, ppU.objid, 2, 0 ) + DECODE( ppP.objid, ppU.objid, 2, 1 ),
            12, 'T=P=U',
            11, 'T=P<>U',
            1, 'T<>P<>U',
            2, 'T<>P=U',
            21, 'T=U<>P',
            NULL
    ) AS X_PROFIL_TPU
  , DECODE( 10 * DECODE( ppT.last_name||ppT.first_name, ppP.last_name||ppP.first_name, 1, ppU.last_name||ppU.first_name, 2, 0 ) + DECODE( ppP.last_name||ppP.first_name, ppU.last_name||ppU.first_name, 2, 1 ),
            12, 'T=P=U',
            11, 'T=P<>U',
            1, 'T<>P<>U',
            2, 'T<>P=U',
            21, 'T=U<>P',
            NULL
    ) AS X_DONNEES_TPU
  , ( DECODE( ccT.x_morale, 0, NULL, DECODE( ppRL.objid, ppT.objid, 'RL=T', ppP.objid, 'RL=P', ppU.objid, 'RL=U', NULL ) ) ) AS X_PROFIL_RL
  , ( select count(distinct tmp.x_cc_objid) from table_x_cc_pp_representant_v tmp where tmp.x_pp_objid = ppT.objid group by tmp.x_pp_objid ) AS X_NB_CC_PAR_PP
  , ( select count(distinct tmp.x_cf_objid) from table_x_rech_client_mini_v tmp where tmp.x_cc_t_objid = ccT.objid  ) AS X_NB_CF_PAR_CC
  , ( select count(distinct tmp.x_csu_objid) from table_x_rech_client_mini_v tmp where tmp.x_cc_t_objid = ccT.objid group by tmp.x_cc_t_objid ) AS X_NB_CSU_PAR_CC
  , ppT.x_id_externe AS X_PP_T_ID_EXTERNE
  , ppT.salutation AS X_PP_T_CIVILITE
  , ppT.last_name AS X_PP_T_NOM
  , ppT.first_name AS X_PP_T_PRENOM
  , TO_CHAR(ppT.x_date_naissance, 'yyyy-mm-dd') AS X_PP_T_DATE_NAISSANCE
  , COALESCE(ppT.x_dept_naissance, (SELECT ref_id FROM table_state_prov WHERE objid = ppT.x_dpt_nais2state_prov)) AS X_PP_T_DEPT_NAISSANCE
  , ppT.e_mail AS X_PP_T_EMAIL
  , ccT.x_morale AS X_CC_T_EST_PM
  , ccT.x_siret AS X_CC_T_PM_SIRET
  , ccT.x_id_externe AS X_CC_T_PM_ID_EXTERNE
  , adrT.objid AS X_ADR_T_OBJID
  , adrT.address AS X_ADR_T_ADRESSE
  , adrT.zipcode AS X_ADR_T_CODE_POSTAL
  , adrT.city AS X_ADR_T_VILLE
  , country_adrT.name AS X_ADR_T_PAYS
  , ppT.objid AS X_PP_T_OBJID
  , ppP.objid AS X_PP_P_OBJID
  , ppU.objid AS X_PP_U_OBJID
  , ppRL.objid AS X_PP_RL_OBJID
  , ppT.x_id_externe AS X_PP_T_IDFONC
  , ppP.x_id_externe AS X_PP_P_IDFONC
  , ppU.x_id_externe AS X_PP_U_IDFONC
  , ccT.objid AS X_CC_T_OBJID
  , ccP.objid AS X_CC_P_OBJID
  , ccP.org_id AS X_CC_P_IDFONC
  , ccT.x_categorie_titu AS X_CC_T_CATEGORIE_TITU
  , ccT.x_entreprise AS X_CC_T_ENTREPRISE
  , ccT.x_ind_sigc AS X_CC_T_IND_SIGC
  , ccT.x_client_nsi AS X_CC_T_MIGRE_P1A
  , ccT.x_migre_par AS X_CC_T_MIGRE_PAR
  , ccT.x_migre_rce AS X_CC_T_MIGRE_RCE
  , cf.objid AS X_CF_OBJID
  , cf.x_no_pt_fact AS X_CF_NO_PT_FACT
  , statut_cf.title AS X_CF_STATUT_TITLE
  , mp.objid AS X_MP_OBJID
  , mp.means_type AS X_MP_TYPE_REFID
  , DECODE( mp.means_type, 0, 'CB', 2, 'RIB', 3, 'AUTRE', NULL ) AS X_MP_TYPE_TITLE  
  , csu.x_scs AS X_CSU_CODE_SCS
  , csu.x_numero_csu AS X_CSU_NUMERO_CSU
  , csu.x_isdn2 AS X_CSU_NUM_LIGNE_SEC
  , csu.x_numero_prise_thd AS X_CSU_NUM_PRISE_THD
  , csu.x_id_offre_aramis AS X_CSU_ID_OFFRE
  , statut_csu.x_key1_text AS X_CSU_STATUT_REFID
  , statut_csu.x_value1_text AS X_CSU_STATUT_TITLE
  , statut_csu.x_value5_text AS X_CSU_STATUT_INTERNE_REFID
  , type_csu.ref_id AS X_CSU_TYPE_REFID
  , marque_csu.ref_id AS X_CSU_MARQUE_REFID
  , csu.x_barring AS X_CSU_BARRING
  , csu.x_liste_rouge AS X_CSU_LISTE_ROUGE
  , ( select count(distinct tmp.x_csu_objid) from table_x_rech_client_mini_v tmp, table_site_part tmp_csu, table_x_trans_func_dbs_data tmp_statut_csu where tmp.x_cc_t_objid = ccT.objid and tmp.x_csu_objid = tmp_csu.objid and (tmp_statut_csu.x_trans_cd = 'Cd_statut_contrat' AND tmp_statut_csu.x_key1_text = tmp_csu.part_status) and tmp_statut_csu.x_value5_text = '10' ) AS X_NB_CSU_ACTIFS_PAR_CC
  , ( select count(distinct tmp.x_csu_objid) from table_x_rech_client_mini_v tmp, table_site_part tmp_csu, table_x_trans_func_dbs_data tmp_statut_csu where tmp.x_cc_t_objid = ccT.objid and tmp.x_csu_objid = tmp_csu.objid and (tmp_statut_csu.x_trans_cd = 'Cd_statut_contrat' AND tmp_statut_csu.x_key1_text = tmp_csu.part_status) and tmp_statut_csu.x_value5_text = '21' ) AS X_NB_CSU_RESILIES_PAR_CC
FROM
  TABLE_BUS_ORG ccT
  , TABLE_SITE sit_adrT
  , TABLE_ADDRESS adrT
  , TABLE_COUNTRY country_adrT
  , TABLE_CONTACT_ROLE role_ppT
  , TABLE_CONTACT ppT
  , TABLE_HGSL2HGSE statut_ppT
  , TABLE_FIN_ACCNT finaccnt_cf
  , TABLE_BLG_ARGMNT cf
  , TABLE_HGBST_ELM statut_cf
  , TABLE_BUS_ORG ccP
  , TABLE_PAY_MEANS mp
  , TABLE_HGBST_ELM type_carte_mp
  , TABLE_SITE sit_adrP
  , TABLE_ADDRESS adrP
  , TABLE_CONTACT_ROLE role_ppP
  , TABLE_CONTACT ppP
  , TABLE_HGSL2HGSE statut_ppP
  , TABLE_BA_BI_ROLE babirole_cf
  , TABLE_BILLABLE_ITM billitm_cf
  , TABLE_SITE_PART pti
  , TABLE_SITE_PART csu
  , TABLE_X_TRANS_FUNC_DBS_DATA statut_csu
  , TABLE_HGBST_ELM type_csu
  , TABLE_HGBST_ELM marque_csu
  , TABLE_CON_SP_ROLE consprole_csu
  , TABLE_CONTACT ppU
  , TABLE_HGSL2HGSE statut_ppU
  , TABLE_X_AGREEMENT ctr
  , TABLE_CONTACT_ROLE role_ppRL
  , TABLE_CONTACT ppRL
WHERE
  sit_adrT.objid = ccT.primary2site
  AND adrT.objid = sit_adrT.cust_primaddr2address
  AND country_adrT.objid = adrT.address2country
  AND role_ppT.contact_role2site = sit_adrT.objid
  AND ppT.objid = role_ppT.contact_role2contact
  AND (statut_ppT.lst_title = 'x_statut_pp' AND statut_ppT.s_elm_ref_id = NVL(''||ppT.status,0))
  AND finaccnt_cf.fa_child2bus_org = ccT.objid
  AND cf.blg_argmnt2fin_accnt = finaccnt_cf.objid
  AND (statut_cf.objid = COALESCE(cf.blg_status2hgbst_elm, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'BAR_STATUS' AND s_elm_ref_id = 'ACTIF')))
  AND ccP.objid = cf.ba_child2bus_org
  AND mp.objid = cf.blg_argmnt2pay_means
  AND type_carte_mp.objid = COALESCE(mp.x_pym_cctype2hgbst, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_carte_paiement' AND elm_ref_id = mp.cc_type), (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_carte_paiement' AND s_elm_ref_id = 'VIDE'))
  AND sit_adrP.objid = ccP.primary2site
  AND adrP.objid = sit_adrP.cust_primaddr2address
  AND role_ppP.contact_role2site = sit_adrP.objid
  AND ppP.objid = role_ppP.contact_role2contact
  AND (statut_ppP.lst_title = 'x_statut_pp' AND statut_ppP.s_elm_ref_id = NVL(''||ppP.status,0))
  AND babirole_cf.ba_bi_role2blg_argmnt = cf.objid
  AND billitm_cf.objid = babirole_cf.ba_bi_role2billable_itm
  AND pti.objid = billitm_cf.billable_itm2site_part
  AND csu.objid = pti.level2site_part
  AND (statut_csu.x_trans_cd = 'Cd_statut_contrat' AND statut_csu.x_key1_text = csu.part_status)
  AND type_csu.objid = COALESCE(csu.x_type_csu2hgbst, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_csu' AND s_elm_ref_id = 'MOBILE'))
  AND marque_csu.objid = COALESCE(csu.x_marque2hgbst, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_marque' AND s_elm_ref_id = 'ABO'))
  AND consprole_csu.con_sp_role2site_part = csu.objid
  AND ppU.objid = consprole_csu.con_sp_role2contact
  AND (statut_ppU.lst_title = 'x_statut_pp' AND statut_ppU.s_elm_ref_id = NVL(''||ppU.status,0))
  AND ctr.objid = csu.x_site_part2agr
  AND (role_ppT.role_name = 'D1510_05')
  AND role_ppRL.contact_role2site (+)= sit_adrT.objid
  AND ppRL.objid (+)= role_ppRL.contact_role2contact
  AND (role_ppRL.role_name (+)= 'RL')
  AND ccT.org_id = ${ccTituIdFonc}
)
WHERE
  x_type_personne = 'PP'
  AND x_profil_tpu = 'T<>P<>U'
  AND x_code_scs = '01'
  AND x_csu_statut_interne_refid = 10
  AND x_cc_t_ind_sigc = 1
"""
);
assert rows.size() >= 1 : "Database record not found : ccTituIdFonc = '${ccTituIdFonc}'";

// Set temporary TestCase properties : client structure
testRunner.testCase.setPropertyValue( "tmpClient1.ccTitu.objid", (String) rows[0].x_cc_t_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ccTitu.idFonc", (String) rows[0].x_cc_t_idfonc );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.objid", (String) rows[0].x_pp_t_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.idFonc", (String) rows[0].x_pp_t_idfonc );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.civilite", (String) rows[0].x_pp_t_civilite );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.nom", (String) rows[0].x_pp_t_nom );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.prenom", (String) rows[0].x_pp_t_prenom );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.dateNaissance", (String) rows[0].x_pp_t_date_naissance );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.deptNaissance", (String) rows[0].x_pp_t_dept_naissance );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.email", (String) rows[0].x_pp_t_email );
testRunner.testCase.setPropertyValue( "tmpClient1.adrTitu.objid", (String) rows[0].x_adr_t_objid );

testRunner.testCase.setPropertyValue( "tmpClient1.ccPayeur.objid", (String) rows[0].x_cc_p_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ccPayeur.idFonc", (String) rows[0].x_cc_p_idfonc );
testRunner.testCase.setPropertyValue( "tmpClient1.ppPayeur.objid", (String) rows[0].x_pp_p_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ppPayeur.idFonc", (String) rows[0].x_pp_p_idfonc );

testRunner.testCase.setPropertyValue( "tmpClient1.ppUtil.objid", (String) rows[0].x_pp_u_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ppUtil.idFonc", (String) rows[0].x_pp_u_idfonc );

testRunner.testCase.setPropertyValue( "tmpClient1.cf.objid", (String) rows[0].x_cf_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.cf.idFonc", (String) rows[0].x_cf_idfonc );

testRunner.testCase.setPropertyValue( "tmpClient1.mp.objid", (String) rows[0].x_mp_objid );

testRunner.testCase.setPropertyValue( "tmpClient1.csu.objid", (String) rows[0].x_csu_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.csu.numLignePrinc", (String) rows[0].x_csu_num_ligne_princ );
testRunner.testCase.setPropertyValue( "tmpClient1.csu.codeScs", (String) rows[0].x_csu_code_scs );
testRunner.testCase.setPropertyValue( "tmpClient1.csu.numeroCsu", (String) rows[0].x_csu_numero_csu );


// Retrieve the created case (Demande) data from the database
def rowsDemande = sql.rows( """
SELECT
  objid
  , id_number
  , x_id_externe
FROM
  TABLE_CASE c
WHERE
  x_dossier = 0
  AND x_id_externe IS NOT NULL
  AND NOT EXISTS (SELECT cc.objid FROM TABLE_CLOSE_CASE cc WHERE cc.last_close2case = c.objid)
  AND (SELECT COUNT(objid) FROM TABLE_CASE c2 WHERE c2.x_id_externe = c.x_id_externe) = 1
  AND ROWNUM <= 2
"""
);
assert rowsDemande.size() == 2 : "Database record not found : first Demande (not closed)";

// Set temporary TestCase properties : demande
testRunner.testCase.setPropertyValue( "tmpDemande1.objid", (String) rowsDemande[0].objid );
testRunner.testCase.setPropertyValue( "tmpDemande1.idNumber", (String) rowsDemande[0].id_number );
testRunner.testCase.setPropertyValue( "tmpDemande1.idExterne", (String) rowsDemande[0].x_id_externe );

testRunner.testCase.setPropertyValue( "tmpDemandeToClose2.objid", (String) rowsDemande[1].objid );
testRunner.testCase.setPropertyValue( "tmpDemandeToClose2.idNumber", (String) rowsDemande[1].id_number );
testRunner.testCase.setPropertyValue( "tmpDemandeToClose2.idExterne", (String) rowsDemande[1].x_id_externe );


// Retrieve the created case (Dossier) data from the database
def rowsDossier = sql.rows( """
SELECT
  objid
  , id_number
  , x_id_externe
FROM
  TABLE_CASE c
WHERE
  x_dossier = 1
  AND NVL(x_id_externe, -1) <> -1
  AND NOT EXISTS (SELECT cc.objid FROM TABLE_CLOSE_CASE cc WHERE cc.last_close2case = c.objid)
  AND (SELECT COUNT(objid) FROM TABLE_CASE c2 WHERE c2.x_id_externe = c.x_id_externe) = 1
  AND ROWNUM <= 2
"""
);
assert rowsDossier.size() == 2 : "Database record not found : first Dossier (not closed)";

// Set temporary TestCase properties : dossier
testRunner.testCase.setPropertyValue( "tmpDossier1.objid", (String) rowsDossier[0].objid );
testRunner.testCase.setPropertyValue( "tmpDossier1.idNumber", (String) rowsDossier[0].id_number );
testRunner.testCase.setPropertyValue( "tmpDossier1.idExterne", (String) rowsDossier[0].x_id_externe );


// Useful SQL queries in comments
/*
-- SM081 dataset : find the "user / activity / motif / theme / additionnal data"
SELECT
  DISTINCT v.x_usr_nom AS UTILISATEUR
  , v.x_activite_idfonc AS ACTIVITE
  , v.x_motif_code AS MOTIF
  , v.x_motif_theme_code AS THEME
  , fd.attribute_name AS DONNEE_ADDITIONNELLE
  , DECODE(fd.attribute_datatype, 0, 'Number', 7, 'String', null) AS TYPE
  , fd.description AS DESCRIPTION
  , fd.is_required AS OBLIGATOIRE
FROM
  TABLE_FLEX_DEFN fd
  , MTM_FLEX_DEFN0_FLEX_TMPL0 mtm
  , TABLE_FLEX_TMPL ft
  , TABLE_X_ELM_DETAIL theme
  , TABLE_X_LIST_PARAM_ACT_V v
WHERE
  ft.objid = mtm.flex_tmpl2flex_defn
  AND fd.objid = mtm.flex_defn2flex_tmpl
  AND fd.objid = mtm.flex_defn2flex_tmpl
  AND theme.x_elm_det2flex_tmp = ft.objid
  AND v.x_motif_theme_code = theme.x_code
  AND v.x_usr_nom = 'Id4179E'
  AND v.x_activite_idfonc = 'ACT036'
  AND v.x_motif_code = 'ADM_02'
  AND theme.x_code = 'NME01'
ORDER BY v.x_usr_nom, v.x_activite_idfonc, v.x_motif_code, v.x_motif_theme_code, fd.attribute_name
*/
]]></script></con:config></con:testStep><con:testStep type="request" name="020 SM069 CreerDemandeV2 avec donnees additionnelles FAST" id="41402b03-6c2b-49b0-9122-51ac3f1e6f7d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDemandePort</con:interface><con:operation>creerDemande</con:operation><con:request name="020 SM069 CreerDemandeV2 avec donnees additionnelles FAST" id="4061f846-4ad6-422f-b0cf-08d1e2ac9b08" useWsAddressing="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file"/><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@max-size">0</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/webservices/CreerDemande/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/CreerDemande">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:CreerDemande>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>02.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:contact>${#TestCase#contactObjid1}</cre:contact>
            <cre:compteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:compteClient>
            <cre:personne>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:personne>
            <cre:typePersonne>Physique</cre:typePersonne>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:dateCreation>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateCreation>
            <cre:motifDemande>INT</cre:motifDemande>
            <cre:activite>ACT001</cre:activite>
            <cre:nature>Contestation</cre:nature>
            <cre:commentaire>Pas de commentaires</cre:commentaire>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <!--Zero or more repetitions: parametres FAST (donnees additionnelles) -->
            <cre:donnees>
               <cre:nom>PDVCONTACTNUMBER</cre:nom>
               <cre:description>1</cre:description>
            </cre:donnees>
         </cre:question>
      </cre:CreerDemande>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0cc2ba07-a083-4185-83cf-ef43648f958c"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b1d9fdf6-d072-490c-8d4f-322d358f4ddf"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="d354a51e-95ff-4316-898d-0ed40cfe3ffb"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="adbe5a04-4606-43e9-8a6b-258b3d67f3c6"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDemandeBdd" id="88e070e9-0bdf-4244-95be-368aed2d90b8"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idExterneDemande = xmlResponse["//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idDemande[1]"];
//log.info( "xmlResponse.idExterneDemande = " + idExterneDemande );

assert idExterneDemande != null &amp;&amp; idExterneDemande != "" : "No 'idDemande' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE x_id_externe = ${idExterneDemande}
"""
);
assert rows.size() >= 1 : "Database record not found : idExterneDemande = '${idExterneDemande}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="021 SM069 CreerDemandeV2 sans donnee additionnelle" id="ea7a890a-1282-424c-8e7d-26c674d39ed0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDemandePort</con:interface><con:operation>creerDemande</con:operation><con:request name="021 SM069 CreerDemandeV2 sans donnee additionnelle" id="1a19f3d3-e9db-4c45-860b-e8e03f4df77e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/webservices/CreerDemande/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/CreerDemande">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:CreerDemande>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>02.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:contact>${#TestCase#contactObjid1}</cre:contact>
            <cre:compteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:compteClient>
            <cre:personne>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:personne>
            <cre:typePersonne>Physique</cre:typePersonne>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:dateCreation>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateCreation>
            <cre:motifDemande>INT</cre:motifDemande>
            <cre:activite>ACT001</cre:activite>
            <cre:nature>Contestation</cre:nature>
            <cre:commentaire>Pas de commentaires</cre:commentaire>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
         </cre:question>
      </cre:CreerDemande>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="555b8b28-7c04-41d6-8bfc-697a7c6e4b74"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="6db51fc9-95d7-4c1a-8f97-6821aad8a58c"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="58bb474f-df6b-4cc7-8ba7-7327b2e6ad01"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="4290cead-46fb-4779-a4de-1828ce75bab9"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDemandeBdd" id="db01c158-7f76-416f-a540-6b5cc6492f4e"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idExterneDemande = xmlResponse["//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idDemande[1]"];
//log.info( "xmlResponse.idExterneDemande = " + idExterneDemande );

assert idExterneDemande != null &amp;&amp; idExterneDemande != "" : "No 'idDemande' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE x_id_externe = ${idExterneDemande}
"""
);
assert rows.size() >= 1 : "Database record not found : idExterneDemande = '${idExterneDemande}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="031 SM026 CreerContactV3 sans dossier" id="e5a87ba0-4465-49ad-8071-4a01baaeb95c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerContactPort</con:interface><con:operation>creerContact</con:operation><con:request name="031 SM026 CreerContactV3 sans dossier" id="b6191695-9058-4f20-a840-12307479ead3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crct3/CreerContactService/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerContact">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerContact>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</cre:clfyIdPersonnePhysique>
            <!--cre:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:idFoncPersonnePhysique-->
            <!--cre:idFoncDemande></cre:idFoncDemande-->
            <!--cre:idFoncDossier>${#TestCase#dossierObjid1}</cre:idFoncDossier-->
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canalContact>RC</cre:canalContact>
            <cre:mediaContact>WEB</cre:mediaContact>
         </cre:question>
      </cre:creerContact>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="149a419a-15e5-4298-855f-0904f1a919ff"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="a1bcccee-3df6-463e-b688-cca734ee3b05"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="cf49e824-ff12-4356-a1fc-7c826b1e4f9b"><con:configuration><path>declare namespace n1='http://sigc.sfr.com/creerContact';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/creerContact';
//m:creerContactResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="040 SM039 CloreContactV2" id="3c7b200d-0206-4cab-b0be-baa5c0e0c845"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CloreContactPort</con:interface><con:operation>cloreContact</con:operation><con:request name="040 SM039 CloreContactV2" id="c8e2ff5e-08e1-4a06-a2aa-6e03b6a19e47"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clct/CloreContactService/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clor="http://sigc.sfr.com/cloreContact">
   <soapenv:Header/>
   <soapenv:Body>
      <clor:cloreContact>
         <clor:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</clor:sessionId>
         <clor:entete>
            <clor:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</clor:idTransaction>
            <clor:numeroFlux>FFLINT3022</clor:numeroFlux>
            <clor:ssaEmetteur>0883</clor:ssaEmetteur>
            <clor:versionFlux>02.00</clor:versionFlux>
            <clor:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateOrigineFlux>
            <clor:ssaRecepteur>0284</clor:ssaRecepteur>
            <clor:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateTraitementFlux>
            <clor:typeFlux>QU</clor:typeFlux>
         </clor:entete>
         <clor:question>
            <clor:idContact>${#TestCase#contactToCloseObjid2}</clor:idContact>
         </clor:question>
      </clor:cloreContact>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f51c408-8a85-4886-b61d-5923170ec18d"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="070c7044-888e-47f8-a9d3-1dc24ad1dab8"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="4be96b0c-d96c-49f8-9d55-1e7072e251d2"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/cloreContact';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/cloreContact';
//m:cloreContactResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="041 SM070 CloreDemandeV1" id="27332d1b-14de-4c92-8caa-8c0362f8806a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CloreDemandePort</con:interface><con:operation>cloreDemande</con:operation><con:request name="041 SM070 CloreDemandeV1" id="e0486f73-5061-4096-a906-53bdb6f8d293"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clde/CloreDemandeService/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clor="http://sigc.sfr.com/cloreDemande">
   <soapenv:Header/>
   <soapenv:Body>
      <clor:cloreDemande>
         <clor:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</clor:sessionId>
         <clor:entete>
            <clor:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</clor:idTransaction>
            <clor:numeroFlux>FFLINT3022</clor:numeroFlux>
            <clor:ssaEmetteur>0883</clor:ssaEmetteur>
            <clor:versionFlux>01.00</clor:versionFlux>
            <clor:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateOrigineFlux>
            <clor:ssaRecepteur>0284</clor:ssaRecepteur>
            <clor:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateTraitementFlux>
            <clor:typeFlux>QU</clor:typeFlux>
         </clor:entete>
         <clor:question>
            <clor:idDemande>${#TestCase#tmpDemandeToClose2.idExterne}</clor:idDemande>
            <clor:resultatDemande>Réalisée</clor:resultatDemande>
         </clor:question>
      </clor:cloreDemande>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="aa52247e-ae58-40c2-a2f7-1ebf6d1f34a9"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="cf35b146-b3ed-41d4-b25b-0cd72a963608"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="7b275df3-f896-46da-9d80-4ccf1a9326c3"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/cloreDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/cloreDemande';
//m:cloreDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="042 SM002 CloreActionProactiveV2" id="dd4016a3-0605-4ba6-b4f1-9c2a52950524"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CloreActionProactivePort</con:interface><con:operation>cloreActionProactive</con:operation><con:request name="042 SM002 CloreActionProactiveV2" id="73aff2d6-dcc3-49e6-aa90-ca1e65eb0b9b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clap/CloreActionProactiveService/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clor="http://sigc.sfr.com/cloreActionProactive">
   <soapenv:Header/>
   <soapenv:Body>
      <clor:cloreActionProactive>
         <clor:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</clor:sessionId>
         <clor:entete>
            <clor:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</clor:idTransaction>
            <clor:numeroFlux>FFLINT3022</clor:numeroFlux>
            <clor:ssaEmetteur>0883</clor:ssaEmetteur>
            <clor:versionFlux>02.00</clor:versionFlux>
            <clor:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateOrigineFlux>
            <clor:ssaRecepteur>0284</clor:ssaRecepteur>
            <clor:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateTraitementFlux>
            <clor:typeFlux>QU</clor:typeFlux>
         </clor:entete>
         <clor:question>
            <clor:idActionProactive>${#TestCase#actionProactiveToCloseObjid2}</clor:idActionProactive>
            <clor:statutComplementaire></clor:statutComplementaire>
            <clor:raison></clor:raison>
         </clor:question>
      </clor:cloreActionProactive>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="76f1745b-44b2-4bbe-81f3-5e20d34cbdb6"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="fa1abd4e-e3f1-4b90-bad1-eeb5b47837ff"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="5dc419f7-f0ee-4bd3-b68b-451ffc1191fc"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/cloreActionProactive';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/cloreActionProactive';
//m:cloreActionProactiveResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="050 SM005 ModifierAdresseV5 Titulaire (modif) sans id demande" id="abce68bb-9454-4127-b983-f22e4e7507d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="050 SM005 ModifierAdresseV5 Titulaire (modif) sans id demande" id="32438ad7-ca6c-44e7-b1cd-5d99030dc013"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:modificationAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Titulaire</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:modificationAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="374ed73d-6144-4220-ad4c-c4d9d2d11c9e"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="38666f72-24b8-42c9-b6b3-c3299d7031c2"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="f67aba72-84d1-45bf-8b07-9081d2ae7748"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="b7a39445-f6ac-411c-8327-9f406b213754"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="051 Call RechercherClient" id="447a10c2-1775-41fe-a406-77d62b1daf67"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="052 SM005 ModifierAdresseV5 Titulaire (reset modif) avec id demande" id="70d4699c-6d9f-4e95-a96c-46d796ef98a1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="052 SM005 ModifierAdresseV5 Titulaire (reset modif) avec id demande" id="d8f3f46c-56d2-4187-9112-ef61d32596e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:idFoncDemande>${#TestCase#tmpDemande1.idNumber}</mod:idFoncDemande>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:modificationAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Titulaire</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:modificationAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="994df100-a2bc-4d7b-a489-51e38e4bed9d"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1821ae29-ae4e-4f61-af8d-f64a272aa811"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="fad653df-d6e1-47ef-878f-38580b1f049f"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="dc8f1bae-8739-45b5-a9fa-1f53065cf0bd"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/ModifierAdresse';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/ModifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="390be828-b479-4d70-881b-07e48856d570"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="053 Call RechercherClient" id="5452162c-6863-49cd-a8e7-e28ea9e8c877"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="060 SM005 ModifierAdresseV5 Facturation (creation) sans id demande" id="21a426f6-6744-4251-be8e-07c78606b522"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="060 SM005 ModifierAdresseV5 Facturation (creation) sans id demande" id="bd3eaf5c-4d37-46d1-abb0-d4f815cb3d27"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:ajoutAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Facturation</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:ajoutAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f0936307-fea9-4ebb-9256-04fd24436e54"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="aec0b3e6-17f1-4bba-b864-736f98b4a5ef"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="733b2118-ab34-4c3c-aa22-0d03b731c0ce"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="ada94865-e529-42e1-93da-6b9580e6e924"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="061 SM005 ModifierAdresseV5 Facturation (reset creation) avec id demande" id="4cfce0b7-f3ef-4bed-add9-66977d7d5c39"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="061 SM005 ModifierAdresseV5 Facturation (reset creation) avec id demande" id="26986996-7371-4757-8b2e-b7593c40e8e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:idFoncDemande>${#TestCase#tmpDemande1.idNumber}</mod:idFoncDemande>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:ajoutAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Facturation</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:ajoutAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="293e9df3-a4b6-4c8a-8606-831f19bf8bed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1aa7ced6-75de-4fdc-a733-9ebe08167de0"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="598fafef-a0cf-45c4-8471-850fd72cb749"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="fc89bda6-a7de-4ebc-aadc-1324ef40e626"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="a15ba7c9-eb9a-4294-a39a-fa4f655dc8f5"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="070 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) sans id demande" id="98da4379-208e-49bb-92c6-afaafa85caf0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePhysiquePort</con:interface><con:operation>modifierPersonnePhysique</con:operation><con:request name="070 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) sans id demande" id="201ccac4-cfc8-4706-a5da-e5eba0b14fc7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mppV5/ModifierPersonnePhysique/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonnePhysique">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonnePhysique>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:clfyIdPersonneUtilisateur>${#TestCase#tmpClient1.ppUtil.objid}</mod:clfyIdPersonneUtilisateur>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <mod:role>Utilisateur</mod:role>
         <mod:structureUtilisateur>
            <mod:utilisateur>
               <mod:civilite>MR</mod:civilite>
               <mod:nom>TESTEUR ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Toto</mod:prenom>
               <mod:departementNaissance>35</mod:departementNaissance>
               <mod:email1>titi@toto.fr</mod:email1>
               <mod:telephoneFixe>
                  <mod:indicatif>+33</mod:indicatif>
                  <mod:numero>0299123456</mod:numero>
               </mod:telephoneFixe>
            </mod:utilisateur>
         </mod:structureUtilisateur>
      </mod:modifierPersonnePhysique>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4a21d2f6-1993-48e9-aa57-9eda706632f5"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="fac5b8c9-ae8e-426c-9c08-add5e4cde73b"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="4e9c0c86-e5b1-4f1c-b4ee-73bf84fb3b85"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonnePhysique';
declare namespace n1='http://sigc.sfr.com/modifierPersonnePhysique';
//m:modifierPersonnePhysiqueResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="071 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) avec id demande" id="5700a5cb-17de-494e-a97c-64fe80b3115a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePhysiquePort</con:interface><con:operation>modifierPersonnePhysique</con:operation><con:request name="071 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) avec id demande" id="9c642be6-a68d-4e45-9d9c-b3cf3f5f0623"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mppV5/ModifierPersonnePhysique/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonnePhysique">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonnePhysique>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:idFoncDemande>${#TestCase#tmpDemande1.idExterne}</mod:idFoncDemande>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:clfyIdPersonneUtilisateur>${#TestCase#tmpClient1.ppUtil.objid}</mod:clfyIdPersonneUtilisateur>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <mod:role>Utilisateur</mod:role>
         <mod:structureUtilisateur>
            <mod:utilisateur>
               <mod:civilite>MR</mod:civilite>
               <mod:nom>TESTEUR ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Toto</mod:prenom>
               <mod:departementNaissance>35</mod:departementNaissance>
               <mod:email1>titi@toto.fr</mod:email1>
               <mod:telephoneFixe>
                  <mod:indicatif>+33</mod:indicatif>
                  <mod:numero>0299123456</mod:numero>
               </mod:telephoneFixe>
            </mod:utilisateur>
         </mod:structureUtilisateur>
      </mod:modifierPersonnePhysique>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="caf6f4de-7d76-408e-8705-a6fc4a4d0079"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="6a8f259a-76cf-4b90-9b4d-38c8db6deae0"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="995aded7-a871-4434-976e-67ed14384d9b"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonnePhysique';
declare namespace n1='http://sigc.sfr.com/modifierPersonnePhysique';
//m:modifierPersonnePhysiqueResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="7ec2b9fe-521c-4146-a52d-72ecad149d61"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonnePhysique';
declare namespace n1='http://sigc.sfr.com/modifierPersonnePhysique';
//m:modifierPersonnePhysiqueResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="080 Call RechercherClient" id="ad80d888-d967-4927-8527-c688ad61ff4e"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="081 SM011 ModifierDonneesPersoV5 sans id demande" id="48df5ff1-2a5a-4e62-8c59-0ab36629c6c8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierDonneesPersonnellesPort</con:interface><con:operation>modifierDonneesPersonnelles</con:operation><con:request name="081 SM011 ModifierDonneesPersoV5 sans id demande" id="3f2e4c70-a802-490d-ade3-b7256186b94b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mdpV5/ModifierDonneesPersonnelles/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierDonneesPersonnelles">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierDonneesPersonnelles>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:ancienneValeur>
               <mod:email1>${#TestCase#tmpClient1.ppTitu.email}</mod:email1>
               <mod:personnePhysiqueData>
                  <mod:civilite>${#TestCase#tmpClient1.ppTitu.civilite}</mod:civilite>
                  <mod:nom>${#TestCase#tmpClient1.ppTitu.nom}</mod:nom>
                  <mod:prenom>${#TestCase#tmpClient1.ppTitu.prenom}</mod:prenom>
                  <mod:dateNaissance>${#TestCase#tmpClient1.ppTitu.dateNaissance}</mod:dateNaissance>
                  <mod:departementNaissance>${#TestCase#tmpClient1.ppTitu.deptNaissance}</mod:departementNaissance>
                  <mod:sirenSiret></mod:sirenSiret>
                  <mod:niveauQualificationPro></mod:niveauQualificationPro>
               </mod:personnePhysiqueData>
               <mod:personneMoraleData>
                  <mod:codeAPE></mod:codeAPE>
                  <mod:contact></mod:contact>
                  <mod:numeroTvaUE></mod:numeroTvaUE>
                  <mod:raisonSociale></mod:raisonSociale>
                  <mod:siren></mod:siren>
                  <mod:siret></mod:siret>
               </mod:personneMoraleData>
               <mod:telephoneFax>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFax>
               <mod:telephoneFixe>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFixe>
               <mod:telephoneMobile>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneMobile>
               <mod:contactPrivilegieData>
                  <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
                  <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
                  <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
                  <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
                  <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
                  <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
                  <mod:langueUsage>FR</mod:langueUsage>
               </mod:contactPrivilegieData>
               <!--Zero or more repetitions:-->
               <mod:optIn>
                  <mod:optInType>EMAIL</mod:optInType>
                  <mod:optIn>START</mod:optIn>
               </mod:optIn>
            </mod:ancienneValeur>
            <mod:email1>test1${=new Date().format("SSS")}@gmail.com</mod:email1>
            <mod:personnePhysiqueData>
               <mod:civilite>MR</mod:civilite>
               <mod:nom>TESTEUR ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Titi</mod:prenom>
               <mod:dateNaissance>1982-01-01</mod:dateNaissance>
               <mod:departementNaissance>56</mod:departementNaissance>
               <mod:sirenSiret></mod:sirenSiret>
               <mod:niveauQualificationPro></mod:niveauQualificationPro>
            </mod:personnePhysiqueData>
            <mod:personneMoraleData>
               <mod:codeAPE></mod:codeAPE>
               <mod:contact></mod:contact>
               <mod:numeroTvaUE></mod:numeroTvaUE>
               <mod:raisonSociale></mod:raisonSociale>
               <mod:siren></mod:siren>
               <mod:siret></mod:siret>
            </mod:personneMoraleData>
            <mod:telephoneFax>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFax>
            <mod:telephoneFixe>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFixe>
            <mod:telephoneMobile>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneMobile>
            <mod:contactPrivilegieData>
               <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
               <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
               <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
               <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
               <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
               <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
               <mod:langueUsage>FR</mod:langueUsage>
            </mod:contactPrivilegieData>
            <!--Zero or more repetitions:-->
            <mod:optIn>
               <mod:optInType>EMAIL</mod:optInType>
               <mod:optIn>START</mod:optIn>
            </mod:optIn>
         </mod:question>
         <mod:distributeur>
            <mod:codePDV></mod:codePDV>
            <mod:calculette></mod:calculette>
            <mod:login></mod:login>
            <mod:typelogin></mod:typelogin>
            <mod:canal></mod:canal>
         </mod:distributeur>
      </mod:modifierDonneesPersonnelles>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f221518-16e3-4d01-b486-49e871a66f53"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="cc0ae83f-bbce-4e93-9131-5c8de2e425ff"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="8de0aa67-a811-489b-b819-88ee9e02c2ac"><con:configuration><path>declare namespace m='http://sigc.sfr.com/modifierDonneesPersonnelles';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierDonneesPersonnelles';
//m:modifierDonneesPersonnellesResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="082 Call RechercherClient" id="d1d3b09f-f54e-4632-baec-7a33cf710d30"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="083 SM011 ModifierDonneesPersoV5 avec id demande" id="2199724e-f5f6-4b15-81e6-333e677581c5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierDonneesPersonnellesPort</con:interface><con:operation>modifierDonneesPersonnelles</con:operation><con:request name="083 SM011 ModifierDonneesPersoV5 avec id demande" id="df7eca03-6bed-4f55-aeb8-b33f9431cbbf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mdpV5/ModifierDonneesPersonnelles/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierDonneesPersonnelles">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierDonneesPersonnelles>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:idFoncDemande>${#TestCase#tmpDemande1.idNumber}</mod:idFoncDemande>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:ancienneValeur>
               <mod:email1>${#TestCase#tmpClient1.ppTitu.email}</mod:email1>
               <mod:personnePhysiqueData>
                  <mod:civilite>${#TestCase#tmpClient1.ppTitu.civilite}</mod:civilite>
                  <mod:nom>${#TestCase#tmpClient1.ppTitu.nom}</mod:nom>
                  <mod:prenom>${#TestCase#tmpClient1.ppTitu.prenom}</mod:prenom>
                  <mod:dateNaissance>${#TestCase#tmpClient1.ppTitu.dateNaissance}</mod:dateNaissance>
                  <mod:departementNaissance>${#TestCase#tmpClient1.ppTitu.deptNaissance}</mod:departementNaissance>
                  <mod:sirenSiret></mod:sirenSiret>
                  <mod:niveauQualificationPro></mod:niveauQualificationPro>
               </mod:personnePhysiqueData>
               <mod:personneMoraleData>
                  <mod:codeAPE></mod:codeAPE>
                  <mod:contact></mod:contact>
                  <mod:numeroTvaUE></mod:numeroTvaUE>
                  <mod:raisonSociale></mod:raisonSociale>
                  <mod:siren></mod:siren>
                  <mod:siret></mod:siret>
               </mod:personneMoraleData>
               <mod:telephoneFax>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFax>
               <mod:telephoneFixe>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFixe>
               <mod:telephoneMobile>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneMobile>
               <mod:contactPrivilegieData>
                  <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
                  <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
                  <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
                  <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
                  <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
                  <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
                  <mod:langueUsage>FR</mod:langueUsage>
               </mod:contactPrivilegieData>
               <!--Zero or more repetitions:-->
               <mod:optIn>
                  <mod:optInType>EMAIL</mod:optInType>
                  <mod:optIn>START</mod:optIn>
               </mod:optIn>
            </mod:ancienneValeur>
            <mod:email1>test2${=new Date().format("SSS")}@gmail.com</mod:email1>
            <mod:personnePhysiqueData>
               <mod:civilite>MME</mod:civilite>
               <mod:nom>TEST ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Tata</mod:prenom>
               <mod:dateNaissance>1982-02-02</mod:dateNaissance>
               <mod:departementNaissance>35</mod:departementNaissance>
               <mod:sirenSiret></mod:sirenSiret>
               <mod:niveauQualificationPro></mod:niveauQualificationPro>
            </mod:personnePhysiqueData>
            <mod:personneMoraleData>
               <mod:codeAPE></mod:codeAPE>
               <mod:contact></mod:contact>
               <mod:numeroTvaUE></mod:numeroTvaUE>
               <mod:raisonSociale></mod:raisonSociale>
               <mod:siren></mod:siren>
               <mod:siret></mod:siret>
            </mod:personneMoraleData>
            <mod:telephoneFax>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFax>
            <mod:telephoneFixe>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFixe>
            <mod:telephoneMobile>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneMobile>
            <mod:contactPrivilegieData>
               <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
               <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
               <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
               <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
               <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
               <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
               <mod:langueUsage>FR</mod:langueUsage>
            </mod:contactPrivilegieData>
            <!--Zero or more repetitions:-->
            <mod:optIn>
               <mod:optInType>EMAIL</mod:optInType>
               <mod:optIn>START</mod:optIn>
            </mod:optIn>
         </mod:question>
         <mod:distributeur>
            <mod:codePDV></mod:codePDV>
            <mod:calculette></mod:calculette>
            <mod:login></mod:login>
            <mod:typelogin></mod:typelogin>
            <mod:canal></mod:canal>
         </mod:distributeur>
      </mod:modifierDonneesPersonnelles>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7d0d8d52-db69-4851-aa6b-40db5ac8e37d"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="24a699a7-f68f-40f2-a9ca-44aa1306d98d"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="454a4926-fc25-41bc-ae8d-f225b416e99b"><con:configuration><path>declare namespace m='http://sigc.sfr.com/modifierDonneesPersonnelles';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierDonneesPersonnelles';
//m:modifierDonneesPersonnellesResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="d1cdd1e2-2d7e-4e2f-8a45-8cb32bb72355"><con:configuration><path>declare namespace m='http://sigc.sfr.com/modifierDonneesPersonnelles';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierDonneesPersonnelles';
//m:modifierDonneesPersonnellesResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="084 Call RechercherClient" id="aa0f218c-2161-4eeb-b366-b8a87a4c881b"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="090 SM017 ModifierMoyenPaiementV6 (modif) sans id demande" id="98fddab9-8613-46a5-b0fc-1481e674c30b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierMoyenPaiementPort</con:interface><con:operation>modifierMoyenPaiement</con:operation><con:request name="090 SM017 ModifierMoyenPaiementV6 (modif) sans id demande" id="03b6331b-6681-437d-8700-62a6237cad20"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mmpV6/ModifierMoyenPaiement/V6.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierMoyenPaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierMoyenPaiement>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>06.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
         <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
         <mod:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</mod:clfyIdMynPmt>
         <mod:compteFacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>1</mod:applicationSurcout>
         </mod:compteFacturation>
         <mod:moyenDePaiementDataOld>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>15589</mod:codeEtablissement>
               <mod:codeGuichet>33552</mod:codeGuichet>
               <mod:numeroCompte>21696272543</mod:numeroCompte>
               <mod:cle>77</mod:cle>
               <mod:iban>FR7615589335522169627254377</mod:iban>
               <mod:bic>CMBRFR2BXXX</mod:bic>
               <mod:titulaireCompte>Testeur 1</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementDataOld>
         <mod:moyenDePaiementData>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>30004</mod:codeEtablissement>
               <mod:codeGuichet>00319</mod:codeGuichet>
               <mod:numeroCompte>76995378100</mod:numeroCompte>
               <mod:cle>60</mod:cle>
               <mod:iban>FR7630004003197699537810060</mod:iban>
               <mod:bic>BNPAFRPPXXX</mod:bic>
               <mod:titulaireCompte>Testeur 2</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementData>
      </mod:modifierMoyenPaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ee862f8e-abe1-42b3-b870-0b69e7266caf"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="befbda7e-2d73-44ef-a08d-dffe96d6b2be"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="dcb21b36-b1c1-4d80-b22d-c90e6778866a"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="091 Call RechercherClient" id="6c6475c0-13f9-4e17-ab54-656b95162215"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="092 SM046 RepliquerMoyenDePaiementV4 (modif) sans id demande" id="519fb399-36a7-4684-ae36-07e4649696a7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>RepliquerMoyenDePaiementPort</con:interface><con:operation>repliquerMoyenDePaiement</con:operation><con:request name="092 SM046 RepliquerMoyenDePaiementV4 (modif) sans id demande" id="08fa3a4d-bf1c-4ddf-be7c-8c3ff7f51f56"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_rmpV4/RepliquerMoyenDePaiement/V4.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rep="http://sigc.sfr.com/repliquerMoyenDePaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <rep:repliquerMoyenDePaiement>
         <rep:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</rep:sessionId>
         <rep:canalContact>RC</rep:canalContact>
         <rep:mediaContact>WEB</rep:mediaContact>
         <rep:entete>
            <rep:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</rep:idTransaction>
            <rep:numeroFlux>FFLINT2801</rep:numeroFlux>
            <rep:ssaEmetteur>0883</rep:ssaEmetteur>
            <rep:versionFlux>04.00</rep:versionFlux>
            <rep:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateOrigineFlux>
            <rep:ssaRecepteur>0284</rep:ssaRecepteur>
            <rep:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateTraitementFlux>
            <rep:typeFlux>QU</rep:typeFlux>
         </rep:entete>
         <rep:question>
            <rep:vraiFauxNotification>true</rep:vraiFauxNotification>
            <rep:clfyIdContact>${#TestCase#contactObjid1}</rep:clfyIdContact>
            <rep:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</rep:clfyIdCompteClient>
            <rep:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</rep:idFoncCompteClient>
            <rep:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</rep:clfyIdPersonneDemandeur>          
            <rep:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</rep:clfyIdPersonnePorteSur>
            <rep:typePersonneDemandeur>Physique</rep:typePersonneDemandeur>
            <rep:typePersonnePorteSur>Physique</rep:typePersonnePorteSur>
            <rep:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</rep:clfyIdMynPmt>
            <rep:compteDeFacturation>
               <rep:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idfonc}</rep:idFoncCompteFactu>
            </rep:compteDeFacturation>
            <rep:moyenPaiementData>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>30004</rep:codeEtablissement>
                  <rep:codeGuichet>00319</rep:codeGuichet>
                  <rep:numeroCompte>76995378100</rep:numeroCompte>
                  <rep:cle>60</rep:cle>
                  <rep:iban>FR7630004003197699537810060</rep:iban>
                  <rep:bic>BNPAFRPPXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 2</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementData>
            <rep:moyenPaiementDataOld>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>15589</rep:codeEtablissement>
                  <rep:codeGuichet>33552</rep:codeGuichet>
                  <rep:numeroCompte>21696272543</rep:numeroCompte>
                  <rep:cle>77</rep:cle>
                  <rep:iban>FR7615589335522169627254377</rep:iban>
                  <rep:bic>CMBRFR2BXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 1</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementDataOld>
         </rep:question>
      </rep:repliquerMoyenDePaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e23c6f7b-f7c3-47f6-bb28-39c2db30ff22"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="18c7f8c6-ac4b-446c-b8e3-ec0d1855f457"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="b82043ce-5299-45a1-be8c-bafb4bb68b7b"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="802bfd78-e4f8-4e31-9396-dfd4896281b8"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
exists(//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="093 Call RechercherClient" id="2cab5d6e-bf1a-43bb-aef0-6b2998aef2bb"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="100 SM017 ModifierMoyenPaiementV6 (reset modif) avec id demande" id="c4a3b909-6f41-4271-ab77-99a2932006cb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierMoyenPaiementPort</con:interface><con:operation>modifierMoyenPaiement</con:operation><con:request name="100 SM017 ModifierMoyenPaiementV6 (reset modif) avec id demande" id="bb480a0e-6d97-4cb8-a627-8f0beb5edc54"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mmpV6/ModifierMoyenPaiement/V6.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierMoyenPaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierMoyenPaiement>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>06.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:idFoncDemande>${#TestCase#tmpDemande1.idExterne}</mod:idFoncDemande>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
         <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
         <mod:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</mod:clfyIdMynPmt>
         <mod:compteFacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>1</mod:applicationSurcout>
         </mod:compteFacturation>
         <mod:moyenDePaiementDataOld>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>30004</mod:codeEtablissement>
               <mod:codeGuichet>00319</mod:codeGuichet>
               <mod:numeroCompte>76995378100</mod:numeroCompte>
               <mod:cle>60</mod:cle>
               <mod:iban>FR7630004003197699537810060</mod:iban>
               <mod:bic>BNPAFRPPXXX</mod:bic>
               <mod:titulaireCompte>Testeur 2</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementDataOld>
         <mod:moyenDePaiementData>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>15589</mod:codeEtablissement>
               <mod:codeGuichet>33552</mod:codeGuichet>
               <mod:numeroCompte>21696272543</mod:numeroCompte>
               <mod:cle>77</mod:cle>
               <mod:iban>FR7615589335522169627254377</mod:iban>
               <mod:bic>CMBRFR2BXXX</mod:bic>
               <mod:titulaireCompte>Testeur 1</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementData>
      </mod:modifierMoyenPaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e8bf708f-ffa0-4551-a0c6-f438219f16cf"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="8d4b0eda-86b3-45b2-ada5-86b666ed0ba4"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="f2bf7fb0-9f63-4205-87e2-989ebfd7d52d"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="5b157acb-9fed-498f-b70c-1ebb7f27d686"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="461a48e5-ec34-4178-aac8-c9d99146938e"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text() = 'Erreur interne. Résultats de recherche incorrects (ex n élements au lieu de 1 attendu)'</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="101 Call RechercherClient" id="3e5309c1-c75a-42c9-b7a3-862e641c6a8e"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="102 SM046 RepliquerMoyenDePaiementV4 (reset modif) avec id demande" id="b23a0cff-9383-47fa-ad94-ffa8cf168169"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>RepliquerMoyenDePaiementPort</con:interface><con:operation>repliquerMoyenDePaiement</con:operation><con:request name="102 SM046 RepliquerMoyenDePaiementV4 (reset modif) avec id demande" id="920fad70-6b19-4c1f-a717-bdfe3108fb00"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_rmpV4/RepliquerMoyenDePaiement/V4.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rep="http://sigc.sfr.com/repliquerMoyenDePaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <rep:repliquerMoyenDePaiement>
         <rep:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</rep:sessionId>
         <rep:canalContact>RC</rep:canalContact>
         <rep:mediaContact>WEB</rep:mediaContact>
         <rep:entete>
            <rep:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</rep:idTransaction>
            <rep:numeroFlux>FFLINT2801</rep:numeroFlux>
            <rep:ssaEmetteur>0883</rep:ssaEmetteur>
            <rep:versionFlux>04.00</rep:versionFlux>
            <rep:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateOrigineFlux>
            <rep:ssaRecepteur>0284</rep:ssaRecepteur>
            <rep:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateTraitementFlux>
            <rep:typeFlux>QU</rep:typeFlux>
         </rep:entete>
         <rep:question>
            <rep:vraiFauxNotification>true</rep:vraiFauxNotification>
            <rep:clfyIdContact>${#TestCase#contactObjid1}</rep:clfyIdContact>
            <rep:clfyIdDemande>${#TestCase#tmpDemande1.objid}</rep:clfyIdDemande>
            <rep:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</rep:clfyIdCompteClient>
            <rep:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</rep:idFoncCompteClient>
            <rep:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</rep:clfyIdPersonneDemandeur>          
            <rep:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</rep:clfyIdPersonnePorteSur>
            <rep:typePersonneDemandeur>Physique</rep:typePersonneDemandeur>
            <rep:typePersonnePorteSur>Physique</rep:typePersonnePorteSur>
            <rep:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</rep:clfyIdMynPmt>
            <rep:compteDeFacturation>
               <rep:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idfonc}</rep:idFoncCompteFactu>
            </rep:compteDeFacturation>
            <rep:moyenPaiementData>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>30004</rep:codeEtablissement>
                  <rep:codeGuichet>00319</rep:codeGuichet>
                  <rep:numeroCompte>76995378100</rep:numeroCompte>
                  <rep:cle>60</rep:cle>
                  <rep:iban>FR7630004003197699537810060</rep:iban>
                  <rep:bic>BNPAFRPPXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 2</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementData>
            <rep:moyenPaiementDataOld>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>15589</rep:codeEtablissement>
                  <rep:codeGuichet>33552</rep:codeGuichet>
                  <rep:numeroCompte>21696272543</rep:numeroCompte>
                  <rep:cle>77</rep:cle>
                  <rep:iban>FR7615589335522169627254377</rep:iban>
                  <rep:bic>CMBRFR2BXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 1</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementDataOld>
         </rep:question>
      </rep:repliquerMoyenDePaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="776f5747-8bc1-4242-93a1-aa375d3b0bd2"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="d3b57913-e3ee-4a5d-9672-2dba5a97e2b9"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="1898ca55-a1df-4acb-97f2-0716d9eaced5"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDemande" id="ad757ffc-55d2-4fa6-95e9-fdd25dc34d80"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
exists(//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:idFoncDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="3ca512a4-0906-4274-be18-4726c6918b4c"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="13d52b19-d918-40ff-97e9-390b5e380255"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:libelleErreur[1]/text() = 'Erreur interne. Résultats de recherche incorrects (ex n élements au lieu de 1 attendu)'</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="103 Call RechercherClient" id="1722fbc4-8253-442b-93db-96fceed4f51a"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="110 SM079 ModifierPersonneV3 (Titulaire) sans id demande" id="6bdaafe5-2d0d-4903-93df-2f2786a8ccbe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePort</con:interface><con:operation>modifierPersonne</con:operation><con:request name="110 SM079 ModifierPersonneV3 (Titulaire) sans id demande" id="98660a90-5dc1-48eb-b5c4-6979ff01fc2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mpnV3/ModifierPersonne/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonne">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonne>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:adresse>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Titulaire</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>35000</mod:codePostal>
            <mod:ville>RENNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresse>
         <mod:adresseFacturation>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Payeur</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>56000</mod:codePostal>
            <mod:ville>VANNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresseFacturation>
         <mod:vraiFauxModifAdresseFacturation>true</mod:vraiFauxModifAdresseFacturation>
         <mod:canalContact>RC</mod:canalContact>
         <!--<mod:clfyIdActionProActive></mod:clfyIdActionProActive>-->
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePhysique>
         <mod:entete>
            <mod:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT3022</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:versionFlux>03.00</mod:versionFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <!--<mod:idFoncDemande></mod:idFoncDemande>-->
         <mod:idFoncPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonneDemandeur>
         <mod:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonnePhysique>
         <!--<mod:idFoncPersonneMorale></mod:idFoncPersonneMorale>-->
         <mod:idOffreAramis></mod:idOffreAramis>
         <mod:mediaContact>WEB</mod:mediaContact>
         <!--<mod:moyenDePaiement/>-->
         <mod:moyenDePaiementCompte>
            <mod:titulaireCompte>TITULAIRE ${=new Date().format("SSS")}</mod:titulaireCompte>
         </mod:moyenDePaiementCompte>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <!--<mod:personne/>-->
         <mod:personnePhysique>
            <mod:civilite>MR</mod:civilite>
            <mod:nom>TITULAIRE ${=new Date().format("SSS")}</mod:nom>
            <mod:prenom>Test</mod:prenom>
            <mod:dateNaissance>1982-01-01</mod:dateNaissance>
            <mod:departementNaissance>35</mod:departementNaissance>
         </mod:personnePhysique>
         <mod:role>Titulaire</mod:role>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <!--<mod:dateEcheance></mod:dateEcheance>-->
         <mod:clfyIdADGE></mod:clfyIdADGE>
         <mod:vraiFauxTitulaire>true</mod:vraiFauxTitulaire>
         <mod:vraiFauxPayeur>false</mod:vraiFauxPayeur>
         <mod:vraiFauxUtilisateur>false</mod:vraiFauxUtilisateur>
         <mod:demergeSourceFlag>false</mod:demergeSourceFlag>
         <mod:demergeDestinationFlag>false</mod:demergeDestinationFlag>
         <mod:demergeReason></mod:demergeReason>
         <mod:mode>M</mod:mode>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:comptefacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>0</mod:applicationSurcout>
         </mod:comptefacturation>
         <!--<mod:vraiFauxNotification>true</mod:vraiFauxNotification>-->
      </mod:modifierPersonne>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="597cef1d-cacb-4c78-ba7f-b8cd4df31409"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="578d4436-96a2-4dd4-b08e-53a463ec3cc6"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="b056da14-8b13-4ce1-8de0-9268eccfe152"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
//m:modifierPersonneResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="7545fb87-4988-4537-a865-5abe21d50d57"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="111 SM079 ModifierPersonneV3 (Titulaire) avec id demande" id="989ab4b9-4e8a-4a0b-803c-d2517a631a26"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePort</con:interface><con:operation>modifierPersonne</con:operation><con:request name="111 SM079 ModifierPersonneV3 (Titulaire) avec id demande" id="99de3a34-9266-40c6-afee-d55076b2f67a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mpnV3/ModifierPersonne/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonne">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonne>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:adresse>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Titulaire</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>35000</mod:codePostal>
            <mod:ville>RENNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresse>
         <mod:adresseFacturation>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Payeur</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>56000</mod:codePostal>
            <mod:ville>VANNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresseFacturation>
         <mod:vraiFauxModifAdresseFacturation>true</mod:vraiFauxModifAdresseFacturation>
         <mod:canalContact>RC</mod:canalContact>
         <!--<mod:clfyIdActionProActive></mod:clfyIdActionProActive>-->
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePhysique>
         <mod:entete>
            <mod:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT3022</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:versionFlux>03.00</mod:versionFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:idFoncDemande>${#TestCase#tmpDemande1.idExterne}</mod:idFoncDemande>
         <mod:idFoncPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonneDemandeur>
         <mod:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonnePhysique>
         <!--<mod:idFoncPersonneMorale></mod:idFoncPersonneMorale>-->
         <mod:idOffreAramis></mod:idOffreAramis>
         <mod:mediaContact>WEB</mod:mediaContact>
         <!--<mod:moyenDePaiement/>-->
         <mod:moyenDePaiementCompte>
            <mod:titulaireCompte>TITULAIRE ${=new Date().format("SSS")}</mod:titulaireCompte>
         </mod:moyenDePaiementCompte>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <!--<mod:personne/>-->   
         <mod:personnePhysique>
            <mod:civilite>MR</mod:civilite>
            <mod:nom>TITULAIRE ${=new Date().format("SSS")}</mod:nom>
            <mod:prenom>Test</mod:prenom>
            <mod:dateNaissance>1982-01-01</mod:dateNaissance>
            <mod:departementNaissance>35</mod:departementNaissance>
         </mod:personnePhysique>
         <mod:role>Titulaire</mod:role>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <!--<mod:dateEcheance></mod:dateEcheance>-->
         <mod:clfyIdADGE></mod:clfyIdADGE>
         <mod:vraiFauxTitulaire>true</mod:vraiFauxTitulaire>
         <mod:vraiFauxPayeur>false</mod:vraiFauxPayeur>
         <mod:vraiFauxUtilisateur>false</mod:vraiFauxUtilisateur>
         <mod:demergeSourceFlag>false</mod:demergeSourceFlag>
         <mod:demergeDestinationFlag>false</mod:demergeDestinationFlag>
         <mod:demergeReason></mod:demergeReason>
         <mod:mode>M</mod:mode>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:comptefacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>0</mod:applicationSurcout>
         </mod:comptefacturation>
         <!--<mod:vraiFauxNotification>true</mod:vraiFauxNotification>-->
      </mod:modifierPersonne>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e4a544e6-28b1-4faa-8b2c-6474bc9ce43f"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="bf2caee2-7435-4672-8c9c-450c1b1f3ef2"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="be4b422c-6496-4c94-a96f-42b54442a39f"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
//m:modifierPersonneResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="4bcf78bd-e238-4aac-a1bb-8a2ee2b66e52"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="31d12fd3-8623-4246-95f1-502a020df48a"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
//m:modifierPersonneResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="120 SM081 CreerDossierV3 avec donnees additionnelles FAST et sans id demande" id="db70d30e-e7a0-4070-a660-f33cb7524f3f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="120 SM081 CreerDossierV3 avec donnees additionnelles FAST et sans id demande" id="78f6e94b-de1b-4c15-88b5-5ace4f2d2a8b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>CTI02</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <!--Zero or more repetitions:-->
            <cre:parametreAdditionnel>
               <cre:code>ATT_AUCUN</cre:code>
               <cre:valeur>Test</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>CUSTOMERCONTACTORMAIL</cre:code>
               <cre:valeur>toto@gmail.fr</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>DISTRIBUTORCODE</cre:code>
               <cre:valeur>1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>DISTRIBUTORLABEL</cre:code>
               <cre:valeur>Test1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>DISTRIBUTORNAME</cre:code>
               <cre:valeur>Test2</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>PDVCONTACTNUMBER</cre:code>
               <cre:valeur>1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="68944af3-21d6-4ce7-a87b-005b8c291804"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1785b26b-d57e-4e92-a93a-77b5ae7f33b1"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="f24a76fe-484d-499a-a632-46bc8759fc1e"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="50f2e322-a5b6-402d-969b-196efdc061a1"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="c54fa1aa-ebe1-4408-8062-75be862dbdc4"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="121 SM081 CreerDossierV3 avec donnees additionnelles FAST et avec id demande" id="c79ab339-c70a-44ac-9dfa-169d769a7830"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="121 SM081 CreerDossierV3 avec donnees additionnelles FAST et avec id demande" id="0fe85192-86c5-4c01-9890-b3d3bcfd2f80"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idTechDemande>${#TestCase#tmpDemande1.objid}</cre:idTechDemande>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>NME01</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <!--Zero or more repetitions:-->
            <cre:parametreAdditionnel>
               <cre:code>PDVCONTACTNUMBER</cre:code>
               <cre:valeur>1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a2870cef-a368-4be3-af66-8a58da5faba2"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="4fc4d3dc-d083-4727-b3f9-ee98f3dea701"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="9797c6a7-5e3e-4120-80e7-06afaf023909"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="f1d0e0da-4613-4e13-89c4-d40dbef42b27"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="cf4f7186-1064-484d-9d4c-f1d46c1a002e"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="122 SM081 CreerDossierV3 sans donnees additionnelles FAST et sans id demande" id="f3da1cdd-3d04-44f9-a1d3-b3f89a1d2dfd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="122 SM081 CreerDossierV3 sans donnees additionnelles FAST et sans id demande" id="1cf61fed-6feb-4a0d-bf7b-1a330ebff518"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>NME01</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7231b518-ceb7-4f5d-aacd-2dbaae40dc79"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="af7233f2-aa37-40ad-bc3c-bb592277a5a6"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="1c644fb7-b9a0-4027-b043-7cef8f465ecb"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="ec3f43e2-5987-4185-af24-ef8c5c55722c"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="c11ee73b-685a-4805-88d2-5a78c9285277"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="123 SM081 CreerDossierV3 sans donnees additionnelles FAST et avec id demande" id="83dd32a4-2585-4995-80a1-c69aecc97a69"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="123 SM081 CreerDossierV3 sans donnees additionnelles FAST et avec id demande" id="2e486ade-778c-4256-b627-ed2b4c40ddfa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idTechDemande>${#TestCase#tmpDemande1.objid}</cre:idTechDemande>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>NME01</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2102cd2c-850e-40a6-b50b-3d255f4cbec6"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="9471c16b-074d-4338-9fd3-db46ae25844b"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="ea87609d-a31e-4946-b591-c2d9de99d92f"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="a46b5ba5-4cc7-43c5-89be-b43cc67941b1"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="7022b76f-c740-412e-8862-e5992a6cb65e"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="999 Resultats" id="65bd6318-bade-494a-a173-9802a4443edf" disabled="true"><con:settings/><con:config><script><![CDATA[// TestRunner reports :
// CSV report of all TestSteps
// CSV report of all SMs
// TXT reports of each TestSteps
// Main HTML report with frames

String projectName   = testRunner.testCase.testSuite.project.name;
String urlWebService = testRunner.testCase.testSuite.getPropertyValue( "urlWebService" );

final String NEW_LINE = System.getProperty( "line.separator" );
final String SEP = ";";

File reportsDir = new File( testRunner.testCase.testSuite.project.getPropertyValue( "reports.dir" ) );
reportsDir.deleteDir(); // delete the "reports" directory with all contained files and subdirectories
if( !reportsDir.exists() )
{
    reportsDir.mkdir();
}

def csvFile1 = new File( reportsDir, "reports.csv" );
def csvFile2 = new File( reportsDir, "reports-SM.csv" );

def htmlFile = new File( reportsDir, "reports.html" );

def timestamp = new Date().format( "yyyy-MM-dd HH:mm" );

// CSV and TXT reports
def mapSm   = [:].withDefault { 0 };
def mapSmOK = [:].withDefault { 0 };
def mapSmIdName = [:];
def mapSmIdUrl = [:];
int nbSMTestSteps = 0;
int nbSMTestStepsOK = 0;

csvFile1.write( "Timestamp" + SEP + "SM" + SEP + "NbTestStepsOK" + SEP + "Status" + SEP + "TestStepName" + SEP + "FailedAssertions/ErrorMessages" + SEP + NEW_LINE );
for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
    log.info(testStepName);
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String idSM = "";
    String nomSM = "";
    def matcher = ( testStepName =~ / (SM[0-9]{3}) ([a-zA-Z0-9\\-_]+)(?= |$)/ );
    
    if( matcher.find() )
    {
    	   idSM  = matcher[0][1];
    	   nomSM = matcher[0][2];
    }
    
    String simpleErrorMessage = "";
    String fullErrorMessage   = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            simpleErrorMessage += ( ( index > 0 ) ? it.substring( 0, index + 1 ) : it ).replace( "\n", ". " ).replace( "\r", ". " ) + ". ";
            fullErrorMessage   += it + NEW_LINE;
        }
        simpleErrorMessage = simpleErrorMessage.trim();
        fullErrorMessage   = fullErrorMessage.trim();
    }
    
    if( idSM != null && idSM.length() > 0 )
    {
        mapSm[ idSM ]++;
        mapSmOK[ idSM ] += statusCodeOK;
        mapSmIdName[ idSM ] = nomSM;
        mapSmIdUrl[ idSM ] = context.expand( r.testStep.getPropertyValue( "Endpoint" ) );
        
        nbSMTestSteps++;
        nbSMTestStepsOK += statusCodeOK;
        
        csvFile1.append( timestamp + SEP + idSM + SEP + statusCodeOK + SEP + status + SEP + testStepName + SEP + simpleErrorMessage + SEP + NEW_LINE );
    }
    
    def txtFile = new File( reportsDir, testStepName.replace( " ", "_" ) + ".txt" );
    txtFile.write ( "Project    : " + projectName + NEW_LINE );
    txtFile.append( "Test Suite : " + testRunner.testCase.testSuite.name + NEW_LINE );
    txtFile.append( "Test Case  : " + testRunner.testCase.name + NEW_LINE );
    txtFile.append( "Test Step  : " + testStepName + NEW_LINE );
    txtFile.append( "Status     : " + status + NEW_LINE );
    txtFile.append( "Timestamp  : " + new Date( r.timeStamp ).format( "yyyy-MM-dd HH:mm:ss" ) + NEW_LINE );
    txtFile.append( "Duration   : " + r.timeTaken + " ms" + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "Failed assertions / Error messages :" + NEW_LINE + fullErrorMessage + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "URL : " + context.expand( r.testStep.getPropertyValue( "Endpoint" ) ) + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "XML Request :" + NEW_LINE + r.testStep.getPropertyValue( "RawRequest" ) + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "XML Response :" + NEW_LINE + r.testStep.getPropertyValue( "Response" ) + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
}

csvFile2.write( "Timestamp" + SEP + "SM" + SEP + "WebService" + SEP + "NbTestStepsOK" + SEP + "NbTotalTestSteps" + SEP + NEW_LINE );
mapSm.sort().each() {
    key, value -> csvFile2.append( timestamp + SEP + key + SEP + mapSmIdName[ key ] + SEP + mapSmOK[ key ] + SEP + value + SEP + NEW_LINE );
}
csvFile2.append( timestamp + SEP + "TOTAL" + SEP + "" + SEP + nbSMTestStepsOK + SEP + nbSMTestSteps + SEP + NEW_LINE );


// HTML reports : dashboard header
String htmlHeader = """<html>
<head>
<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
<title>${projectName} ${timestamp}</title>

<style type='text/css'>
* {
    color: black;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 10pt;
}

body {
    background-color: white;
    color: #858585;
    font-family: Arial, Helvetica, sans-serif;
}

table {
    background-color: #a6c1f4;
    border: #6495ed 3px solid;
}

td {
    background-color: white;
    border: #6495ed 1px solid;
    padding: 2px;
}

.titreRapport {
    color: black;
    font-weight: bold;
    font-size: 16pt;
    text-align: center;
    padding: 5px;
}

.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
}

a.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
    text-decoration: none;
}

.titre2 {
    background-color: #ffb43f;
    color: black;
    font-weight: bold;
    text-align: center;
    padding: 2px;
}

.titre3 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data1 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data2 {
    background-color: #a6c1f4;
    color: black;
}

.data3 {
    background-color: #dbe6fa;
    color: black;
}

.blue {
    background-color: #9ec6fd;
}

.red {
    background-color: red;
}

.green {
    background-color: #33ff66;
}

.orange {
    background-color: #ff9900;
}

</style>

</head>
<body>
<center>

<span class="titreRapport">SOAPUI unitary tests report : ${projectName}<br>http://${urlWebService}<br>${timestamp}</span>
<br/>
<br/>
<br/>
""";
htmlFile.write( htmlHeader );

// SM tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\"><a class=\"titre1\" href=\"" + csvFile2.getName() + "\" title=\"" + csvFile2.getName() + "\">SM report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">SM</td>" );
htmlFile.append( "<td class=\"titre2\">WebService</td>" );
htmlFile.append( "<td class=\"titre2\">Nb test steps OK</td>" );
htmlFile.append( "<td class=\"titre2\">Nb total test steps</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for ( e in mapSm.sort() ) {
    String idSM = e.key;
    int nbOk = mapSmOK[ e.key ];
    int nbTotal = e.value;
    String color = "data3";
    if( nbOk == 0 ) { color = "red"; }
    if( nbOk > 0 && nbOk == nbTotal ) { color = "green"; }
    if( nbOk > 0 && nbOk < nbTotal ) { color = "orange"; }
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td class=\"" + color + "\">" + idSM + "</td>" );
    htmlFile.append( "<td class=\"" + color + "\">" + mapSmIdName[ idSM ] + "</td>" );
    htmlFile.append( "<td class=\"" + color + "\" align=\"right\">" + nbOk + "</td>" );
    htmlFile.append( "<td class=\"data3\" align=\"right\">" + nbTotal + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"data1\">" + "TOTAL" + "</td>" );
htmlFile.append( "<td class=\"data1\">" + "" + "</td>" );
htmlFile.append( "<td class=\"data1\" align=\"right\">" + nbSMTestStepsOK + "</td>" );
htmlFile.append( "<td class=\"data1\" align=\"right\">" + nbSMTestSteps + "</td>" );
htmlFile.append( "</tr>" + NEW_LINE );
htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );

// TestSteps tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\"><a class=\"titre1\" href=\"" + csvFile1.getName() + "\" title=\"" + csvFile1.getName() + "\">Test steps report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">Test step name</td>" );
htmlFile.append( "<td class=\"titre2\">SM</td>" );
htmlFile.append( "<td class=\"titre2\">Status</td>" );
htmlFile.append( "<td class=\"titre2\">Failed assertions / Error messages</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String idSM = "";
    def matcher = ( testStepName =~ / (SM[0-9]{3}) / );
    if( matcher.find() )
    {
    	   idSM = matcher[0][1];
    }
    
    String htmlErrorMessage = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            String assertionName = ( index > 0 ) ? it.substring( 0, index + 1 ) : it;
            htmlErrorMessage += assertionName + "<br/>";
        }
        htmlErrorMessage = htmlErrorMessage.trim();
    }
    
    String statusColor = ( statusCodeOK == 1 ) ? "green" : "red";
    String testStepTxtFilename = testStepName.replace( " ", "_" ) + ".txt";
    
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td class=\"" + ( ( idSM != null && idSM.length() > 0 ) ? "data2" : "data3" ) + "\"><a href=\"" + testStepTxtFilename + "\" title=\"View current XML request/response\">" + testStepName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td class=\"" + ( ( idSM != null && idSM.length() > 0 ) ? "data2" : "data3" ) + "\" align=\"center\">" + idSM + "</td>" );
    htmlFile.append( "<td class=\"" + statusColor + "\" align=\"center\">" + status + "</td>" );
    htmlFile.append( "<td class=\"data3\">" + htmlErrorMessage + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );

// WebServices URL tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"3\">${projectName}</td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">SM</td>" );
htmlFile.append( "<td class=\"titre2\">WebService</td>" );
htmlFile.append( "<td class=\"titre2\">URL</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for ( e in mapSm.sort() ) {
    String idSM = e.key;
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td class=\"data3\">" + idSM + "</td>" );
    htmlFile.append( "<td class=\"data3\">" + mapSmIdName[ idSM ] + "</td>" );
    htmlFile.append( "<td class=\"data3\">" + mapSmIdUrl[ idSM ] + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );

// Dashboard footer
htmlFile.append( NEW_LINE );
htmlFile.append( "</body>" + NEW_LINE );
htmlFile.append( "</html>" + NEW_LINE );]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of 999 Resultats" id="6d5ef793-72c5-4026-b06a-5f387d028c47"><con:settings/><con:config><script><![CDATA[// TestRunner reports :
// CSV report of all TestSteps
// CSV report of all SMs
// TXT reports of each TestSteps
// Main HTML report with frames

String projectName   = testRunner.testCase.testSuite.project.name;
String urlWebService = testRunner.testCase.testSuite.getPropertyValue( "urlWebService" );

final String NEW_LINE = System.getProperty( "line.separator" );
final String SEP = ";";

File reportsDir = new File( testRunner.testCase.testSuite.project.getPropertyValue( "reports.dir" ) );
reportsDir.deleteDir(); // delete the "reports" directory with all contained files and subdirectories
if( !reportsDir.exists() )
{
    reportsDir.mkdir();
}

String testCaseName = testRunner.testCase.name
  
String extention = ".html"

String reportName = testCaseName + extention;
log.info "${reportName}";

def htmlFile = new File( reportsDir, "${reportName}" );

def timestamp = new Date().format( "yyyy-MM-dd HH:mm" );

// CSV and TXT reports
def mapSm   = [:].withDefault { 0 };
def mapSmOK = [:].withDefault { 0 };
def mapSmIdName = [:];
def mapSmIdUrl = [:];
int nbSMTestSteps = 0;
int nbSMTestStepsOK = 0;

// HTML reports : dashboard header
String htmlHeader = """<html>
<head>
<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
<title>${projectName} ${timestamp}</title>

<style type='text/css'>
* {
    color: black;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 10pt;
}

body {
    background-color: white;
    color: #858585;
    font-family: Arial, Helvetica, sans-serif;
}

table {
    background-color: #a6c1f4;
    border: #6495ed 3px solid;
}

td {
    background-color: white;
    border: #6495ed 1px solid;
    padding: 2px;
}

.titreRapport {
    color: black;
    font-weight: bold;
    font-size: 16pt;
    text-align: center;
    padding: 5px;
}

.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
}

a.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
    text-decoration: none;
}

.titre2 {
    background-color: #ffb43f;
    color: black;
    font-weight: bold;
    text-align: center;
    padding: 2px;
}

.titre3 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data1 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data2 {
    background-color: #a6c1f4;
    color: black;
}

.data3 {
    background-color: #dbe6fa;
    color: black;
}

.blue {
    background-color: #9ec6fd;
}

.red {
    background-color: red;
}

.green {
    background-color: #33ff66;
}

.orange {
    background-color: #ff9900;
}

</style>

</head>
<body>
<center>

<span class="titreRapport">SOAPUI tests report : ${projectName}<br>http://${urlWebService}<br>${timestamp}</span>
<br/>
<br/>
<br/>
""";
htmlFile.write( htmlHeader );


// TestSteps tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\">Test steps report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">Test case name</td>" );
htmlFile.append( "<td class=\"titre2\">Test step name</td>" );
htmlFile.append( "<td class=\"titre2\">Status</td>" );
htmlFile.append( "</tr>" + NEW_LINE );


for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
    //log.info "${testStepName}";
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String htmlErrorMessage = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            String assertionName = ( index > 0 ) ? it.substring( 0, index + 1 ) : it;
            htmlErrorMessage += assertionName + "<br/>";
        }
        htmlErrorMessage = htmlErrorMessage.trim();
    }
    
    String statusColor = ( statusCodeOK == 1 ) ? "green" : "red";
    String testStepTxtFilename = testStepName.replace( " ", "_" ) + ".txt";
    
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td>" + testCaseName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td>" + testStepName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td class=\"" + statusColor + "\" align=\"center\">" + status + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );




// Dashboard footer
htmlFile.append( NEW_LINE );
htmlFile.append( "</body>" + NEW_LINE );
htmlFile.append( "</html>" + NEW_LINE );]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Copy of 999 Resultats" id="6aa28b41-d810-4ad8-a4e0-0f173f513477" disabled="true"><con:settings/><con:config><script>/**
*
* Below is the TearDown script for SoapUI Project level
* Which create a custom report in a  given file
* Modify the variable "reportFileName" below
*
**/
//Modify the file as needed for report file
//def reportFileName = '/tmp/abctestreport.txt'
//Adding the below as user wants specific directory
//Get the project path

def dataFolder =  new com.eviware.soapui.support.GroovyUtils(context).projectPath

//Create today's date for storing response
def today = new Date().format("yyyy-MM-dd")

def filePrefix = "${dataFolder}/TestReports/xxx_WebAPI_${today}" as String

def fileNamePart = new Date().format("yyyy-MM-dd'T'HH.mm.ss")

//creating filename dynamically.
def reportFileName = "${filePrefix}/xxx_WebAPI_TestReport_${fileNamePart}.txt" as String


//NOTE: Not required to edit beyond this point

/**
* This class holds the test case details
**/
class TestCaseResultHolder {
    def log
    Map&lt;String, String> properties = [:]
    boolean status

    def createProperties(testCase) {
        testCase.getPropertyNames().each { key ->
            properties[key] = testCase.getPropertyValue(key)
        }       
    }

    def getCaseResult(caseRunner, caseName) {
        log.info "Checking test case status ${caseName}"
        if ( caseRunner.status.toString() == 'FAILED' ){
            log.error "Test case $caseName has failed"
            for ( stepResult in caseRunner?.results ){
                stepResult.messages.each() { msg -> log.info msg }
            }
            return false
        } else {
            log.info "${caseName} is passed"
        }
        true
    }

    def buildCaseResult(caseRunner, caseName) {
        status = getCaseResult(caseRunner, caseName)
        if (!status) {
            createProperties(caseRunner.testCase)
        }
    }

}

/**
* This class holds the test suite details
**/
class SuiteResultsHolder {

    def log
    Map&lt;String, TestCaseResultHolder> casaeResults = [:]
    int testCaseCount = 0
    int passedCasesCount = 0
    int failedCasesCount = 0

    def buildSuiteResults(suiteRunner, suiteName){      
        log.info "Building results of test suite ${suiteName}"
        for ( caseRunner in suiteRunner?.results ) {
            def caseName = caseRunner.testCase.name
            testCaseCount++
            def tcHolder = new TestCaseResultHolder(log: log)
            tcHolder.buildCaseResult(caseRunner, caseName)          
            casaeResults[caseName] = tcHolder
            if (tcHolder.status) {
                passedCasesCount++
            } else {
                failedCasesCount++
            }
        }
    }

    def getStatus() {
        (0 &lt; failedCasesCount) ? false : true
    }

}

/**
* This class holds the project details
**/
class ProjectResultsHolder {

    def log
    Map&lt;String, SuiteResultsHolder> suiteResults = [:]
    int suiteCount = 0
    int passedSuitecount = 0
    int failedSuiteCount = 0

    def buildProjectResults(projectRunner, projectName) {
        log.info "Building results of test project ${projectName}"          
        for(suiteRunner in projectRunner?.results) {
            def suiteName =  suiteRunner.testSuite.name
            suiteCount++
            def suiteResultsHolder = new SuiteResultsHolder(log: log)
            suiteResultsHolder.buildSuiteResults(suiteRunner, suiteName)
            suiteResults[suiteName] = suiteResultsHolder
            if (suiteResultsHolder.status) {
                passedSuitecount++
            } else {
                failedSuiteCount++
            }
        }
    }

    def getStatus() {
        (0 &lt; failedSuiteCount) ? false : true
    }

}

//Get the status string based on boolean
def getResult(status){ status == true ? 'SUCCEED' : 'FAILED'}

//Draws a line
def drawLine(def letter = '=', def count = 70) { letter.multiply(count)}

//Gets the summary report
def getSummaryReport(project, projectResultHolder) {
    def report = new StringBuffer()
    report.append(drawLine()).append('\n')
    report.append("\t\t\tTest Execution Summary\n")
    report.append(drawLine('-', 60)).append('\n')
    report.append("Project : ${project.name}\n")
    report.append("Result : ${getResult(projectResultHolder.status)}\n")
    report.append("Total test suites executed: ${projectResultHolder.suiteCount}\n")
    report.append("Test suites passed: ${projectResultHolder.passedSuitecount}\n")
    report.append("Test suites failed: ${projectResultHolder.failedSuiteCount}\n")
    report.append(drawLine()).append('\n')
    report
}

//Gets the test case report
def getTestCaseReport(testCaseReport) {
    def report = new StringBuffer()
    report.append(drawLine('-', 60)).append('\n')
    report.append("\t\tTest Case Details:\n")
    report.append(drawLine('-', 60)).append('\n')
    testCaseReport.each { kase, tcReport ->
        report.append("Name : ${kase}\n")
        report.append("Status : ${getResult(tcReport.status)}\n")
        if (!tcReport.status) {
            report.append("Properties : ${tcReport.properties.toString()}\n")
        }
    }
    report
}

//Get the detailed report
def getDetailedReport(projectResultHolder) {
    def report = new StringBuffer()
    report.append(drawLine()).append('\n')
    report.append("\t\t\tTest Execution Detailed Report\n")
    report.append(drawLine()).append('\n')
    projectResultHolder.suiteResults.each { suite, details ->
        report.append("Test Suite : ${suite}\n")
        report.append("Result : ${getResult(details.status)}\n")
        report.append("Total Cases : ${details.testCaseCount}\n")
        report.append("Cases Passed : ${details.passedCasesCount}\n")
        report.append("Cases Failed: ${details.failedCasesCount}\n")
        report.append(getTestCaseReport(details.casaeResults))
        report.append(drawLine()).append('\n')
        report.append(drawLine()).append('\n')
    }
    report
}

//Save the contents to a file
def saveToFile(file, content) {
    if (!file.parentFile.exists()) {
        file.parentFile.mkdirs()
        log.info "Directory did not exist, created"
    }
    file.write(content) 
    assert file.exists(), "${file.name} not created"
}

def holder = new ProjectResultsHolder(log: log)
holder.buildProjectResults(runner, project.name)

def finalReport = new StringBuffer()
finalReport.append(getSummaryReport(project, holder))
finalReport.append(getDetailedReport(holder))

def reportFile = new File(reportFileName)
saveToFile(reportFile, finalReport.toString())</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>typologieClient</con:name><con:value>PP ORIAN T&lt;>P&lt;>U 3lignes</con:value></con:property><con:property><con:name>ccTituIdFonc</con:name><con:value>01-T00JZ7</con:value></con:property><con:property><con:name>contactObjid1</con:name><con:value>7193091</con:value></con:property><con:property><con:name>contactToCloseObjid2</con:name><con:value>8860028</con:value></con:property><con:property><con:name>actionProactiveToCloseObjid2</con:name><con:value>2023907</con:value></con:property><con:property><con:name>tmpClient1.ccTitu.objid</con:name><con:value>30146469</con:value></con:property><con:property><con:name>tmpClient1.ccTitu.idFonc</con:name><con:value>01-T00JZ7</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.objid</con:name><con:value>46209625</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.idFonc</con:name><con:value>154016</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.civilite</con:name><con:value>MR</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.nom</con:name><con:value>TESTEUR 803</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.prenom</con:name><con:value>Titi</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.dateNaissance</con:name><con:value>1982-01-01</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.deptNaissance</con:name><con:value>56</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.email</con:name><con:value>test1803@gmail.com</con:value></con:property><con:property><con:name>tmpClient1.adrTitu.objid</con:name><con:value>45842875</con:value></con:property><con:property><con:name>tmpClient1.ccPayeur.objid</con:name><con:value>30146470</con:value></con:property><con:property><con:name>tmpClient1.ccPayeur.idFonc</con:name><con:value>01-T00JZ7-01</con:value></con:property><con:property><con:name>tmpClient1.ppPayeur.objid</con:name><con:value>46209626</con:value></con:property><con:property><con:name>tmpClient1.ppPayeur.idFonc</con:name><con:value>154017</con:value></con:property><con:property><con:name>tmpClient1.ppUtil.objid</con:name><con:value>46209627</con:value></con:property><con:property><con:name>tmpClient1.ppUtil.idFonc</con:name><con:value>154018</con:value></con:property><con:property><con:name>tmpClient1.cf.objid</con:name><con:value>25350700</con:value></con:property><con:property><con:name>tmpClient1.cf.idFonc</con:name><con:value>01-T00JZ7-70-T007ZJ</con:value></con:property><con:property><con:name>tmpClient1.mp.objid</con:name><con:value>27330721</con:value></con:property><con:property><con:name>tmpClient1.csu.objid</con:name><con:value>57129077</con:value></con:property><con:property><con:name>tmpClient1.csu.numLignePrinc</con:name><con:value>0653544995</con:value></con:property><con:property><con:name>tmpClient1.csu.codeScs</con:name><con:value>01</con:value></con:property><con:property><con:name>tmpClient1.csu.numeroCsu</con:name><con:value>T007ZJ</con:value></con:property><con:property><con:name>tmpDemande1.objid</con:name><con:value>6995507</con:value></con:property><con:property><con:name>tmpDemande1.idNumber</con:name><con:value>0006487925</con:value></con:property><con:property><con:name>tmpDemande1.idExterne</con:name><con:value>424</con:value></con:property><con:property><con:name>tmpDemandeToClose2.objid</con:name><con:value>6995569</con:value></con:property><con:property><con:name>tmpDemandeToClose2.idNumber</con:name><con:value>0006487959</con:value></con:property><con:property><con:name>tmpDemandeToClose2.idExterne</con:name><con:value>440</con:value></con:property><con:property><con:name>tmpDossier1.objid</con:name><con:value>6994867</con:value></con:property><con:property><con:name>tmpDossier1.idNumber</con:name><con:value>0006487446</con:value></con:property><con:property><con:name>tmpDossier1.idExterne</con:name><con:value>4785</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true" id="60363813-e3c5-434d-93ae-dfe7617a1fb3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Unitary tests of SaFiR WebServices on the CLFY15 environment</con:description><con:settings/><con:testStep type="request" name="001 SM000 AuthentificationV1" id="afbcae93-0981-4594-892e-d0bababb1057"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ClfySessionSvcSoapBinding</con:interface><con:operation>login</con:operation><con:request name="001 SM000 AuthentificationV1" id="27cf1316-b22c-452a-830d-fcf0e7113b37"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/CRMServices/ClfySessionSvc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.ejb.common.igb.clarify.com">
   <soapenv:Header/>
   <soapenv:Body>
      <ws:login>
         <ws:userName>${#TestSuite#wsUsername}</ws:userName>
         <ws:passWord>${#TestSuite#wsUsername}</ws:passWord>
         <ws:loginType>0</ws:loginType>
         <ws:strAssocDefName></ws:strAssocDefName>
         <ws:strLocale></ws:strLocale>
         <ws:bExternAuth>false</ws:bExternAuth>
      </ws:login>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6d034353-6725-4595-99a7-92228f55652c"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1234cc1a-04e0-4cbb-92ac-abc3fa26d51f"/><con:assertion type="XPath Match" name="XPath Match - VerifierSessionId" id="1331825f-ad96-42bd-8ae4-e2c566613973"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://ws.ejb.common.igb.clarify.com';
exists(//ns1:loginResponse[1]/ns1:loginReturn[1])</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="002 Transfert sessionId" id="2de6ad3a-23a1-4fa2-a9b8-4e468cb2ee97"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>sessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>001 SM000 AuthentificationV1</con:sourceStep><con:sourcePath>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://ws.ejb.common.igb.clarify.com';
//ns1:loginResponse[1]/ns1:loginReturn[1]</con:sourcePath><con:targetType>sessionId</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="010 SQL RechercherClient" id="72257061-b402-40f1-bdc2-08e3857cdd4c"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testRunner.testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

// SQL query filter
String ccTituIdFonc = testRunner.testCase.getPropertyValue( "ccTituIdFonc" );
//log.info( "ccTituIdFonc = '${ccTituIdFonc}'" );

// Clear temporary TestCase properties
for( prop in testRunner.testCase.properties )
{
    if( prop.value.name.startsWith( "tmp" ) )
    {
        testRunner.testCase.removeProperty( prop.value.name );
    }
}

// Retrieve the complete client structure from the database
def rows = sql.rows( """
SELECT * FROM (
SELECT /*+ LEADING(ccT) */
    csu.objid AS X_CSU_OBJID
  , csu.x_scs AS X_CODE_SCS
  , ccT.org_id AS X_CC_T_IDFONC
  , ccT.name AS X_CC_T_NOM
  , ctr.x_numero_contrat AS X_DC_IDFONC
  , cf.name AS X_CF_IDFONC
  , csu.x_isdn AS X_CSU_NUM_LIGNE_PRINC
  , DECODE( ccT.x_morale, 0, 'PP', DECODE( ppRL.objid, NULL, 'PM', 'RL' ) ) AS X_TYPE_PERSONNE
  , DECODE( 10 * DECODE( ppT.objid, ppP.objid, 1, ppU.objid, 2, 0 ) + DECODE( ppP.objid, ppU.objid, 2, 1 ),
            12, 'T=P=U',
            11, 'T=P<>U',
            1, 'T<>P<>U',
            2, 'T<>P=U',
            21, 'T=U<>P',
            NULL
    ) AS X_PROFIL_TPU
  , DECODE( 10 * DECODE( ppT.last_name||ppT.first_name, ppP.last_name||ppP.first_name, 1, ppU.last_name||ppU.first_name, 2, 0 ) + DECODE( ppP.last_name||ppP.first_name, ppU.last_name||ppU.first_name, 2, 1 ),
            12, 'T=P=U',
            11, 'T=P<>U',
            1, 'T<>P<>U',
            2, 'T<>P=U',
            21, 'T=U<>P',
            NULL
    ) AS X_DONNEES_TPU
  , ( DECODE( ccT.x_morale, 0, NULL, DECODE( ppRL.objid, ppT.objid, 'RL=T', ppP.objid, 'RL=P', ppU.objid, 'RL=U', NULL ) ) ) AS X_PROFIL_RL
  , ( select count(distinct tmp.x_cc_objid) from table_x_cc_pp_representant_v tmp where tmp.x_pp_objid = ppT.objid group by tmp.x_pp_objid ) AS X_NB_CC_PAR_PP
  , ( select count(distinct tmp.x_cf_objid) from table_x_rech_client_mini_v tmp where tmp.x_cc_t_objid = ccT.objid  ) AS X_NB_CF_PAR_CC
  , ( select count(distinct tmp.x_csu_objid) from table_x_rech_client_mini_v tmp where tmp.x_cc_t_objid = ccT.objid group by tmp.x_cc_t_objid ) AS X_NB_CSU_PAR_CC
  , ppT.x_id_externe AS X_PP_T_ID_EXTERNE
  , ppT.salutation AS X_PP_T_CIVILITE
  , ppT.last_name AS X_PP_T_NOM
  , ppT.first_name AS X_PP_T_PRENOM
  , TO_CHAR(ppT.x_date_naissance, 'yyyy-mm-dd') AS X_PP_T_DATE_NAISSANCE
  , COALESCE(ppT.x_dept_naissance, (SELECT ref_id FROM table_state_prov WHERE objid = ppT.x_dpt_nais2state_prov)) AS X_PP_T_DEPT_NAISSANCE
  , ppT.e_mail AS X_PP_T_EMAIL
  , ccT.x_morale AS X_CC_T_EST_PM
  , ccT.x_siret AS X_CC_T_PM_SIRET
  , ccT.x_id_externe AS X_CC_T_PM_ID_EXTERNE
  , adrT.objid AS X_ADR_T_OBJID
  , adrT.address AS X_ADR_T_ADRESSE
  , adrT.zipcode AS X_ADR_T_CODE_POSTAL
  , adrT.city AS X_ADR_T_VILLE
  , country_adrT.name AS X_ADR_T_PAYS
  , ppT.objid AS X_PP_T_OBJID
  , ppP.objid AS X_PP_P_OBJID
  , ppU.objid AS X_PP_U_OBJID
  , ppRL.objid AS X_PP_RL_OBJID
  , ppT.x_id_externe AS X_PP_T_IDFONC
  , ppP.x_id_externe AS X_PP_P_IDFONC
  , ppU.x_id_externe AS X_PP_U_IDFONC
  , ccT.objid AS X_CC_T_OBJID
  , ccP.objid AS X_CC_P_OBJID
  , ccP.org_id AS X_CC_P_IDFONC
  , ccT.x_categorie_titu AS X_CC_T_CATEGORIE_TITU
  , ccT.x_entreprise AS X_CC_T_ENTREPRISE
  , ccT.x_ind_sigc AS X_CC_T_IND_SIGC
  , ccT.x_client_nsi AS X_CC_T_MIGRE_P1A
  , ccT.x_migre_par AS X_CC_T_MIGRE_PAR
  , ccT.x_migre_rce AS X_CC_T_MIGRE_RCE
  , cf.objid AS X_CF_OBJID
  , cf.x_no_pt_fact AS X_CF_NO_PT_FACT
  , statut_cf.title AS X_CF_STATUT_TITLE
  , mp.objid AS X_MP_OBJID
  , mp.means_type AS X_MP_TYPE_REFID
  , DECODE( mp.means_type, 0, 'CB', 2, 'RIB', 3, 'AUTRE', NULL ) AS X_MP_TYPE_TITLE  
  , csu.x_scs AS X_CSU_CODE_SCS
  , csu.x_numero_csu AS X_CSU_NUMERO_CSU
  , csu.x_isdn2 AS X_CSU_NUM_LIGNE_SEC
  , csu.x_numero_prise_thd AS X_CSU_NUM_PRISE_THD
  , csu.x_id_offre_aramis AS X_CSU_ID_OFFRE
  , statut_csu.x_key1_text AS X_CSU_STATUT_REFID
  , statut_csu.x_value1_text AS X_CSU_STATUT_TITLE
  , statut_csu.x_value5_text AS X_CSU_STATUT_INTERNE_REFID
  , type_csu.ref_id AS X_CSU_TYPE_REFID
  , marque_csu.ref_id AS X_CSU_MARQUE_REFID
  , csu.x_barring AS X_CSU_BARRING
  , csu.x_liste_rouge AS X_CSU_LISTE_ROUGE
  , ( select count(distinct tmp.x_csu_objid) from table_x_rech_client_mini_v tmp, table_site_part tmp_csu, table_x_trans_func_dbs_data tmp_statut_csu where tmp.x_cc_t_objid = ccT.objid and tmp.x_csu_objid = tmp_csu.objid and (tmp_statut_csu.x_trans_cd = 'Cd_statut_contrat' AND tmp_statut_csu.x_key1_text = tmp_csu.part_status) and tmp_statut_csu.x_value5_text = '10' ) AS X_NB_CSU_ACTIFS_PAR_CC
  , ( select count(distinct tmp.x_csu_objid) from table_x_rech_client_mini_v tmp, table_site_part tmp_csu, table_x_trans_func_dbs_data tmp_statut_csu where tmp.x_cc_t_objid = ccT.objid and tmp.x_csu_objid = tmp_csu.objid and (tmp_statut_csu.x_trans_cd = 'Cd_statut_contrat' AND tmp_statut_csu.x_key1_text = tmp_csu.part_status) and tmp_statut_csu.x_value5_text = '21' ) AS X_NB_CSU_RESILIES_PAR_CC
FROM
  TABLE_BUS_ORG ccT
  , TABLE_SITE sit_adrT
  , TABLE_ADDRESS adrT
  , TABLE_COUNTRY country_adrT
  , TABLE_CONTACT_ROLE role_ppT
  , TABLE_CONTACT ppT
  , TABLE_HGSL2HGSE statut_ppT
  , TABLE_FIN_ACCNT finaccnt_cf
  , TABLE_BLG_ARGMNT cf
  , TABLE_HGBST_ELM statut_cf
  , TABLE_BUS_ORG ccP
  , TABLE_PAY_MEANS mp
  , TABLE_HGBST_ELM type_carte_mp
  , TABLE_SITE sit_adrP
  , TABLE_ADDRESS adrP
  , TABLE_CONTACT_ROLE role_ppP
  , TABLE_CONTACT ppP
  , TABLE_HGSL2HGSE statut_ppP
  , TABLE_BA_BI_ROLE babirole_cf
  , TABLE_BILLABLE_ITM billitm_cf
  , TABLE_SITE_PART pti
  , TABLE_SITE_PART csu
  , TABLE_X_TRANS_FUNC_DBS_DATA statut_csu
  , TABLE_HGBST_ELM type_csu
  , TABLE_HGBST_ELM marque_csu
  , TABLE_CON_SP_ROLE consprole_csu
  , TABLE_CONTACT ppU
  , TABLE_HGSL2HGSE statut_ppU
  , TABLE_X_AGREEMENT ctr
  , TABLE_CONTACT_ROLE role_ppRL
  , TABLE_CONTACT ppRL
WHERE
  sit_adrT.objid = ccT.primary2site
  AND adrT.objid = sit_adrT.cust_primaddr2address
  AND country_adrT.objid = adrT.address2country
  AND role_ppT.contact_role2site = sit_adrT.objid
  AND ppT.objid = role_ppT.contact_role2contact
  AND (statut_ppT.lst_title = 'x_statut_pp' AND statut_ppT.s_elm_ref_id = NVL(''||ppT.status,0))
  AND finaccnt_cf.fa_child2bus_org = ccT.objid
  AND cf.blg_argmnt2fin_accnt = finaccnt_cf.objid
  AND (statut_cf.objid = COALESCE(cf.blg_status2hgbst_elm, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'BAR_STATUS' AND s_elm_ref_id = 'ACTIF')))
  AND ccP.objid = cf.ba_child2bus_org
  AND mp.objid = cf.blg_argmnt2pay_means
  AND type_carte_mp.objid = COALESCE(mp.x_pym_cctype2hgbst, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_carte_paiement' AND elm_ref_id = mp.cc_type), (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_carte_paiement' AND s_elm_ref_id = 'VIDE'))
  AND sit_adrP.objid = ccP.primary2site
  AND adrP.objid = sit_adrP.cust_primaddr2address
  AND role_ppP.contact_role2site = sit_adrP.objid
  AND ppP.objid = role_ppP.contact_role2contact
  AND (statut_ppP.lst_title = 'x_statut_pp' AND statut_ppP.s_elm_ref_id = NVL(''||ppP.status,0))
  AND babirole_cf.ba_bi_role2blg_argmnt = cf.objid
  AND billitm_cf.objid = babirole_cf.ba_bi_role2billable_itm
  AND pti.objid = billitm_cf.billable_itm2site_part
  AND csu.objid = pti.level2site_part
  AND (statut_csu.x_trans_cd = 'Cd_statut_contrat' AND statut_csu.x_key1_text = csu.part_status)
  AND type_csu.objid = COALESCE(csu.x_type_csu2hgbst, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_csu' AND s_elm_ref_id = 'MOBILE'))
  AND marque_csu.objid = COALESCE(csu.x_marque2hgbst, (SELECT elm_objid FROM table_hgsl2hgse WHERE lst_title = 'x_type_marque' AND s_elm_ref_id = 'ABO'))
  AND consprole_csu.con_sp_role2site_part = csu.objid
  AND ppU.objid = consprole_csu.con_sp_role2contact
  AND (statut_ppU.lst_title = 'x_statut_pp' AND statut_ppU.s_elm_ref_id = NVL(''||ppU.status,0))
  AND ctr.objid = csu.x_site_part2agr
  AND (role_ppT.role_name = 'D1510_05')
  AND role_ppRL.contact_role2site (+)= sit_adrT.objid
  AND ppRL.objid (+)= role_ppRL.contact_role2contact
  AND (role_ppRL.role_name (+)= 'RL')
  AND ccT.org_id = ${ccTituIdFonc}
)
WHERE
  x_type_personne = 'PP'
  AND x_profil_tpu = 'T<>P<>U'
  AND x_code_scs = '01'
  AND x_csu_statut_interne_refid = 10
  AND x_cc_t_ind_sigc = 1
"""
);
assert rows.size() >= 1 : "Database record not found : ccTituIdFonc = '${ccTituIdFonc}'";

// Set temporary TestCase properties : client structure
testRunner.testCase.setPropertyValue( "tmpClient1.ccTitu.objid", (String) rows[0].x_cc_t_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ccTitu.idFonc", (String) rows[0].x_cc_t_idfonc );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.objid", (String) rows[0].x_pp_t_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.idFonc", (String) rows[0].x_pp_t_idfonc );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.civilite", (String) rows[0].x_pp_t_civilite );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.nom", (String) rows[0].x_pp_t_nom );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.prenom", (String) rows[0].x_pp_t_prenom );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.dateNaissance", (String) rows[0].x_pp_t_date_naissance );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.deptNaissance", (String) rows[0].x_pp_t_dept_naissance );
testRunner.testCase.setPropertyValue( "tmpClient1.ppTitu.email", (String) rows[0].x_pp_t_email );
testRunner.testCase.setPropertyValue( "tmpClient1.adrTitu.objid", (String) rows[0].x_adr_t_objid );

testRunner.testCase.setPropertyValue( "tmpClient1.ccPayeur.objid", (String) rows[0].x_cc_p_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ccPayeur.idFonc", (String) rows[0].x_cc_p_idfonc );
testRunner.testCase.setPropertyValue( "tmpClient1.ppPayeur.objid", (String) rows[0].x_pp_p_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ppPayeur.idFonc", (String) rows[0].x_pp_p_idfonc );

testRunner.testCase.setPropertyValue( "tmpClient1.ppUtil.objid", (String) rows[0].x_pp_u_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.ppUtil.idFonc", (String) rows[0].x_pp_u_idfonc );

testRunner.testCase.setPropertyValue( "tmpClient1.cf.objid", (String) rows[0].x_cf_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.cf.idFonc", (String) rows[0].x_cf_idfonc );

testRunner.testCase.setPropertyValue( "tmpClient1.mp.objid", (String) rows[0].x_mp_objid );

testRunner.testCase.setPropertyValue( "tmpClient1.csu.objid", (String) rows[0].x_csu_objid );
testRunner.testCase.setPropertyValue( "tmpClient1.csu.numLignePrinc", (String) rows[0].x_csu_num_ligne_princ );
testRunner.testCase.setPropertyValue( "tmpClient1.csu.codeScs", (String) rows[0].x_csu_code_scs );
testRunner.testCase.setPropertyValue( "tmpClient1.csu.numeroCsu", (String) rows[0].x_csu_numero_csu );


// Retrieve the created case (Demande) data from the database
def rowsDemande = sql.rows( """
SELECT
  objid
  , id_number
  , x_id_externe
FROM
  TABLE_CASE c
WHERE
  x_dossier = 0
  AND x_id_externe IS NOT NULL
  AND NOT EXISTS (SELECT cc.objid FROM TABLE_CLOSE_CASE cc WHERE cc.last_close2case = c.objid)
  AND (SELECT COUNT(objid) FROM TABLE_CASE c2 WHERE c2.x_id_externe = c.x_id_externe) = 1
  AND ROWNUM <= 2
"""
);
assert rowsDemande.size() == 2 : "Database record not found : first Demande (not closed)";

// Set temporary TestCase properties : demande
testRunner.testCase.setPropertyValue( "tmpDemande1.objid", (String) rowsDemande[0].objid );
testRunner.testCase.setPropertyValue( "tmpDemande1.idNumber", (String) rowsDemande[0].id_number );
testRunner.testCase.setPropertyValue( "tmpDemande1.idExterne", (String) rowsDemande[0].x_id_externe );

testRunner.testCase.setPropertyValue( "tmpDemandeToClose2.objid", (String) rowsDemande[1].objid );
testRunner.testCase.setPropertyValue( "tmpDemandeToClose2.idNumber", (String) rowsDemande[1].id_number );
testRunner.testCase.setPropertyValue( "tmpDemandeToClose2.idExterne", (String) rowsDemande[1].x_id_externe );


// Retrieve the created case (Dossier) data from the database
def rowsDossier = sql.rows( """
SELECT
  objid
  , id_number
  , x_id_externe
FROM
  TABLE_CASE c
WHERE
  x_dossier = 1
  AND NVL(x_id_externe, -1) <> -1
  AND NOT EXISTS (SELECT cc.objid FROM TABLE_CLOSE_CASE cc WHERE cc.last_close2case = c.objid)
  AND (SELECT COUNT(objid) FROM TABLE_CASE c2 WHERE c2.x_id_externe = c.x_id_externe) = 1
  AND ROWNUM <= 2
"""
);
assert rowsDossier.size() == 2 : "Database record not found : first Dossier (not closed)";

// Set temporary TestCase properties : dossier
testRunner.testCase.setPropertyValue( "tmpDossier1.objid", (String) rowsDossier[0].objid );
testRunner.testCase.setPropertyValue( "tmpDossier1.idNumber", (String) rowsDossier[0].id_number );
testRunner.testCase.setPropertyValue( "tmpDossier1.idExterne", (String) rowsDossier[0].x_id_externe );


// Useful SQL queries in comments
/*
-- SM081 dataset : find the "user / activity / motif / theme / additionnal data"
SELECT
  DISTINCT v.x_usr_nom AS UTILISATEUR
  , v.x_activite_idfonc AS ACTIVITE
  , v.x_motif_code AS MOTIF
  , v.x_motif_theme_code AS THEME
  , fd.attribute_name AS DONNEE_ADDITIONNELLE
  , DECODE(fd.attribute_datatype, 0, 'Number', 7, 'String', null) AS TYPE
  , fd.description AS DESCRIPTION
  , fd.is_required AS OBLIGATOIRE
FROM
  TABLE_FLEX_DEFN fd
  , MTM_FLEX_DEFN0_FLEX_TMPL0 mtm
  , TABLE_FLEX_TMPL ft
  , TABLE_X_ELM_DETAIL theme
  , TABLE_X_LIST_PARAM_ACT_V v
WHERE
  ft.objid = mtm.flex_tmpl2flex_defn
  AND fd.objid = mtm.flex_defn2flex_tmpl
  AND fd.objid = mtm.flex_defn2flex_tmpl
  AND theme.x_elm_det2flex_tmp = ft.objid
  AND v.x_motif_theme_code = theme.x_code
  AND v.x_usr_nom = 'Id4179E'
  AND v.x_activite_idfonc = 'ACT036'
  AND v.x_motif_code = 'ADM_02'
  AND theme.x_code = 'NME01'
ORDER BY v.x_usr_nom, v.x_activite_idfonc, v.x_motif_code, v.x_motif_theme_code, fd.attribute_name
*/
]]></script></con:config></con:testStep><con:testStep type="request" name="020 SM069 CreerDemandeV2 avec donnees additionnelles FAST" id="2784e351-c770-4011-bf5a-03f00b109f11"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDemandePort</con:interface><con:operation>creerDemande</con:operation><con:request name="020 SM069 CreerDemandeV2 avec donnees additionnelles FAST" id="4061f846-4ad6-422f-b0cf-08d1e2ac9b08" useWsAddressing="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file"/><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@max-size">0</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/webservices/CreerDemande/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/CreerDemande">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:CreerDemande>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>02.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:contact>${#TestCase#contactObjid1}</cre:contact>
            <cre:compteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:compteClient>
            <cre:personne>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:personne>
            <cre:typePersonne>Physique</cre:typePersonne>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:dateCreation>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateCreation>
            <cre:motifDemande>INT</cre:motifDemande>
            <cre:activite>ACT001</cre:activite>
            <cre:nature>Contestation</cre:nature>
            <cre:commentaire>Pas de commentaires</cre:commentaire>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <!--Zero or more repetitions: parametres FAST (donnees additionnelles) -->
            <cre:donnees>
               <cre:nom>PDVCONTACTNUMBER</cre:nom>
               <cre:description>1</cre:description>
            </cre:donnees>
         </cre:question>
      </cre:CreerDemande>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0cc2ba07-a083-4185-83cf-ef43648f958c"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="b1d9fdf6-d072-490c-8d4f-322d358f4ddf"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="d354a51e-95ff-4316-898d-0ed40cfe3ffb"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="adbe5a04-4606-43e9-8a6b-258b3d67f3c6"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDemandeBdd" id="88e070e9-0bdf-4244-95be-368aed2d90b8"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idExterneDemande = xmlResponse["//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idDemande[1]"];
//log.info( "xmlResponse.idExterneDemande = " + idExterneDemande );

assert idExterneDemande != null &amp;&amp; idExterneDemande != "" : "No 'idDemande' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE x_id_externe = ${idExterneDemande}
"""
);
assert rows.size() >= 1 : "Database record not found : idExterneDemande = '${idExterneDemande}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="021 SM069 CreerDemandeV2 sans donnee additionnelle" id="8f0dfe34-5f27-40d1-8de7-8a68e8f3cebc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDemandePort</con:interface><con:operation>creerDemande</con:operation><con:request name="021 SM069 CreerDemandeV2 sans donnee additionnelle" id="1a19f3d3-e9db-4c45-860b-e8e03f4df77e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/webservices/CreerDemande/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/CreerDemande">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:CreerDemande>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>02.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:contact>${#TestCase#contactObjid1}</cre:contact>
            <cre:compteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:compteClient>
            <cre:personne>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:personne>
            <cre:typePersonne>Physique</cre:typePersonne>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:dateCreation>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateCreation>
            <cre:motifDemande>INT</cre:motifDemande>
            <cre:activite>ACT001</cre:activite>
            <cre:nature>Contestation</cre:nature>
            <cre:commentaire>Pas de commentaires</cre:commentaire>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
         </cre:question>
      </cre:CreerDemande>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="555b8b28-7c04-41d6-8bfc-697a7c6e4b74"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="6db51fc9-95d7-4c1a-8f97-6821aad8a58c"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="58bb474f-df6b-4cc7-8ba7-7327b2e6ad01"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="4290cead-46fb-4779-a4de-1828ce75bab9"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/CreerDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/CreerDemande';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDemandeBdd" id="db01c158-7f76-416f-a540-6b5cc6492f4e"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idExterneDemande = xmlResponse["//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idDemande[1]"];
//log.info( "xmlResponse.idExterneDemande = " + idExterneDemande );

assert idExterneDemande != null &amp;&amp; idExterneDemande != "" : "No 'idDemande' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE x_id_externe = ${idExterneDemande}
"""
);
assert rows.size() >= 1 : "Database record not found : idExterneDemande = '${idExterneDemande}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="030 SM026 CreerContactV3 avec dossier" id="e5fa476c-b63b-49ba-b58d-b335c73973f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerContactPort</con:interface><con:operation>creerContact</con:operation><con:request name="030 SM026 CreerContactV3 avec dossier" id="8e9fd7cd-8e76-4add-956c-3d8d53f1af8c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crct3/CreerContactService/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerContact">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerContact>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</cre:clfyIdPersonnePhysique>
            <!--cre:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:idFoncPersonnePhysique-->
            <!--cre:idFoncDemande></cre:idFoncDemande-->
            <cre:idFoncDossier>${#TestCase#dossierObjid1}</cre:idFoncDossier>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canalContact>RC</cre:canalContact>
            <cre:mediaContact>WEB</cre:mediaContact>
         </cre:question>
      </cre:creerContact>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3d25ed6c-fc4d-4a85-8fa5-c39c6b54974c"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="74bfbfd4-ec7f-4bb6-bde7-93958794f07d"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="515eb22c-104e-4379-a467-9bec4389b097"><con:configuration><path>declare namespace n1='http://sigc.sfr.com/creerContact';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/creerContact';
//m:creerContactResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="031 SM026 CreerContactV3 sans dossier" id="8f4fa53b-d636-4416-926b-03157434a02f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerContactPort</con:interface><con:operation>creerContact</con:operation><con:request name="031 SM026 CreerContactV3 sans dossier" id="b6191695-9058-4f20-a840-12307479ead3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crct3/CreerContactService/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerContact">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerContact>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</cre:clfyIdPersonnePhysique>
            <!--cre:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</cre:idFoncPersonnePhysique-->
            <!--cre:idFoncDemande></cre:idFoncDemande-->
            <!--cre:idFoncDossier>${#TestCase#dossierObjid1}</cre:idFoncDossier-->
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canalContact>RC</cre:canalContact>
            <cre:mediaContact>WEB</cre:mediaContact>
         </cre:question>
      </cre:creerContact>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="149a419a-15e5-4298-855f-0904f1a919ff"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="a1bcccee-3df6-463e-b688-cca734ee3b05"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="cf49e824-ff12-4356-a1fc-7c826b1e4f9b"><con:configuration><path>declare namespace n1='http://sigc.sfr.com/creerContact';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/creerContact';
//m:creerContactResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="040 SM039 CloreContactV2" id="00ea45a9-c0bb-4143-a5c7-8bf90889df2f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CloreContactPort</con:interface><con:operation>cloreContact</con:operation><con:request name="040 SM039 CloreContactV2" id="c8e2ff5e-08e1-4a06-a2aa-6e03b6a19e47"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clct/CloreContactService/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clor="http://sigc.sfr.com/cloreContact">
   <soapenv:Header/>
   <soapenv:Body>
      <clor:cloreContact>
         <clor:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</clor:sessionId>
         <clor:entete>
            <clor:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</clor:idTransaction>
            <clor:numeroFlux>FFLINT3022</clor:numeroFlux>
            <clor:ssaEmetteur>0883</clor:ssaEmetteur>
            <clor:versionFlux>02.00</clor:versionFlux>
            <clor:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateOrigineFlux>
            <clor:ssaRecepteur>0284</clor:ssaRecepteur>
            <clor:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateTraitementFlux>
            <clor:typeFlux>QU</clor:typeFlux>
         </clor:entete>
         <clor:question>
            <clor:idContact>${#TestCase#contactToCloseObjid2}</clor:idContact>
         </clor:question>
      </clor:cloreContact>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f51c408-8a85-4886-b61d-5923170ec18d"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="070c7044-888e-47f8-a9d3-1dc24ad1dab8"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="4be96b0c-d96c-49f8-9d55-1e7072e251d2"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/cloreContact';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/cloreContact';
//m:cloreContactResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="041 SM070 CloreDemandeV1" id="b9005fc0-9f0f-499a-bd27-2ffff43cba82"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CloreDemandePort</con:interface><con:operation>cloreDemande</con:operation><con:request name="041 SM070 CloreDemandeV1" id="e0486f73-5061-4096-a906-53bdb6f8d293"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clde/CloreDemandeService/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clor="http://sigc.sfr.com/cloreDemande">
   <soapenv:Header/>
   <soapenv:Body>
      <clor:cloreDemande>
         <clor:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</clor:sessionId>
         <clor:entete>
            <clor:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</clor:idTransaction>
            <clor:numeroFlux>FFLINT3022</clor:numeroFlux>
            <clor:ssaEmetteur>0883</clor:ssaEmetteur>
            <clor:versionFlux>01.00</clor:versionFlux>
            <clor:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateOrigineFlux>
            <clor:ssaRecepteur>0284</clor:ssaRecepteur>
            <clor:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateTraitementFlux>
            <clor:typeFlux>QU</clor:typeFlux>
         </clor:entete>
         <clor:question>
            <clor:idDemande>${#TestCase#tmpDemandeToClose2.idExterne}</clor:idDemande>
            <clor:resultatDemande>Réalisée</clor:resultatDemande>
         </clor:question>
      </clor:cloreDemande>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="aa52247e-ae58-40c2-a2f7-1ebf6d1f34a9"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="cf35b146-b3ed-41d4-b25b-0cd72a963608"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="7b275df3-f896-46da-9d80-4ccf1a9326c3"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/cloreDemande';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/cloreDemande';
//m:cloreDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="042 SM002 CloreActionProactiveV2" id="7ef1042b-081f-4f60-8ad2-6738ff793627"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CloreActionProactivePort</con:interface><con:operation>cloreActionProactive</con:operation><con:request name="042 SM002 CloreActionProactiveV2" id="73aff2d6-dcc3-49e6-aa90-ca1e65eb0b9b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_clap/CloreActionProactiveService/V2.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clor="http://sigc.sfr.com/cloreActionProactive">
   <soapenv:Header/>
   <soapenv:Body>
      <clor:cloreActionProactive>
         <clor:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</clor:sessionId>
         <clor:entete>
            <clor:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</clor:idTransaction>
            <clor:numeroFlux>FFLINT3022</clor:numeroFlux>
            <clor:ssaEmetteur>0883</clor:ssaEmetteur>
            <clor:versionFlux>02.00</clor:versionFlux>
            <clor:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateOrigineFlux>
            <clor:ssaRecepteur>0284</clor:ssaRecepteur>
            <clor:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</clor:dateTraitementFlux>
            <clor:typeFlux>QU</clor:typeFlux>
         </clor:entete>
         <clor:question>
            <clor:idActionProactive>${#TestCase#actionProactiveToCloseObjid2}</clor:idActionProactive>
            <clor:statutComplementaire></clor:statutComplementaire>
            <clor:raison></clor:raison>
         </clor:question>
      </clor:cloreActionProactive>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="76f1745b-44b2-4bbe-81f3-5e20d34cbdb6"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="fa1abd4e-e3f1-4b90-bad1-eeb5b47837ff"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="5dc419f7-f0ee-4bd3-b68b-451ffc1191fc"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/cloreActionProactive';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/cloreActionProactive';
//m:cloreActionProactiveResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="050 SM005 ModifierAdresseV5 Titulaire (modif) sans id demande" id="f7d87b94-af65-42cb-8372-6a7b67481971"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="050 SM005 ModifierAdresseV5 Titulaire (modif) sans id demande" id="32438ad7-ca6c-44e7-b1cd-5d99030dc013"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:modificationAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Titulaire</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:modificationAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="374ed73d-6144-4220-ad4c-c4d9d2d11c9e"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="38666f72-24b8-42c9-b6b3-c3299d7031c2"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="f67aba72-84d1-45bf-8b07-9081d2ae7748"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="b7a39445-f6ac-411c-8327-9f406b213754"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="051 Call RechercherClient" id="1dabaeb2-1d2b-44ab-ad41-5003bc88b781"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="052 SM005 ModifierAdresseV5 Titulaire (reset modif) avec id demande" id="47e16e23-8db1-4015-ab6b-db63de764a32"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="052 SM005 ModifierAdresseV5 Titulaire (reset modif) avec id demande" id="d8f3f46c-56d2-4187-9112-ef61d32596e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:idFoncDemande>${#TestCase#tmpDemande1.idNumber}</mod:idFoncDemande>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:modificationAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Titulaire</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:modificationAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="994df100-a2bc-4d7b-a489-51e38e4bed9d"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1821ae29-ae4e-4f61-af8d-f64a272aa811"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="fad653df-d6e1-47ef-878f-38580b1f049f"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="dc8f1bae-8739-45b5-a9fa-1f53065cf0bd"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/ModifierAdresse';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/ModifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="390be828-b479-4d70-881b-07e48856d570"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="053 Call RechercherClient" id="788f5f75-e698-4d0e-ae75-49a4dd511d70"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="060 SM005 ModifierAdresseV5 Facturation (creation) sans id demande" id="4decf3b4-f2c5-467a-8fe8-91520e352d29"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="060 SM005 ModifierAdresseV5 Facturation (creation) sans id demande" id="bd3eaf5c-4d37-46d1-abb0-d4f815cb3d27"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:ajoutAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Facturation</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:ajoutAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f0936307-fea9-4ebb-9256-04fd24436e54"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="aec0b3e6-17f1-4bba-b864-736f98b4a5ef"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="733b2118-ab34-4c3c-aa22-0d03b731c0ce"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="ada94865-e529-42e1-93da-6b9580e6e924"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="061 SM005 ModifierAdresseV5 Facturation (reset creation) avec id demande" id="fd0029cb-23b0-45d0-b566-f91f683d651d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierAdressePort</con:interface><con:operation>modifierAdresse</con:operation><con:request name="061 SM005 ModifierAdresseV5 Facturation (reset creation) avec id demande" id="26986996-7371-4757-8b2e-b7593c40e8e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_maV5/ModifierAdresse/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierAdresse">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierAdresse>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:annulationADGE>false</mod:annulationADGE>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:idFoncDemande>${#TestCase#tmpDemande1.idNumber}</mod:idFoncDemande>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
            <mod:ajoutAdresse>
               <!--1 or more repetitions:-->
               <mod:crNormalisation></mod:crNormalisation>
               <mod:clfyIdAdresseEquivalente>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdresseEquivalente>
               <mod:clfyIdAdressePrincipale>${#TestCase#tmpClient1.adrTitu.objid}</mod:clfyIdAdressePrincipale>
               <mod:nouvelleAdresseData>
                  <mod:numeroEtVoie>1 rue du Test</mod:numeroEtVoie>
                  <mod:codePostal>35000</mod:codePostal>
                  <mod:ville>RENNES</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:nouvelleAdresseData>
               <mod:ancienneAdresseData>
                  <mod:numeroEtVoie>95 place des Charmilles</mod:numeroEtVoie>
                  <mod:codePostal>22400</mod:codePostal>
                  <mod:ville>COETMIEUX</mod:ville>
                  <mod:pays>F</mod:pays>
               </mod:ancienneAdresseData>
               <!--1 or more repetitions:-->
               <mod:utilisationCible>
                  <mod:idFoncCompteLie>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteLie>
                  <mod:type>Facturation</mod:type>
                  <!--1 or more repetitions:-->
                  <mod:csu>
                     <mod:clfyId>${#TestCase#tmpClient1.csu.objid}</mod:clfyId>
                     <mod:numeroLignePrincipale>${#TestCase#tmpClient1.csu.numLignePrinc}</mod:numeroLignePrincipale>
                     <mod:codeSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:codeSCS>
                     <mod:numeroCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numeroCSU>
                  </mod:csu>
               </mod:utilisationCible>
            </mod:ajoutAdresse>
         </mod:question>
      </mod:modifierAdresse>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="293e9df3-a4b6-4c8a-8606-831f19bf8bed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1aa7ced6-75de-4fdc-a733-9ebe08167de0"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="598fafef-a0cf-45c4-8471-850fd72cb749"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="fc89bda6-a7de-4ebc-aadc-1324ef40e626"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="a15ba7c9-eb9a-4294-a39a-fa4f655dc8f5"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierAdresse';
declare namespace n1='http://sigc.sfr.com/modifierAdresse';
contains(//m:modifierAdresseResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text(), 'Modification de statut non valide')</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="070 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) sans id demande" id="b8cce033-2605-4000-8d69-cda0f6913dc5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePhysiquePort</con:interface><con:operation>modifierPersonnePhysique</con:operation><con:request name="070 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) sans id demande" id="201ccac4-cfc8-4706-a5da-e5eba0b14fc7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mppV5/ModifierPersonnePhysique/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonnePhysique">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonnePhysique>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:clfyIdPersonneUtilisateur>${#TestCase#tmpClient1.ppUtil.objid}</mod:clfyIdPersonneUtilisateur>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <mod:role>Utilisateur</mod:role>
         <mod:structureUtilisateur>
            <mod:utilisateur>
               <mod:civilite>MR</mod:civilite>
               <mod:nom>TESTEUR ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Toto</mod:prenom>
               <mod:departementNaissance>35</mod:departementNaissance>
               <mod:email1>titi@toto.fr</mod:email1>
               <mod:telephoneFixe>
                  <mod:indicatif>+33</mod:indicatif>
                  <mod:numero>0299123456</mod:numero>
               </mod:telephoneFixe>
            </mod:utilisateur>
         </mod:structureUtilisateur>
      </mod:modifierPersonnePhysique>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="4a21d2f6-1993-48e9-aa57-9eda706632f5"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="fac5b8c9-ae8e-426c-9c08-add5e4cde73b"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="4e9c0c86-e5b1-4f1c-b4ee-73bf84fb3b85"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonnePhysique';
declare namespace n1='http://sigc.sfr.com/modifierPersonnePhysique';
//m:modifierPersonnePhysiqueResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="071 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) avec id demande" id="d5964683-78fc-492a-aee6-8f7f0b532847"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePhysiquePort</con:interface><con:operation>modifierPersonnePhysique</con:operation><con:request name="071 SM061 ModifierPersonnePhysiqueV5 (Utilisateur) avec id demande" id="9c642be6-a68d-4e45-9d9c-b3cf3f5f0623"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mppV5/ModifierPersonnePhysique/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonnePhysique">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonnePhysique>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:idFoncDemande>${#TestCase#tmpDemande1.idExterne}</mod:idFoncDemande>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:clfyIdPersonneUtilisateur>${#TestCase#tmpClient1.ppUtil.objid}</mod:clfyIdPersonneUtilisateur>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <mod:role>Utilisateur</mod:role>
         <mod:structureUtilisateur>
            <mod:utilisateur>
               <mod:civilite>MR</mod:civilite>
               <mod:nom>TESTEUR ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Toto</mod:prenom>
               <mod:departementNaissance>35</mod:departementNaissance>
               <mod:email1>titi@toto.fr</mod:email1>
               <mod:telephoneFixe>
                  <mod:indicatif>+33</mod:indicatif>
                  <mod:numero>0299123456</mod:numero>
               </mod:telephoneFixe>
            </mod:utilisateur>
         </mod:structureUtilisateur>
      </mod:modifierPersonnePhysique>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="caf6f4de-7d76-408e-8705-a6fc4a4d0079"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="6a8f259a-76cf-4b90-9b4d-38c8db6deae0"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="995aded7-a871-4434-976e-67ed14384d9b"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonnePhysique';
declare namespace n1='http://sigc.sfr.com/modifierPersonnePhysique';
//m:modifierPersonnePhysiqueResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="7ec2b9fe-521c-4146-a52d-72ecad149d61"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonnePhysique';
declare namespace n1='http://sigc.sfr.com/modifierPersonnePhysique';
//m:modifierPersonnePhysiqueResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="080 Call RechercherClient" id="192deebd-58ca-456f-8224-28229d30364e"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="081 SM011 ModifierDonneesPersoV5 sans id demande" id="5637bdc9-5d14-4058-a282-57bae94af30f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierDonneesPersonnellesPort</con:interface><con:operation>modifierDonneesPersonnelles</con:operation><con:request name="081 SM011 ModifierDonneesPersoV5 sans id demande" id="3f2e4c70-a802-490d-ade3-b7256186b94b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mdpV5/ModifierDonneesPersonnelles/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierDonneesPersonnelles">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierDonneesPersonnelles>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:ancienneValeur>
               <mod:email1>${#TestCase#tmpClient1.ppTitu.email}</mod:email1>
               <mod:personnePhysiqueData>
                  <mod:civilite>${#TestCase#tmpClient1.ppTitu.civilite}</mod:civilite>
                  <mod:nom>${#TestCase#tmpClient1.ppTitu.nom}</mod:nom>
                  <mod:prenom>${#TestCase#tmpClient1.ppTitu.prenom}</mod:prenom>
                  <mod:dateNaissance>${#TestCase#tmpClient1.ppTitu.dateNaissance}</mod:dateNaissance>
                  <mod:departementNaissance>${#TestCase#tmpClient1.ppTitu.deptNaissance}</mod:departementNaissance>
                  <mod:sirenSiret></mod:sirenSiret>
                  <mod:niveauQualificationPro></mod:niveauQualificationPro>
               </mod:personnePhysiqueData>
               <mod:personneMoraleData>
                  <mod:codeAPE></mod:codeAPE>
                  <mod:contact></mod:contact>
                  <mod:numeroTvaUE></mod:numeroTvaUE>
                  <mod:raisonSociale></mod:raisonSociale>
                  <mod:siren></mod:siren>
                  <mod:siret></mod:siret>
               </mod:personneMoraleData>
               <mod:telephoneFax>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFax>
               <mod:telephoneFixe>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFixe>
               <mod:telephoneMobile>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneMobile>
               <mod:contactPrivilegieData>
                  <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
                  <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
                  <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
                  <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
                  <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
                  <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
                  <mod:langueUsage>FR</mod:langueUsage>
               </mod:contactPrivilegieData>
               <!--Zero or more repetitions:-->
               <mod:optIn>
                  <mod:optInType>EMAIL</mod:optInType>
                  <mod:optIn>START</mod:optIn>
               </mod:optIn>
            </mod:ancienneValeur>
            <mod:email1>test1${=new Date().format("SSS")}@gmail.com</mod:email1>
            <mod:personnePhysiqueData>
               <mod:civilite>MR</mod:civilite>
               <mod:nom>TESTEUR ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Titi</mod:prenom>
               <mod:dateNaissance>1982-01-01</mod:dateNaissance>
               <mod:departementNaissance>56</mod:departementNaissance>
               <mod:sirenSiret></mod:sirenSiret>
               <mod:niveauQualificationPro></mod:niveauQualificationPro>
            </mod:personnePhysiqueData>
            <mod:personneMoraleData>
               <mod:codeAPE></mod:codeAPE>
               <mod:contact></mod:contact>
               <mod:numeroTvaUE></mod:numeroTvaUE>
               <mod:raisonSociale></mod:raisonSociale>
               <mod:siren></mod:siren>
               <mod:siret></mod:siret>
            </mod:personneMoraleData>
            <mod:telephoneFax>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFax>
            <mod:telephoneFixe>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFixe>
            <mod:telephoneMobile>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneMobile>
            <mod:contactPrivilegieData>
               <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
               <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
               <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
               <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
               <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
               <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
               <mod:langueUsage>FR</mod:langueUsage>
            </mod:contactPrivilegieData>
            <!--Zero or more repetitions:-->
            <mod:optIn>
               <mod:optInType>EMAIL</mod:optInType>
               <mod:optIn>START</mod:optIn>
            </mod:optIn>
         </mod:question>
         <mod:distributeur>
            <mod:codePDV></mod:codePDV>
            <mod:calculette></mod:calculette>
            <mod:login></mod:login>
            <mod:typelogin></mod:typelogin>
            <mod:canal></mod:canal>
         </mod:distributeur>
      </mod:modifierDonneesPersonnelles>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f221518-16e3-4d01-b486-49e871a66f53"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="cc0ae83f-bbce-4e93-9131-5c8de2e425ff"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="8de0aa67-a811-489b-b819-88ee9e02c2ac"><con:configuration><path>declare namespace m='http://sigc.sfr.com/modifierDonneesPersonnelles';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierDonneesPersonnelles';
//m:modifierDonneesPersonnellesResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="082 Call RechercherClient" id="9cc32457-28df-4ac1-bb29-d920dc7071be"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="083 SM011 ModifierDonneesPersoV5 avec id demande" id="7eb71606-4ce6-4a9e-83fe-540b199f6a4d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierDonneesPersonnellesPort</con:interface><con:operation>modifierDonneesPersonnelles</con:operation><con:request name="083 SM011 ModifierDonneesPersoV5 avec id demande" id="df7eca03-6bed-4f55-aeb8-b33f9431cbbf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mdpV5/ModifierDonneesPersonnelles/V5.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierDonneesPersonnelles">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierDonneesPersonnelles>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>05.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:question>
            <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
            <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
            <mod:idFoncDemande>${#TestCase#tmpDemande1.idNumber}</mod:idFoncDemande>
            <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
            <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>           
            <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
            <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
            <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
            <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
            <mod:ancienneValeur>
               <mod:email1>${#TestCase#tmpClient1.ppTitu.email}</mod:email1>
               <mod:personnePhysiqueData>
                  <mod:civilite>${#TestCase#tmpClient1.ppTitu.civilite}</mod:civilite>
                  <mod:nom>${#TestCase#tmpClient1.ppTitu.nom}</mod:nom>
                  <mod:prenom>${#TestCase#tmpClient1.ppTitu.prenom}</mod:prenom>
                  <mod:dateNaissance>${#TestCase#tmpClient1.ppTitu.dateNaissance}</mod:dateNaissance>
                  <mod:departementNaissance>${#TestCase#tmpClient1.ppTitu.deptNaissance}</mod:departementNaissance>
                  <mod:sirenSiret></mod:sirenSiret>
                  <mod:niveauQualificationPro></mod:niveauQualificationPro>
               </mod:personnePhysiqueData>
               <mod:personneMoraleData>
                  <mod:codeAPE></mod:codeAPE>
                  <mod:contact></mod:contact>
                  <mod:numeroTvaUE></mod:numeroTvaUE>
                  <mod:raisonSociale></mod:raisonSociale>
                  <mod:siren></mod:siren>
                  <mod:siret></mod:siret>
               </mod:personneMoraleData>
               <mod:telephoneFax>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFax>
               <mod:telephoneFixe>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneFixe>
               <mod:telephoneMobile>
                  <mod:indicatif></mod:indicatif>
                  <mod:numero></mod:numero>
               </mod:telephoneMobile>
               <mod:contactPrivilegieData>
                  <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
                  <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
                  <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
                  <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
                  <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
                  <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
                  <mod:langueUsage>FR</mod:langueUsage>
               </mod:contactPrivilegieData>
               <!--Zero or more repetitions:-->
               <mod:optIn>
                  <mod:optInType>EMAIL</mod:optInType>
                  <mod:optIn>START</mod:optIn>
               </mod:optIn>
            </mod:ancienneValeur>
            <mod:email1>test2${=new Date().format("SSS")}@gmail.com</mod:email1>
            <mod:personnePhysiqueData>
               <mod:civilite>MME</mod:civilite>
               <mod:nom>TEST ${=new Date().format("SSS")}</mod:nom>
               <mod:prenom>Tata</mod:prenom>
               <mod:dateNaissance>1982-02-02</mod:dateNaissance>
               <mod:departementNaissance>35</mod:departementNaissance>
               <mod:sirenSiret></mod:sirenSiret>
               <mod:niveauQualificationPro></mod:niveauQualificationPro>
            </mod:personnePhysiqueData>
            <mod:personneMoraleData>
               <mod:codeAPE></mod:codeAPE>
               <mod:contact></mod:contact>
               <mod:numeroTvaUE></mod:numeroTvaUE>
               <mod:raisonSociale></mod:raisonSociale>
               <mod:siren></mod:siren>
               <mod:siret></mod:siret>
            </mod:personneMoraleData>
            <mod:telephoneFax>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFax>
            <mod:telephoneFixe>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneFixe>
            <mod:telephoneMobile>
               <mod:indicatif></mod:indicatif>
               <mod:numero></mod:numero>
            </mod:telephoneMobile>
            <mod:contactPrivilegieData>
               <mod:heureContactPrivilegiee1>HeureContact_01</mod:heureContactPrivilegiee1>
               <mod:heureContactPrivilegiee2>HeureContact_01</mod:heureContactPrivilegiee2>
               <mod:heureContactPrivilegiee3>HeureContact_01</mod:heureContactPrivilegiee3>
               <mod:jourContactPrivilegie1>NON_RENSEIGNE</mod:jourContactPrivilegie1>
               <mod:jourContactPrivilegie2>NON_RENSEIGNE</mod:jourContactPrivilegie2>
               <mod:jourContactPrivilegie3>NON_RENSEIGNE</mod:jourContactPrivilegie3>
               <mod:langueUsage>FR</mod:langueUsage>
            </mod:contactPrivilegieData>
            <!--Zero or more repetitions:-->
            <mod:optIn>
               <mod:optInType>EMAIL</mod:optInType>
               <mod:optIn>START</mod:optIn>
            </mod:optIn>
         </mod:question>
         <mod:distributeur>
            <mod:codePDV></mod:codePDV>
            <mod:calculette></mod:calculette>
            <mod:login></mod:login>
            <mod:typelogin></mod:typelogin>
            <mod:canal></mod:canal>
         </mod:distributeur>
      </mod:modifierDonneesPersonnelles>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7d0d8d52-db69-4851-aa6b-40db5ac8e37d"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="24a699a7-f68f-40f2-a9ca-44aa1306d98d"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="454a4926-fc25-41bc-ae8d-f225b416e99b"><con:configuration><path>declare namespace m='http://sigc.sfr.com/modifierDonneesPersonnelles';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierDonneesPersonnelles';
//m:modifierDonneesPersonnellesResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="d1cdd1e2-2d7e-4e2f-8a45-8cb32bb72355"><con:configuration><path>declare namespace m='http://sigc.sfr.com/modifierDonneesPersonnelles';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierDonneesPersonnelles';
//m:modifierDonneesPersonnellesResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="084 Call RechercherClient" id="d266653e-fd6b-4766-ad06-c09e6691cbe5"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="090 SM017 ModifierMoyenPaiementV6 (modif) sans id demande" id="a542aa82-6bdb-4285-a79e-fc1dd40e86b1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierMoyenPaiementPort</con:interface><con:operation>modifierMoyenPaiement</con:operation><con:request name="090 SM017 ModifierMoyenPaiementV6 (modif) sans id demande" id="03b6331b-6681-437d-8700-62a6237cad20"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mmpV6/ModifierMoyenPaiement/V6.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierMoyenPaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierMoyenPaiement>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>06.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
         <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
         <mod:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</mod:clfyIdMynPmt>
         <mod:compteFacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>1</mod:applicationSurcout>
         </mod:compteFacturation>
         <mod:moyenDePaiementDataOld>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>15589</mod:codeEtablissement>
               <mod:codeGuichet>33552</mod:codeGuichet>
               <mod:numeroCompte>21696272543</mod:numeroCompte>
               <mod:cle>77</mod:cle>
               <mod:iban>FR7615589335522169627254377</mod:iban>
               <mod:bic>CMBRFR2BXXX</mod:bic>
               <mod:titulaireCompte>Testeur 1</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementDataOld>
         <mod:moyenDePaiementData>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>30004</mod:codeEtablissement>
               <mod:codeGuichet>00319</mod:codeGuichet>
               <mod:numeroCompte>76995378100</mod:numeroCompte>
               <mod:cle>60</mod:cle>
               <mod:iban>FR7630004003197699537810060</mod:iban>
               <mod:bic>BNPAFRPPXXX</mod:bic>
               <mod:titulaireCompte>Testeur 2</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementData>
      </mod:modifierMoyenPaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ee862f8e-abe1-42b3-b870-0b69e7266caf"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="befbda7e-2d73-44ef-a08d-dffe96d6b2be"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="dcb21b36-b1c1-4d80-b22d-c90e6778866a"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="091 Call RechercherClient" id="f0e82bc8-cc4c-46b7-843e-7836a2cc3eac"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="092 SM046 RepliquerMoyenDePaiementV4 (modif) sans id demande" id="35d4574f-de48-4cdd-ba37-7ce205c06eb9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>RepliquerMoyenDePaiementPort</con:interface><con:operation>repliquerMoyenDePaiement</con:operation><con:request name="092 SM046 RepliquerMoyenDePaiementV4 (modif) sans id demande" id="08fa3a4d-bf1c-4ddf-be7c-8c3ff7f51f56"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_rmpV4/RepliquerMoyenDePaiement/V4.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rep="http://sigc.sfr.com/repliquerMoyenDePaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <rep:repliquerMoyenDePaiement>
         <rep:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</rep:sessionId>
         <rep:canalContact>RC</rep:canalContact>
         <rep:mediaContact>WEB</rep:mediaContact>
         <rep:entete>
            <rep:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</rep:idTransaction>
            <rep:numeroFlux>FFLINT2801</rep:numeroFlux>
            <rep:ssaEmetteur>0883</rep:ssaEmetteur>
            <rep:versionFlux>04.00</rep:versionFlux>
            <rep:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateOrigineFlux>
            <rep:ssaRecepteur>0284</rep:ssaRecepteur>
            <rep:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateTraitementFlux>
            <rep:typeFlux>QU</rep:typeFlux>
         </rep:entete>
         <rep:question>
            <rep:vraiFauxNotification>true</rep:vraiFauxNotification>
            <rep:clfyIdContact>${#TestCase#contactObjid1}</rep:clfyIdContact>
            <rep:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</rep:clfyIdCompteClient>
            <rep:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</rep:idFoncCompteClient>
            <rep:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</rep:clfyIdPersonneDemandeur>          
            <rep:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</rep:clfyIdPersonnePorteSur>
            <rep:typePersonneDemandeur>Physique</rep:typePersonneDemandeur>
            <rep:typePersonnePorteSur>Physique</rep:typePersonnePorteSur>
            <rep:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</rep:clfyIdMynPmt>
            <rep:compteDeFacturation>
               <rep:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idfonc}</rep:idFoncCompteFactu>
            </rep:compteDeFacturation>
            <rep:moyenPaiementData>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>30004</rep:codeEtablissement>
                  <rep:codeGuichet>00319</rep:codeGuichet>
                  <rep:numeroCompte>76995378100</rep:numeroCompte>
                  <rep:cle>60</rep:cle>
                  <rep:iban>FR7630004003197699537810060</rep:iban>
                  <rep:bic>BNPAFRPPXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 2</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementData>
            <rep:moyenPaiementDataOld>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>15589</rep:codeEtablissement>
                  <rep:codeGuichet>33552</rep:codeGuichet>
                  <rep:numeroCompte>21696272543</rep:numeroCompte>
                  <rep:cle>77</rep:cle>
                  <rep:iban>FR7615589335522169627254377</rep:iban>
                  <rep:bic>CMBRFR2BXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 1</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementDataOld>
         </rep:question>
      </rep:repliquerMoyenDePaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e23c6f7b-f7c3-47f6-bb28-39c2db30ff22"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="18c7f8c6-ac4b-446c-b8e3-ec0d1855f457"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="b82043ce-5299-45a1-be8c-bafb4bb68b7b"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="802bfd78-e4f8-4e31-9396-dfd4896281b8"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
exists(//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="093 Call RechercherClient" id="e15e67be-2701-4fc8-ac96-3db542767c88"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="100 SM017 ModifierMoyenPaiementV6 (reset modif) avec id demande" id="b2751685-0183-44f6-b47d-545fd31fbe11"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierMoyenPaiementPort</con:interface><con:operation>modifierMoyenPaiement</con:operation><con:request name="100 SM017 ModifierMoyenPaiementV6 (reset modif) avec id demande" id="bb480a0e-6d97-4cb8-a627-8f0beb5edc54"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mmpV6/ModifierMoyenPaiement/V6.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierMoyenPaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierMoyenPaiement>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:canalContact>RC</mod:canalContact>
         <mod:mediaContact>WEB</mod:mediaContact>
         <mod:entete>
            <mod:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT2801</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:versionFlux>06.00</mod:versionFlux>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:vraiFauxNotification>true</mod:vraiFauxNotification>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:idFoncDemande>${#TestCase#tmpDemande1.idExterne}</mod:idFoncDemande>
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>          
         <mod:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</mod:clfyIdPersonnePorteSur>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <mod:typePersonnePorteSur>Physique</mod:typePersonnePorteSur>
         <mod:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</mod:clfyIdMynPmt>
         <mod:compteFacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>1</mod:applicationSurcout>
         </mod:compteFacturation>
         <mod:moyenDePaiementDataOld>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>30004</mod:codeEtablissement>
               <mod:codeGuichet>00319</mod:codeGuichet>
               <mod:numeroCompte>76995378100</mod:numeroCompte>
               <mod:cle>60</mod:cle>
               <mod:iban>FR7630004003197699537810060</mod:iban>
               <mod:bic>BNPAFRPPXXX</mod:bic>
               <mod:titulaireCompte>Testeur 2</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementDataOld>
         <mod:moyenDePaiementData>
            <mod:type>2</mod:type>
            <mod:compteBancaire>
               <mod:codeEtablissement>15589</mod:codeEtablissement>
               <mod:codeGuichet>33552</mod:codeGuichet>
               <mod:numeroCompte>21696272543</mod:numeroCompte>
               <mod:cle>77</mod:cle>
               <mod:iban>FR7615589335522169627254377</mod:iban>
               <mod:bic>CMBRFR2BXXX</mod:bic>
               <mod:titulaireCompte>Testeur 1</mod:titulaireCompte>
               <mod:idRum></mod:idRum>
               <mod:notificationInd></mod:notificationInd>
            </mod:compteBancaire>
         </mod:moyenDePaiementData>
      </mod:modifierMoyenPaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e8bf708f-ffa0-4551-a0c6-f438219f16cf"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="8d4b0eda-86b3-45b2-ada5-86b666ed0ba4"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="f2bf7fb0-9f63-4205-87e2-989ebfd7d52d"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="5b157acb-9fed-498f-b70c-1ebb7f27d686"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="461a48e5-ec34-4178-aac8-c9d99146938e"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace m='http://sigc.sfr.com/modifierMoyenPaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/modifierMoyenPaiement';
//m:modifierMoyenPaiementResponse[1]/n1:result[1]/n1:reponse[1]/n1:libelleErreur[1]/text() = 'Erreur interne. Résultats de recherche incorrects (ex n élements au lieu de 1 attendu)'</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="101 Call RechercherClient" id="8ad1b021-bbfb-4561-bcb5-1bcbe113321c"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="102 SM046 RepliquerMoyenDePaiementV4 (reset modif) avec id demande" id="18757d47-14ad-4ab5-acba-61a238737532"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>RepliquerMoyenDePaiementPort</con:interface><con:operation>repliquerMoyenDePaiement</con:operation><con:request name="102 SM046 RepliquerMoyenDePaiementV4 (reset modif) avec id demande" id="920fad70-6b19-4c1f-a717-bdfe3108fb00"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_rmpV4/RepliquerMoyenDePaiement/V4.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rep="http://sigc.sfr.com/repliquerMoyenDePaiement">
   <soapenv:Header/>
   <soapenv:Body>
      <rep:repliquerMoyenDePaiement>
         <rep:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</rep:sessionId>
         <rep:canalContact>RC</rep:canalContact>
         <rep:mediaContact>WEB</rep:mediaContact>
         <rep:entete>
            <rep:idTransaction>08832801${=new Date().format("yyyyMMddHHmmssSSS")}000</rep:idTransaction>
            <rep:numeroFlux>FFLINT2801</rep:numeroFlux>
            <rep:ssaEmetteur>0883</rep:ssaEmetteur>
            <rep:versionFlux>04.00</rep:versionFlux>
            <rep:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateOrigineFlux>
            <rep:ssaRecepteur>0284</rep:ssaRecepteur>
            <rep:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</rep:dateTraitementFlux>
            <rep:typeFlux>QU</rep:typeFlux>
         </rep:entete>
         <rep:question>
            <rep:vraiFauxNotification>true</rep:vraiFauxNotification>
            <rep:clfyIdContact>${#TestCase#contactObjid1}</rep:clfyIdContact>
            <rep:clfyIdDemande>${#TestCase#tmpDemande1.objid}</rep:clfyIdDemande>
            <rep:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</rep:clfyIdCompteClient>
            <rep:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</rep:idFoncCompteClient>
            <rep:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</rep:clfyIdPersonneDemandeur>          
            <rep:clfyIdPersonnePorteSur>${#TestCase#tmpClient1.ppPayeur.objid}</rep:clfyIdPersonnePorteSur>
            <rep:typePersonneDemandeur>Physique</rep:typePersonneDemandeur>
            <rep:typePersonnePorteSur>Physique</rep:typePersonnePorteSur>
            <rep:clfyIdMynPmt>${#TestCase#tmpClient1.mp.objid}</rep:clfyIdMynPmt>
            <rep:compteDeFacturation>
               <rep:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idfonc}</rep:idFoncCompteFactu>
            </rep:compteDeFacturation>
            <rep:moyenPaiementData>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>30004</rep:codeEtablissement>
                  <rep:codeGuichet>00319</rep:codeGuichet>
                  <rep:numeroCompte>76995378100</rep:numeroCompte>
                  <rep:cle>60</rep:cle>
                  <rep:iban>FR7630004003197699537810060</rep:iban>
                  <rep:bic>BNPAFRPPXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 2</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementData>
            <rep:moyenPaiementDataOld>
               <rep:type>2</rep:type>
               <rep:compteBancaire>
                  <rep:codeEtablissement>15589</rep:codeEtablissement>
                  <rep:codeGuichet>33552</rep:codeGuichet>
                  <rep:numeroCompte>21696272543</rep:numeroCompte>
                  <rep:cle>77</rep:cle>
                  <rep:iban>FR7615589335522169627254377</rep:iban>
                  <rep:bic>CMBRFR2BXXX</rep:bic>
                  <rep:titulaireCompte>Testeur 1</rep:titulaireCompte>
               </rep:compteBancaire>
            </rep:moyenPaiementDataOld>
         </rep:question>
      </rep:repliquerMoyenDePaiement>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="776f5747-8bc1-4242-93a1-aa375d3b0bd2"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="d3b57913-e3ee-4a5d-9672-2dba5a97e2b9"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="1898ca55-a1df-4acb-97f2-0716d9eaced5"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:codeErreur[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDemande" id="ad757ffc-55d2-4fa6-95e9-fdd25dc34d80"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
exists(//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:idFoncDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="3ca512a4-0906-4274-be18-4726c6918b4c"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierJeuDeDonnees" id="13d52b19-d918-40ff-97e9-390b5e380255"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace n1='http://sigc.sfr.com/repliquerMoyenDePaiement';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/repliquerMoyenDePaiement';
//m:repliquerMoyenDePaiementResponse[1]/n1:result[1]/n1:retour[1]/n1:libelleErreur[1]/text() = 'Erreur interne. Résultats de recherche incorrects (ex n élements au lieu de 1 attendu)'</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="103 Call RechercherClient" id="310493c1-3dfa-4303-bae5-507497977e65"><con:settings/><con:config><script>testRunner.runTestStep( testRunner.testCase.testSteps['010 SQL RechercherClient'] );
</script></con:config></con:testStep><con:testStep type="request" name="110 SM079 ModifierPersonneV3 (Titulaire) sans id demande" id="0e09e679-e03d-43b5-9f02-59fae0fdaf93"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePort</con:interface><con:operation>modifierPersonne</con:operation><con:request name="110 SM079 ModifierPersonneV3 (Titulaire) sans id demande" id="98660a90-5dc1-48eb-b5c4-6979ff01fc2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mpnV3/ModifierPersonne/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonne">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonne>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:adresse>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Titulaire</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>35000</mod:codePostal>
            <mod:ville>RENNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresse>
         <mod:adresseFacturation>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Payeur</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>56000</mod:codePostal>
            <mod:ville>VANNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresseFacturation>
         <mod:vraiFauxModifAdresseFacturation>true</mod:vraiFauxModifAdresseFacturation>
         <mod:canalContact>RC</mod:canalContact>
         <!--<mod:clfyIdActionProActive></mod:clfyIdActionProActive>-->
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePhysique>
         <mod:entete>
            <mod:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT3022</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:versionFlux>03.00</mod:versionFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <!--<mod:idFoncDemande></mod:idFoncDemande>-->
         <mod:idFoncPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonneDemandeur>
         <mod:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonnePhysique>
         <!--<mod:idFoncPersonneMorale></mod:idFoncPersonneMorale>-->
         <mod:idOffreAramis></mod:idOffreAramis>
         <mod:mediaContact>WEB</mod:mediaContact>
         <!--<mod:moyenDePaiement/>-->
         <mod:moyenDePaiementCompte>
            <mod:titulaireCompte>TITULAIRE ${=new Date().format("SSS")}</mod:titulaireCompte>
         </mod:moyenDePaiementCompte>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <!--<mod:personne/>-->
         <mod:personnePhysique>
            <mod:civilite>MR</mod:civilite>
            <mod:nom>TITULAIRE ${=new Date().format("SSS")}</mod:nom>
            <mod:prenom>Test</mod:prenom>
            <mod:dateNaissance>1982-01-01</mod:dateNaissance>
            <mod:departementNaissance>35</mod:departementNaissance>
         </mod:personnePhysique>
         <mod:role>Titulaire</mod:role>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <!--<mod:dateEcheance></mod:dateEcheance>-->
         <mod:clfyIdADGE></mod:clfyIdADGE>
         <mod:vraiFauxTitulaire>true</mod:vraiFauxTitulaire>
         <mod:vraiFauxPayeur>false</mod:vraiFauxPayeur>
         <mod:vraiFauxUtilisateur>false</mod:vraiFauxUtilisateur>
         <mod:demergeSourceFlag>false</mod:demergeSourceFlag>
         <mod:demergeDestinationFlag>false</mod:demergeDestinationFlag>
         <mod:demergeReason></mod:demergeReason>
         <mod:mode>M</mod:mode>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:comptefacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>0</mod:applicationSurcout>
         </mod:comptefacturation>
         <!--<mod:vraiFauxNotification>true</mod:vraiFauxNotification>-->
      </mod:modifierPersonne>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="597cef1d-cacb-4c78-ba7f-b8cd4df31409"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="578d4436-96a2-4dd4-b08e-53a463ec3cc6"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="b056da14-8b13-4ce1-8de0-9268eccfe152"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
//m:modifierPersonneResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="7545fb87-4988-4537-a865-5abe21d50d57"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="111 SM079 ModifierPersonneV3 (Titulaire) avec id demande" id="09cd01b9-32bf-48b9-ab19-6c750391ea88"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ModifierPersonnePort</con:interface><con:operation>modifierPersonne</con:operation><con:request name="111 SM079 ModifierPersonneV3 (Titulaire) avec id demande" id="99de3a34-9266-40c6-afee-d55076b2f67a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_mpnV3/ModifierPersonne/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mod="http://sigc.sfr.com/modifierPersonne">
   <soapenv:Header/>
   <soapenv:Body>
      <mod:modifierPersonne>
         <mod:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</mod:sessionId>
         <mod:adresse>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Titulaire</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>35000</mod:codePostal>
            <mod:ville>RENNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresse>
         <mod:adresseFacturation>
            <mod:etatNormalisation>N</mod:etatNormalisation>
            <mod:complementIdentite></mod:complementIdentite>
            <mod:complementGeographique></mod:complementGeographique>
            <mod:numeroTypeVoieNomVoie>${=new Date().format("SSS")} rue du Payeur</mod:numeroTypeVoieNomVoie>
            <mod:lieuDitBoitePostale></mod:lieuDitBoitePostale>
            <mod:codePostal>56000</mod:codePostal>
            <mod:ville>VANNES</mod:ville>
            <mod:codePays>F</mod:codePays>
            <mod:codePaysISO></mod:codePaysISO>
         </mod:adresseFacturation>
         <mod:vraiFauxModifAdresseFacturation>true</mod:vraiFauxModifAdresseFacturation>
         <mod:canalContact>RC</mod:canalContact>
         <!--<mod:clfyIdActionProActive></mod:clfyIdActionProActive>-->
         <mod:clfyIdCompteClient>${#TestCase#tmpClient1.ccTitu.objid}</mod:clfyIdCompteClient>
         <mod:clfyIdContact>${#TestCase#contactObjid1}</mod:clfyIdContact>
         <mod:clfyIdPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonneDemandeur>
         <mod:clfyIdPersonnePhysique>${#TestCase#tmpClient1.ppTitu.objid}</mod:clfyIdPersonnePhysique>
         <mod:entete>
            <mod:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</mod:idTransaction>
            <mod:numeroFlux>FFLINT3022</mod:numeroFlux>
            <mod:ssaEmetteur>0883</mod:ssaEmetteur>
            <mod:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateOrigineFlux>
            <mod:versionFlux>03.00</mod:versionFlux>
            <mod:ssaRecepteur>0284</mod:ssaRecepteur>
            <mod:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</mod:dateTraitementFlux>
            <mod:typeFlux>QU</mod:typeFlux>
         </mod:entete>
         <mod:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</mod:idFoncCompteClient>
         <mod:idFoncDemande>${#TestCase#tmpDemande1.idExterne}</mod:idFoncDemande>
         <mod:idFoncPersonneDemandeur>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonneDemandeur>
         <mod:idFoncPersonnePhysique>${#TestCase#tmpClient1.ppTitu.idFonc}</mod:idFoncPersonnePhysique>
         <!--<mod:idFoncPersonneMorale></mod:idFoncPersonneMorale>-->
         <mod:idOffreAramis></mod:idOffreAramis>
         <mod:mediaContact>WEB</mod:mediaContact>
         <!--<mod:moyenDePaiement/>-->
         <mod:moyenDePaiementCompte>
            <mod:titulaireCompte>TITULAIRE ${=new Date().format("SSS")}</mod:titulaireCompte>
         </mod:moyenDePaiementCompte>
         <mod:numCSU>${#TestCase#tmpClient1.csu.numeroCsu}</mod:numCSU>
         <mod:numSCS>${#TestCase#tmpClient1.csu.codeScs}</mod:numSCS>
         <!--<mod:personne/>-->   
         <mod:personnePhysique>
            <mod:civilite>MR</mod:civilite>
            <mod:nom>TITULAIRE ${=new Date().format("SSS")}</mod:nom>
            <mod:prenom>Test</mod:prenom>
            <mod:dateNaissance>1982-01-01</mod:dateNaissance>
            <mod:departementNaissance>35</mod:departementNaissance>
         </mod:personnePhysique>
         <mod:role>Titulaire</mod:role>
         <mod:typePersonneDemandeur>Physique</mod:typePersonneDemandeur>
         <!--<mod:dateEcheance></mod:dateEcheance>-->
         <mod:clfyIdADGE></mod:clfyIdADGE>
         <mod:vraiFauxTitulaire>true</mod:vraiFauxTitulaire>
         <mod:vraiFauxPayeur>false</mod:vraiFauxPayeur>
         <mod:vraiFauxUtilisateur>false</mod:vraiFauxUtilisateur>
         <mod:demergeSourceFlag>false</mod:demergeSourceFlag>
         <mod:demergeDestinationFlag>false</mod:demergeDestinationFlag>
         <mod:demergeReason></mod:demergeReason>
         <mod:mode>M</mod:mode>
         <mod:annulationADGE>false</mod:annulationADGE>
         <mod:comptefacturation>
            <mod:idFoncCompteFactu>${#TestCase#tmpClient1.cf.idFonc}</mod:idFoncCompteFactu>
            <mod:applicationSurcout>0</mod:applicationSurcout>
         </mod:comptefacturation>
         <!--<mod:vraiFauxNotification>true</mod:vraiFauxNotification>-->
      </mod:modifierPersonne>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e4a544e6-28b1-4faa-8b2c-6474bc9ce43f"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="bf2caee2-7435-4672-8c9c-450c1b1f3ef2"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="be4b422c-6496-4c94-a96f-42b54442a39f"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
//m:modifierPersonneResponse[1]/n1:result[1]/n1:reponse[1]/n1:resultat[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdTechDemande" id="4bcf78bd-e238-4aac-a1bb-8a2ee2b66e52"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
exists(//m:CreerDemandeResponse[1]/n1:result[1]/n1:reponse[1]/n1:idTechDemande[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierReutilisationIdDemande" id="31d12fd3-8623-4246-95f1-502a020df48a"><con:configuration><path>declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace m='http://sigc.sfr.com/modifierPersonne';
declare namespace n1='http://sigc.sfr.com/modifierPersonne';
//m:modifierPersonneResponse[1]/n1:result[1]/n1:reponse[1]/n1:adg[1]/n1:idFoncDemande[1]/text() = ${#TestCase#tmpDemande1.idNumber}</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="120 SM081 CreerDossierV3 avec donnees additionnelles FAST et sans id demande" id="ecc250ba-938b-4f6d-9ce1-d0c18b6aff20"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="120 SM081 CreerDossierV3 avec donnees additionnelles FAST et sans id demande" id="78f6e94b-de1b-4c15-88b5-5ace4f2d2a8b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>CTI02</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <!--Zero or more repetitions:-->
            <cre:parametreAdditionnel>
               <cre:code>ATT_AUCUN</cre:code>
               <cre:valeur>Test</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>CUSTOMERCONTACTORMAIL</cre:code>
               <cre:valeur>toto@gmail.fr</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>DISTRIBUTORCODE</cre:code>
               <cre:valeur>1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>DISTRIBUTORLABEL</cre:code>
               <cre:valeur>Test1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>DISTRIBUTORNAME</cre:code>
               <cre:valeur>Test2</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:parametreAdditionnel>
               <cre:code>PDVCONTACTNUMBER</cre:code>
               <cre:valeur>1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="68944af3-21d6-4ce7-a87b-005b8c291804"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="1785b26b-d57e-4e92-a93a-77b5ae7f33b1"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="f24a76fe-484d-499a-a632-46bc8759fc1e"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="50f2e322-a5b6-402d-969b-196efdc061a1"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="c54fa1aa-ebe1-4408-8062-75be862dbdc4"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="121 SM081 CreerDossierV3 avec donnees additionnelles FAST et avec id demande" id="987d61e5-ed83-4181-9a68-0231f60216ad"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="121 SM081 CreerDossierV3 avec donnees additionnelles FAST et avec id demande" id="0fe85192-86c5-4c01-9890-b3d3bcfd2f80"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idTechDemande>${#TestCase#tmpDemande1.objid}</cre:idTechDemande>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>NME01</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <!--Zero or more repetitions:-->
            <cre:parametreAdditionnel>
               <cre:code>PDVCONTACTNUMBER</cre:code>
               <cre:valeur>1</cre:valeur>
            </cre:parametreAdditionnel>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a2870cef-a368-4be3-af66-8a58da5faba2"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="4fc4d3dc-d083-4727-b3f9-ee98f3dea701"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="9797c6a7-5e3e-4120-80e7-06afaf023909"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="f1d0e0da-4613-4e13-89c4-d40dbef42b27"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="cf4f7186-1064-484d-9d4c-f1d46c1a002e"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="122 SM081 CreerDossierV3 sans donnees additionnelles FAST et sans id demande" id="671646e0-77cf-4168-ba25-3459dae29f6a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="122 SM081 CreerDossierV3 sans donnees additionnelles FAST et sans id demande" id="1cf61fed-6feb-4a0d-bf7b-1a330ebff518"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>NME01</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7231b518-ceb7-4f5d-aacd-2dbaae40dc79"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="af7233f2-aa37-40ad-bc3c-bb592277a5a6"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="1c644fb7-b9a0-4027-b043-7cef8f465ecb"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="ec3f43e2-5987-4185-af24-ef8c5c55722c"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="c11ee73b-685a-4805-88d2-5a78c9285277"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="123 SM081 CreerDossierV3 sans donnees additionnelles FAST et avec id demande" id="f3cec808-eeee-4832-9055-3a164570ef59"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CreerDossierPort</con:interface><con:operation>creerDossier</con:operation><con:request name="123 SM081 CreerDossierV3 sans donnees additionnelles FAST et avec id demande" id="2e486ade-778c-4256-b627-ed2b4c40ddfa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://${#TestSuite#urlWebService}/clfy_crdsrV3/CreerDossier/V3.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cre="http://sigc.sfr.com/creerDossier">
   <soapenv:Header/>
   <soapenv:Body>
      <cre:creerDossier>
         <cre:sessionId><![CDATA[${#TestSuite#sessionId}]]]]>><![CDATA[</cre:sessionId>
         <cre:entete>
            <cre:idTransaction>08833022${=new Date().format("yyyyMMddHHmmssSSS")}000</cre:idTransaction>
            <cre:numeroFlux>FFLINT3022</cre:numeroFlux>
            <cre:ssaEmetteur>0883</cre:ssaEmetteur>
            <cre:versionFlux>03.00</cre:versionFlux>
            <cre:dateOrigineFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateOrigineFlux>
            <cre:ssaRecepteur>0284</cre:ssaRecepteur>
            <cre:dateTraitementFlux>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:dateTraitementFlux>
            <cre:typeFlux>QU</cre:typeFlux>
         </cre:entete>
         <cre:question>
            <cre:utilisateur>${#TestSuite#utilisateur}</cre:utilisateur>
            <cre:canal>RC</cre:canal>
            <cre:clfyIdContact>${#TestCase#contactObjid1}</cre:clfyIdContact>
            <cre:idTechDemande>${#TestCase#tmpDemande1.objid}</cre:idTechDemande>
            <cre:idFoncCompteClient>${#TestCase#tmpClient1.ccTitu.idFonc}</cre:idFoncCompteClient>
            <cre:activiteDossier>ACT036</cre:activiteDossier>
            <cre:motifDossier>ADM_02</cre:motifDossier>
            <cre:themeDossier>NME01</cre:themeDossier>
            <cre:nomUtilisateur>TESTEUR</cre:nomUtilisateur>
            <cre:prenomUtilisateur>Toto</cre:prenomUtilisateur>
            <cre:validation>true</cre:validation>
            <cre:note>note</cre:note>
            <cre:comment>commentaire</cre:comment>
            <cre:codeSIOffre>${#TestCase#tmpClient1.csu.codeScs}</cre:codeSIOffre>
            <cre:numeroSIOffre>${#TestCase#tmpClient1.csu.numeroCsu}</cre:numeroSIOffre>
            <cre:internalDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:internalDate>
            <cre:clientDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:clientDate>
            <cre:soonestDate>${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSS")}</cre:soonestDate>
            <cre:utilisateurInCharge>${#TestSuite#utilisateur}</cre:utilisateurInCharge>
         </cre:question>
      </cre:creerDossier>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2102cd2c-850e-40a6-b50b-3d255f4cbec6"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="SOAP Response" id="9471c16b-074d-4338-9fd3-db46ae25844b"/><con:assertion type="XPath Match" name="XPath Match - VerifierCodeRetour" id="ea87609d-a31e-4946-b591-c2d9de99d92f"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:codeRetour[1]</path><content>0000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match - VerifierIdFoncDossier" id="a46b5ba5-4cc7-43c5-89be-b43cc67941b1"><con:configuration><path>declare namespace m='http://sigc.sfr.com/creerDossier';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace soapenc='http://schemas.xmlsoap.org/soap/encoding/';
declare namespace n1='http://sigc.sfr.com/creerDossier';
exists(//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1])</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - VerifierExistenceDossierBdd" id="7022b76f-c740-412e-8862-e5992a6cb65e"><con:configuration><scriptText>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder;
import groovy.sql.Sql;
import java.sql.ResultSet;

def testCase = messageExchange.modelItem.testStep.testCase;
def xmlResponse = new XmlHolder( messageExchange.responseContentAsXml );

assert messageExchange.responseContent != null : "No XML response";

String idNumberDossier = xmlResponse["//m:creerDossierResponse[1]/n1:result[1]/n1:reponse[1]/n1:idFoncDossier[1]"];
//log.info( "xmlResponse.idNumberDossier = " + idNumberDossier );

assert idNumberDossier != null &amp;&amp; idNumberDossier != "" : "No 'idFoncDossier' field in the XML Response";

// Database connection
GroovyUtils.registerJdbcDriver( "oracle.jdbc.driver.OracleDriver" );
Sql sql = Sql.newInstance( testCase.testSuite.getPropertyValue( "urlDatabase" ) );
sql.resultSetConcurrency = ResultSet.CONCUR_READ_ONLY;

def rows = sql.rows( """
SELECT objid FROM TABLE_CASE WHERE id_number = ${idNumberDossier} and x_dossier = 1
"""
);

String strIdNumberDossier = ( idNumberDossier == null || idNumberDossier.length() == 0 || idNumberDossier.startsWith( "[Ljava.lang.String;@" ) ) ? "" : idNumberDossier;

assert rows.size() >= 1 : "Database record not found : idNumberDossier = '${strIdNumberDossier}'";
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="999 Resultats" id="e43e2c64-23dd-4eb0-8597-155c4cbe3d57" disabled="true"><con:settings/><con:config><script><![CDATA[// TestRunner reports :
// CSV report of all TestSteps
// CSV report of all SMs
// TXT reports of each TestSteps
// Main HTML report with frames

String projectName   = testRunner.testCase.testSuite.project.name;
String urlWebService = testRunner.testCase.testSuite.getPropertyValue( "urlWebService" );

final String NEW_LINE = System.getProperty( "line.separator" );
final String SEP = ";";

File reportsDir = new File( testRunner.testCase.testSuite.project.getPropertyValue( "reports.dir" ) );
reportsDir.deleteDir(); // delete the "reports" directory with all contained files and subdirectories
if( !reportsDir.exists() )
{
    reportsDir.mkdir();
}

def csvFile1 = new File( reportsDir, "reports.csv" );
def csvFile2 = new File( reportsDir, "reports-SM.csv" );

def htmlFile = new File( reportsDir, "reports.html" );

def timestamp = new Date().format( "yyyy-MM-dd HH:mm" );

// CSV and TXT reports
def mapSm   = [:].withDefault { 0 };
def mapSmOK = [:].withDefault { 0 };
def mapSmIdName = [:];
def mapSmIdUrl = [:];
int nbSMTestSteps = 0;
int nbSMTestStepsOK = 0;

csvFile1.write( "Timestamp" + SEP + "SM" + SEP + "NbTestStepsOK" + SEP + "Status" + SEP + "TestStepName" + SEP + "FailedAssertions/ErrorMessages" + SEP + NEW_LINE );
for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
    log.info(testStepName);
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String idSM = "";
    String nomSM = "";
    def matcher = ( testStepName =~ / (SM[0-9]{3}) ([a-zA-Z0-9\\-_]+)(?= |$)/ );
    
    if( matcher.find() )
    {
    	   idSM  = matcher[0][1];
    	   nomSM = matcher[0][2];
    }
    
    String simpleErrorMessage = "";
    String fullErrorMessage   = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            simpleErrorMessage += ( ( index > 0 ) ? it.substring( 0, index + 1 ) : it ).replace( "\n", ". " ).replace( "\r", ". " ) + ". ";
            fullErrorMessage   += it + NEW_LINE;
        }
        simpleErrorMessage = simpleErrorMessage.trim();
        fullErrorMessage   = fullErrorMessage.trim();
    }
    
    if( idSM != null && idSM.length() > 0 )
    {
        mapSm[ idSM ]++;
        mapSmOK[ idSM ] += statusCodeOK;
        mapSmIdName[ idSM ] = nomSM;
        mapSmIdUrl[ idSM ] = context.expand( r.testStep.getPropertyValue( "Endpoint" ) );
        
        nbSMTestSteps++;
        nbSMTestStepsOK += statusCodeOK;
        
        csvFile1.append( timestamp + SEP + idSM + SEP + statusCodeOK + SEP + status + SEP + testStepName + SEP + simpleErrorMessage + SEP + NEW_LINE );
    }
    
    def txtFile = new File( reportsDir, testStepName.replace( " ", "_" ) + ".txt" );
    txtFile.write ( "Project    : " + projectName + NEW_LINE );
    txtFile.append( "Test Suite : " + testRunner.testCase.testSuite.name + NEW_LINE );
    txtFile.append( "Test Case  : " + testRunner.testCase.name + NEW_LINE );
    txtFile.append( "Test Step  : " + testStepName + NEW_LINE );
    txtFile.append( "Status     : " + status + NEW_LINE );
    txtFile.append( "Timestamp  : " + new Date( r.timeStamp ).format( "yyyy-MM-dd HH:mm:ss" ) + NEW_LINE );
    txtFile.append( "Duration   : " + r.timeTaken + " ms" + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "Failed assertions / Error messages :" + NEW_LINE + fullErrorMessage + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "URL : " + context.expand( r.testStep.getPropertyValue( "Endpoint" ) ) + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "XML Request :" + NEW_LINE + r.testStep.getPropertyValue( "RawRequest" ) + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
    txtFile.append( "XML Response :" + NEW_LINE + r.testStep.getPropertyValue( "Response" ) + NEW_LINE );
    txtFile.append( "----------------------------------------" + NEW_LINE );
}

csvFile2.write( "Timestamp" + SEP + "SM" + SEP + "WebService" + SEP + "NbTestStepsOK" + SEP + "NbTotalTestSteps" + SEP + NEW_LINE );
mapSm.sort().each() {
    key, value -> csvFile2.append( timestamp + SEP + key + SEP + mapSmIdName[ key ] + SEP + mapSmOK[ key ] + SEP + value + SEP + NEW_LINE );
}
csvFile2.append( timestamp + SEP + "TOTAL" + SEP + "" + SEP + nbSMTestStepsOK + SEP + nbSMTestSteps + SEP + NEW_LINE );


// HTML reports : dashboard header
String htmlHeader = """<html>
<head>
<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
<title>${projectName} ${timestamp}</title>

<style type='text/css'>
* {
    color: black;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 10pt;
}

body {
    background-color: white;
    color: #858585;
    font-family: Arial, Helvetica, sans-serif;
}

table {
    background-color: #a6c1f4;
    border: #6495ed 3px solid;
}

td {
    background-color: white;
    border: #6495ed 1px solid;
    padding: 2px;
}

.titreRapport {
    color: black;
    font-weight: bold;
    font-size: 16pt;
    text-align: center;
    padding: 5px;
}

.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
}

a.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
    text-decoration: none;
}

.titre2 {
    background-color: #ffb43f;
    color: black;
    font-weight: bold;
    text-align: center;
    padding: 2px;
}

.titre3 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data1 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data2 {
    background-color: #a6c1f4;
    color: black;
}

.data3 {
    background-color: #dbe6fa;
    color: black;
}

.blue {
    background-color: #9ec6fd;
}

.red {
    background-color: red;
}

.green {
    background-color: #33ff66;
}

.orange {
    background-color: #ff9900;
}

</style>

</head>
<body>
<center>

<span class="titreRapport">SOAPUI unitary tests report : ${projectName}<br>http://${urlWebService}<br>${timestamp}</span>
<br/>
<br/>
<br/>
""";
htmlFile.write( htmlHeader );

// SM tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\"><a class=\"titre1\" href=\"" + csvFile2.getName() + "\" title=\"" + csvFile2.getName() + "\">SM report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">SM</td>" );
htmlFile.append( "<td class=\"titre2\">WebService</td>" );
htmlFile.append( "<td class=\"titre2\">Nb test steps OK</td>" );
htmlFile.append( "<td class=\"titre2\">Nb total test steps</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for ( e in mapSm.sort() ) {
    String idSM = e.key;
    int nbOk = mapSmOK[ e.key ];
    int nbTotal = e.value;
    String color = "data3";
    if( nbOk == 0 ) { color = "red"; }
    if( nbOk > 0 && nbOk == nbTotal ) { color = "green"; }
    if( nbOk > 0 && nbOk < nbTotal ) { color = "orange"; }
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td class=\"" + color + "\">" + idSM + "</td>" );
    htmlFile.append( "<td class=\"" + color + "\">" + mapSmIdName[ idSM ] + "</td>" );
    htmlFile.append( "<td class=\"" + color + "\" align=\"right\">" + nbOk + "</td>" );
    htmlFile.append( "<td class=\"data3\" align=\"right\">" + nbTotal + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"data1\">" + "TOTAL" + "</td>" );
htmlFile.append( "<td class=\"data1\">" + "" + "</td>" );
htmlFile.append( "<td class=\"data1\" align=\"right\">" + nbSMTestStepsOK + "</td>" );
htmlFile.append( "<td class=\"data1\" align=\"right\">" + nbSMTestSteps + "</td>" );
htmlFile.append( "</tr>" + NEW_LINE );
htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );

// TestSteps tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\"><a class=\"titre1\" href=\"" + csvFile1.getName() + "\" title=\"" + csvFile1.getName() + "\">Test steps report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">Test step name</td>" );
htmlFile.append( "<td class=\"titre2\">SM</td>" );
htmlFile.append( "<td class=\"titre2\">Status</td>" );
htmlFile.append( "<td class=\"titre2\">Failed assertions / Error messages</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String idSM = "";
    def matcher = ( testStepName =~ / (SM[0-9]{3}) / );
    if( matcher.find() )
    {
    	   idSM = matcher[0][1];
    }
    
    String htmlErrorMessage = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            String assertionName = ( index > 0 ) ? it.substring( 0, index + 1 ) : it;
            htmlErrorMessage += assertionName + "<br/>";
        }
        htmlErrorMessage = htmlErrorMessage.trim();
    }
    
    String statusColor = ( statusCodeOK == 1 ) ? "green" : "red";
    String testStepTxtFilename = testStepName.replace( " ", "_" ) + ".txt";
    
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td class=\"" + ( ( idSM != null && idSM.length() > 0 ) ? "data2" : "data3" ) + "\"><a href=\"" + testStepTxtFilename + "\" title=\"View current XML request/response\">" + testStepName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td class=\"" + ( ( idSM != null && idSM.length() > 0 ) ? "data2" : "data3" ) + "\" align=\"center\">" + idSM + "</td>" );
    htmlFile.append( "<td class=\"" + statusColor + "\" align=\"center\">" + status + "</td>" );
    htmlFile.append( "<td class=\"data3\">" + htmlErrorMessage + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );

// WebServices URL tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"3\">${projectName}</td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">SM</td>" );
htmlFile.append( "<td class=\"titre2\">WebService</td>" );
htmlFile.append( "<td class=\"titre2\">URL</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for ( e in mapSm.sort() ) {
    String idSM = e.key;
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td class=\"data3\">" + idSM + "</td>" );
    htmlFile.append( "<td class=\"data3\">" + mapSmIdName[ idSM ] + "</td>" );
    htmlFile.append( "<td class=\"data3\">" + mapSmIdUrl[ idSM ] + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );

// Dashboard footer
htmlFile.append( NEW_LINE );
htmlFile.append( "</body>" + NEW_LINE );
htmlFile.append( "</html>" + NEW_LINE );]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of 999 Resultats" id="a92b74dd-ca18-40db-9fc7-db980e1f2dfd"><con:settings/><con:config><script><![CDATA[// TestRunner reports :
// CSV report of all TestSteps
// CSV report of all SMs
// TXT reports of each TestSteps
// Main HTML report with frames

String projectName   = testRunner.testCase.testSuite.project.name;
String urlWebService = testRunner.testCase.testSuite.getPropertyValue( "urlWebService" );

final String NEW_LINE = System.getProperty( "line.separator" );
final String SEP = ";";

File reportsDir = new File( testRunner.testCase.testSuite.project.getPropertyValue( "reports.dir" ) );
reportsDir.deleteDir(); // delete the "reports" directory with all contained files and subdirectories
if( !reportsDir.exists() )
{
    reportsDir.mkdir();
}

String testCaseName = testRunner.testCase.name
  
String extention = ".html"

String reportName = testCaseName + extention;
log.info "${reportName}";

def htmlFile = new File( reportsDir, "${reportName}" );

def timestamp = new Date().format( "yyyy-MM-dd HH:mm" );

// CSV and TXT reports
def mapSm   = [:].withDefault { 0 };
def mapSmOK = [:].withDefault { 0 };
def mapSmIdName = [:];
def mapSmIdUrl = [:];
int nbSMTestSteps = 0;
int nbSMTestStepsOK = 0;

// HTML reports : dashboard header
String htmlHeader = """<html>
<head>
<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
<title>${projectName} ${timestamp}</title>

<style type='text/css'>
* {
    color: black;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 10pt;
}

body {
    background-color: white;
    color: #858585;
    font-family: Arial, Helvetica, sans-serif;
}

table {
    background-color: #a6c1f4;
    border: #6495ed 3px solid;
}

td {
    background-color: white;
    border: #6495ed 1px solid;
    padding: 2px;
}

.titreRapport {
    color: black;
    font-weight: bold;
    font-size: 16pt;
    text-align: center;
    padding: 5px;
}

.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
}

a.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
    text-decoration: none;
}

.titre2 {
    background-color: #ffb43f;
    color: black;
    font-weight: bold;
    text-align: center;
    padding: 2px;
}

.titre3 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data1 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data2 {
    background-color: #a6c1f4;
    color: black;
}

.data3 {
    background-color: #dbe6fa;
    color: black;
}

.blue {
    background-color: #9ec6fd;
}

.red {
    background-color: red;
}

.green {
    background-color: #33ff66;
}

.orange {
    background-color: #ff9900;
}

</style>

</head>
<body>
<center>

<span class="titreRapport">SOAPUI tests report : ${projectName}<br>http://${urlWebService}<br>${timestamp}</span>
<br/>
<br/>
<br/>
""";
htmlFile.write( htmlHeader );


// TestSteps tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\">Test steps report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">Test case name</td>" );
htmlFile.append( "<td class=\"titre2\">Test step name</td>" );
htmlFile.append( "<td class=\"titre2\">Status</td>" );
htmlFile.append( "</tr>" + NEW_LINE );


for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
    //log.info "${testStepName}";
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String htmlErrorMessage = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            String assertionName = ( index > 0 ) ? it.substring( 0, index + 1 ) : it;
            htmlErrorMessage += assertionName + "<br/>";
        }
        htmlErrorMessage = htmlErrorMessage.trim();
    }
    
    String statusColor = ( statusCodeOK == 1 ) ? "green" : "red";
    String testStepTxtFilename = testStepName.replace( " ", "_" ) + ".txt";
    
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td>" + testCaseName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td>" + testStepName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td class=\"" + statusColor + "\" align=\"center\">" + status + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );




// Dashboard footer
htmlFile.append( NEW_LINE );
htmlFile.append( "</body>" + NEW_LINE );
htmlFile.append( "</html>" + NEW_LINE );]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Copy of 999 Resultats" id="a2b49982-f638-4a67-87d2-cac74a5502aa" disabled="true"><con:settings/><con:config><script>/**
*
* Below is the TearDown script for SoapUI Project level
* Which create a custom report in a  given file
* Modify the variable "reportFileName" below
*
**/
//Modify the file as needed for report file
//def reportFileName = '/tmp/abctestreport.txt'
//Adding the below as user wants specific directory
//Get the project path

def dataFolder =  new com.eviware.soapui.support.GroovyUtils(context).projectPath

//Create today's date for storing response
def today = new Date().format("yyyy-MM-dd")

def filePrefix = "${dataFolder}/TestReports/xxx_WebAPI_${today}" as String

def fileNamePart = new Date().format("yyyy-MM-dd'T'HH.mm.ss")

//creating filename dynamically.
def reportFileName = "${filePrefix}/xxx_WebAPI_TestReport_${fileNamePart}.txt" as String


//NOTE: Not required to edit beyond this point

/**
* This class holds the test case details
**/
class TestCaseResultHolder {
    def log
    Map&lt;String, String> properties = [:]
    boolean status

    def createProperties(testCase) {
        testCase.getPropertyNames().each { key ->
            properties[key] = testCase.getPropertyValue(key)
        }       
    }

    def getCaseResult(caseRunner, caseName) {
        log.info "Checking test case status ${caseName}"
        if ( caseRunner.status.toString() == 'FAILED' ){
            log.error "Test case $caseName has failed"
            for ( stepResult in caseRunner?.results ){
                stepResult.messages.each() { msg -> log.info msg }
            }
            return false
        } else {
            log.info "${caseName} is passed"
        }
        true
    }

    def buildCaseResult(caseRunner, caseName) {
        status = getCaseResult(caseRunner, caseName)
        if (!status) {
            createProperties(caseRunner.testCase)
        }
    }

}

/**
* This class holds the test suite details
**/
class SuiteResultsHolder {

    def log
    Map&lt;String, TestCaseResultHolder> casaeResults = [:]
    int testCaseCount = 0
    int passedCasesCount = 0
    int failedCasesCount = 0

    def buildSuiteResults(suiteRunner, suiteName){      
        log.info "Building results of test suite ${suiteName}"
        for ( caseRunner in suiteRunner?.results ) {
            def caseName = caseRunner.testCase.name
            testCaseCount++
            def tcHolder = new TestCaseResultHolder(log: log)
            tcHolder.buildCaseResult(caseRunner, caseName)          
            casaeResults[caseName] = tcHolder
            if (tcHolder.status) {
                passedCasesCount++
            } else {
                failedCasesCount++
            }
        }
    }

    def getStatus() {
        (0 &lt; failedCasesCount) ? false : true
    }

}

/**
* This class holds the project details
**/
class ProjectResultsHolder {

    def log
    Map&lt;String, SuiteResultsHolder> suiteResults = [:]
    int suiteCount = 0
    int passedSuitecount = 0
    int failedSuiteCount = 0

    def buildProjectResults(projectRunner, projectName) {
        log.info "Building results of test project ${projectName}"          
        for(suiteRunner in projectRunner?.results) {
            def suiteName =  suiteRunner.testSuite.name
            suiteCount++
            def suiteResultsHolder = new SuiteResultsHolder(log: log)
            suiteResultsHolder.buildSuiteResults(suiteRunner, suiteName)
            suiteResults[suiteName] = suiteResultsHolder
            if (suiteResultsHolder.status) {
                passedSuitecount++
            } else {
                failedSuiteCount++
            }
        }
    }

    def getStatus() {
        (0 &lt; failedSuiteCount) ? false : true
    }

}

//Get the status string based on boolean
def getResult(status){ status == true ? 'SUCCEED' : 'FAILED'}

//Draws a line
def drawLine(def letter = '=', def count = 70) { letter.multiply(count)}

//Gets the summary report
def getSummaryReport(project, projectResultHolder) {
    def report = new StringBuffer()
    report.append(drawLine()).append('\n')
    report.append("\t\t\tTest Execution Summary\n")
    report.append(drawLine('-', 60)).append('\n')
    report.append("Project : ${project.name}\n")
    report.append("Result : ${getResult(projectResultHolder.status)}\n")
    report.append("Total test suites executed: ${projectResultHolder.suiteCount}\n")
    report.append("Test suites passed: ${projectResultHolder.passedSuitecount}\n")
    report.append("Test suites failed: ${projectResultHolder.failedSuiteCount}\n")
    report.append(drawLine()).append('\n')
    report
}

//Gets the test case report
def getTestCaseReport(testCaseReport) {
    def report = new StringBuffer()
    report.append(drawLine('-', 60)).append('\n')
    report.append("\t\tTest Case Details:\n")
    report.append(drawLine('-', 60)).append('\n')
    testCaseReport.each { kase, tcReport ->
        report.append("Name : ${kase}\n")
        report.append("Status : ${getResult(tcReport.status)}\n")
        if (!tcReport.status) {
            report.append("Properties : ${tcReport.properties.toString()}\n")
        }
    }
    report
}

//Get the detailed report
def getDetailedReport(projectResultHolder) {
    def report = new StringBuffer()
    report.append(drawLine()).append('\n')
    report.append("\t\t\tTest Execution Detailed Report\n")
    report.append(drawLine()).append('\n')
    projectResultHolder.suiteResults.each { suite, details ->
        report.append("Test Suite : ${suite}\n")
        report.append("Result : ${getResult(details.status)}\n")
        report.append("Total Cases : ${details.testCaseCount}\n")
        report.append("Cases Passed : ${details.passedCasesCount}\n")
        report.append("Cases Failed: ${details.failedCasesCount}\n")
        report.append(getTestCaseReport(details.casaeResults))
        report.append(drawLine()).append('\n')
        report.append(drawLine()).append('\n')
    }
    report
}

//Save the contents to a file
def saveToFile(file, content) {
    if (!file.parentFile.exists()) {
        file.parentFile.mkdirs()
        log.info "Directory did not exist, created"
    }
    file.write(content) 
    assert file.exists(), "${file.name} not created"
}

def holder = new ProjectResultsHolder(log: log)
holder.buildProjectResults(runner, project.name)

def finalReport = new StringBuffer()
finalReport.append(getSummaryReport(project, holder))
finalReport.append(getDetailedReport(holder))

def reportFile = new File(reportFileName)
saveToFile(reportFile, finalReport.toString())</script></con:config></con:testStep><con:tearDownScript/><con:properties><con:property><con:name>typologieClient</con:name><con:value>PP ORIAN T&lt;>P&lt;>U 3lignes</con:value></con:property><con:property><con:name>ccTituIdFonc</con:name><con:value>01-T00JZ7</con:value></con:property><con:property><con:name>contactObjid1</con:name><con:value>7193091</con:value></con:property><con:property><con:name>contactToCloseObjid2</con:name><con:value>8860028</con:value></con:property><con:property><con:name>actionProactiveToCloseObjid2</con:name><con:value>2023907</con:value></con:property><con:property><con:name>tmpClient1.ccTitu.objid</con:name><con:value>30146469</con:value></con:property><con:property><con:name>tmpClient1.ccTitu.idFonc</con:name><con:value>01-T00JZ7</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.objid</con:name><con:value>46209625</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.idFonc</con:name><con:value>154016</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.civilite</con:name><con:value>MR</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.nom</con:name><con:value>TESTEUR 803</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.prenom</con:name><con:value>Titi</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.dateNaissance</con:name><con:value>1982-01-01</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.deptNaissance</con:name><con:value>56</con:value></con:property><con:property><con:name>tmpClient1.ppTitu.email</con:name><con:value>test1803@gmail.com</con:value></con:property><con:property><con:name>tmpClient1.adrTitu.objid</con:name><con:value>45842875</con:value></con:property><con:property><con:name>tmpClient1.ccPayeur.objid</con:name><con:value>30146470</con:value></con:property><con:property><con:name>tmpClient1.ccPayeur.idFonc</con:name><con:value>01-T00JZ7-01</con:value></con:property><con:property><con:name>tmpClient1.ppPayeur.objid</con:name><con:value>46209626</con:value></con:property><con:property><con:name>tmpClient1.ppPayeur.idFonc</con:name><con:value>154017</con:value></con:property><con:property><con:name>tmpClient1.ppUtil.objid</con:name><con:value>46209627</con:value></con:property><con:property><con:name>tmpClient1.ppUtil.idFonc</con:name><con:value>154018</con:value></con:property><con:property><con:name>tmpClient1.cf.objid</con:name><con:value>25350700</con:value></con:property><con:property><con:name>tmpClient1.cf.idFonc</con:name><con:value>01-T00JZ7-70-T007ZJ</con:value></con:property><con:property><con:name>tmpClient1.mp.objid</con:name><con:value>27330721</con:value></con:property><con:property><con:name>tmpClient1.csu.objid</con:name><con:value>57129077</con:value></con:property><con:property><con:name>tmpClient1.csu.numLignePrinc</con:name><con:value>0653544995</con:value></con:property><con:property><con:name>tmpClient1.csu.codeScs</con:name><con:value>01</con:value></con:property><con:property><con:name>tmpClient1.csu.numeroCsu</con:name><con:value>T007ZJ</con:value></con:property><con:property><con:name>tmpDemande1.objid</con:name><con:value>6995507</con:value></con:property><con:property><con:name>tmpDemande1.idNumber</con:name><con:value>0006487925</con:value></con:property><con:property><con:name>tmpDemande1.idExterne</con:name><con:value>424</con:value></con:property><con:property><con:name>tmpDemandeToClose2.objid</con:name><con:value>6995569</con:value></con:property><con:property><con:name>tmpDemandeToClose2.idNumber</con:name><con:value>0006487959</con:value></con:property><con:property><con:name>tmpDemandeToClose2.idExterne</con:name><con:value>440</con:value></con:property><con:property><con:name>tmpDossier1.objid</con:name><con:value>6994867</con:value></con:property><con:property><con:name>tmpDossier1.idNumber</con:name><con:value>0006487446</con:value></con:property><con:property><con:name>tmpDossier1.idExterne</con:name><con:value>4785</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>wsUsername</con:name><con:value>user_ws_vs</con:value></con:property><con:property><con:name>urlWebService</con:name><con:value>rns038hp:15011</con:value></con:property><con:property><con:name>sessionId</con:name><con:value>rns038hp.rennes.si.fr.atosorigin.com_1371438390729_7881795_88;MHjnuFxrL4ci9ZqVWhUXMQQCMOYOK7LeEMF/N7YP7WfUmsXYKTOe7FMWtu6ME2E11.OhdJHJVJq4M7rOHsJ93fKYwJiELXpiLHsv5Gg/sqPkE6OB/eUmcW.OoQkXo4tDNZ/gqcSMtR2Mm0k9Wf75vqD5VQbiSar8esjOwCwzw/QWT72A9./1EWeUxYMAoYZFoIaBeIr3he2Cc3hrgrzIsUKncY/YRKBadG8QZLgqayF6wQ0mdg0iBwywnS3EQk7iaibZtb7wZQ6gHUTsA6waNl6w..YzVI9z96/Gmmu.2sH2wWasOgVg9Q964LqLU1Es7n56NTbxd.smX5StzWsgQwOsEZiiXungrWmC8tnvorcZUivAz12qjUZs4rsCCCL9gkntj/osGKgA80UPN6nrAF.uAXtdqO3FcwjU8vXrKFbIgCaa9vn5RNacHXJRI2qoiSEvXLyuUNC1D2buiTv7Dz5PotFgBhMgPXCI.j3nwZ5v.fYV7WzcT5.yRckYQ.Rfewnv.h3CFNGzIq2w.ZoQcHZDI1MsJzCfazdLLUMqUfrXWFkjU$$EXT&lt;Tksmau3BfhOKOoNvgYyHf1mDrBbfTGqBGLRTLFQ0;appId=CRM;></con:value></con:property><con:property><con:name>urlDatabase</con:name><con:value>jdbc:oracle:thin:sa/sa@rns006hp:1521:DMCLY0P1</con:value></con:property><con:property><con:name>utilisateur</con:name><con:value>Id4179E</con:value></con:property></con:properties><con:tearDownScript/></con:testSuite><con:properties><con:property><con:name>reports.dir</con:name><con:value>D:\SOAPUI</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:afterRunScript><![CDATA[// TestRunner reports :
// CSV report of all TestSteps
// CSV report of all SMs
// TXT reports of each TestSteps
// Main HTML report with frames

String projectName   = testRunner.testCase.testSuite.project.name;
String urlWebService = testRunner.testCase.testSuite.getPropertyValue( "urlWebService" );

final String NEW_LINE = System.getProperty( "line.separator" );
final String SEP = ";";

File reportsDir = new File( testRunner.testCase.testSuite.project.getPropertyValue( "reports.dir" ) );
reportsDir.deleteDir(); // delete the "reports" directory with all contained files and subdirectories
if( !reportsDir.exists() )
{
    reportsDir.mkdir();
}

def htmlFile = new File( reportsDir, "reports.html" );

def timestamp = new Date().format( "yyyy-MM-dd HH:mm" );

// CSV and TXT reports
def mapSm   = [:].withDefault { 0 };
def mapSmOK = [:].withDefault { 0 };
def mapSmIdName = [:];
def mapSmIdUrl = [:];
int nbSMTestSteps = 0;
int nbSMTestStepsOK = 0;

// HTML reports : dashboard header
String htmlHeader = """<html>
<head>
<meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
<title>${projectName} ${timestamp}</title>

<style type='text/css'>
* {
    color: black;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 10pt;
}

body {
    background-color: white;
    color: #858585;
    font-family: Arial, Helvetica, sans-serif;
}

table {
    background-color: #a6c1f4;
    border: #6495ed 3px solid;
}

td {
    background-color: white;
    border: #6495ed 1px solid;
    padding: 2px;
}

.titreRapport {
    color: black;
    font-weight: bold;
    font-size: 16pt;
    text-align: center;
    padding: 5px;
}

.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
}

a.titre1 {
    background-color: #ffa519;
    color: black;
    font-weight: bold;
    font-size: 12pt;
    text-align: center;
    padding: 5px;
    text-decoration: none;
}

.titre2 {
    background-color: #ffb43f;
    color: black;
    font-weight: bold;
    text-align: center;
    padding: 2px;
}

.titre3 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data1 {
    background-color: #a6c1f4;
    color: black;
    font-weight: bold;
}

.data2 {
    background-color: #a6c1f4;
    color: black;
}

.data3 {
    background-color: #dbe6fa;
    color: black;
}

.blue {
    background-color: #9ec6fd;
}

.red {
    background-color: red;
}

.green {
    background-color: #33ff66;
}

.orange {
    background-color: #ff9900;
}

</style>

</head>
<body>
<center>

<span class="titreRapport">SOAPUI unitary tests report : ${projectName}<br>http://${urlWebService}<br>${timestamp}</span>
<br/>
<br/>
<br/>
""";
htmlFile.write( htmlHeader );


// TestSteps tab
htmlFile.append( NEW_LINE );
htmlFile.append( "<table cellSpacing=\"1\" cellPadding=\"1\" border=\"1\">" + NEW_LINE );
htmlFile.append( "<tr><td class=\"titre1\" colspan=\"4\">Test steps report : ${projectName}</a></td></tr>" + NEW_LINE );
htmlFile.append( "<tr>" );
htmlFile.append( "<td class=\"titre2\">Test step name</td>" );
htmlFile.append( "<td class=\"titre2\">Status</td>" );
htmlFile.append( "</tr>" + NEW_LINE );

for( r in testRunner.getResults() )
{
    String testStepName = r.testStep.name;
	log.info "${testStepName}";
    String status = r.status;
    int statusCodeOK = ( status == "OK" ) ? 1 : 0;
    
    String htmlErrorMessage = "";
    if( statusCodeOK == 0 )
    {
        r.messages.each() {
            int index = it.indexOf( ']' );
            String assertionName = ( index > 0 ) ? it.substring( 0, index + 1 ) : it;
            htmlErrorMessage += assertionName + "<br/>";
        }
        htmlErrorMessage = htmlErrorMessage.trim();
    }
    
    String statusColor = ( statusCodeOK == 1 ) ? "green" : "red";
    String testStepTxtFilename = testStepName.replace( " ", "_" ) + ".txt";
    
    htmlFile.append( "<tr>" );
    htmlFile.append( "<td>" + testStepName.replace( " ", "&nbsp;" ) + "</a></td>" );
    htmlFile.append( "<td class=\"" + statusColor + "\" align=\"center\">" + status + "</td>" );
    htmlFile.append( "</tr>" + NEW_LINE );
}

htmlFile.append( "</table>" + NEW_LINE );

htmlFile.append( NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( "<br/>" + NEW_LINE );
htmlFile.append( NEW_LINE );




// Dashboard footer
htmlFile.append( NEW_LINE );
htmlFile.append( "</body>" + NEW_LINE );
htmlFile.append( "</html>" + NEW_LINE );]]></con:afterRunScript><con:sensitiveInformation/></con:soapui-project>